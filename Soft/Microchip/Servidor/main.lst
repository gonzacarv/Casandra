CCS PCH C Compiler, Version 4.140, 32554               25-abr.-17 13:52

               Filename:   D:\2.Datos\Electronica\Proyectos\Microchip\Proyecto Casandra\Version final\Soft\Servidor\main.lst

               ROM used:   58802 bytes (90%)
                           Largest free fragment is 6730
               RAM used:   367 (9%) at main() level
                           426 (11%) worst case
               Stack:     15 worst case (8 in main + 7 for interrupts)

*
00000:  GOTO   E3A8
*
00008:  MOVWF  04
0000A:  MOVFF  FD8,05
0000E:  MOVFF  FE0,06
00012:  MOVLB  0
00014:  MOVFF  FE9,0C
00018:  MOVFF  FEA,07
0001C:  MOVFF  FE1,08
00020:  MOVFF  FE2,09
00024:  MOVFF  FD9,0A
00028:  MOVFF  FDA,0B
0002C:  MOVFF  FF3,12
00030:  MOVFF  FF4,13
00034:  MOVFF  FFA,14
00038:  MOVFF  FF5,15
0003C:  MOVFF  FF6,16
00040:  MOVFF  FF7,17
00044:  MOVFF  00,0E
00048:  MOVFF  01,0F
0004C:  MOVFF  02,10
00050:  MOVFF  03,11
00054:  BTFSS  F9D.0
00056:  GOTO   0060
0005A:  BTFSC  F9E.0
0005C:  GOTO   2F72
00060:  BTFSS  F9D.5
00062:  GOTO   006C
00066:  BTFSC  F9E.5
00068:  GOTO   1D8A
0006C:  MOVFF  0E,00
00070:  MOVFF  0F,01
00074:  MOVFF  10,02
00078:  MOVFF  11,03
0007C:  MOVFF  0C,FE9
00080:  MOVFF  07,FEA
00084:  BSF    07.7
00086:  MOVFF  08,FE1
0008A:  MOVFF  09,FE2
0008E:  MOVFF  0A,FD9
00092:  MOVFF  0B,FDA
00096:  MOVFF  12,FF3
0009A:  MOVFF  13,FF4
0009E:  MOVFF  14,FFA
000A2:  MOVFF  15,FF5
000A6:  MOVFF  16,FF6
000AA:  MOVFF  17,FF7
000AE:  MOVF   04,W
000B0:  MOVFF  06,FE0
000B4:  MOVFF  05,FD8
000B8:  RETFIE 0
.................... /*====================================================================================================== 
.................... ||   Proyecto: Casandra v1.0                                                                          || 
.................... ||   Autor: Gonzalo Carvallo (gonzacarv@gmail.com)                                                    || 
.................... ||   Fecha: 07/2014                                                                                   || 
.................... ||   Compilador: PCWHD v5.025 (www.ccsinfo.com)                                                       || 
.................... ||   Fuente: http://                                                                                  || 
.................... ||                                                                                                    || 
.................... || Firmware del modulo servidor (display, teclado, sensor de humedad y temperatura) correspondiente   || 
.................... || al sistema domotico CASANDRA. Control general con uso intensivo de EEPROM. Comunicacion sobre par  || 
.................... || trenzado usando el transceptor SN75176.                                                            || 
.................... ||                                                                                                    || 
.................... ======================================================================================================*/ 
....................  
.................... #include <18f4620.h> 
.................... //////// Standard Header file for the PIC18F4620 device //////////////// 
.................... #device PIC18F4620 
.................... #list 
....................  
....................  
.................... //#byte TMR1H = 0xFCF // Le pongo nombre al registro alto de timer 1 
.................... //#byte TMR1L = 0xFCE // Le pongo nombre al registro bajo de timer 1 
.................... #device ADC=10 
.................... #fuses XT, MCLR, WDT1024 // Opciones de configuración 
.................... //#fuses XT, NOIESO, NOFCMEN, NOPUT, NOPROTECT, NOPBADEN, NOLVP, NOBROWNOUT, MCLR, WDT1024, NOLPT1OSC // Opciones de configuración 
....................  
.................... #use delay(clock=4000000)  // Reloj de 4MHz 
*
01456:  MOVLW  01
01458:  MOVWF  FEA
0145A:  MOVLW  A8
0145C:  MOVWF  FE9
0145E:  MOVF   FEF,W
01460:  BZ    147E
01462:  MOVLW  01
01464:  MOVWF  01
01466:  CLRF   00
01468:  DECFSZ 00,F
0146A:  BRA    1468
0146C:  DECFSZ 01,F
0146E:  BRA    1466
01470:  MOVLW  4A
01472:  MOVWF  00
01474:  DECFSZ 00,F
01476:  BRA    1474
01478:  BRA    147A
0147A:  DECFSZ FEF,F
0147C:  BRA    1462
0147E:  RETURN 0
.................... #use rs232(baud=2400, xmit=PIN_C6, rcv=PIN_C7, enable=PIN_D4, ERRORS) // Comunicacion serial 
*
0143E:  BTFSS  F9E.5
01440:  BRA    143E
01442:  MOVFF  FAB,1A
01446:  MOVFF  FAE,01
0144A:  BTFSS  1A.1
0144C:  BRA    1452
0144E:  BCF    FAB.4
01450:  BSF    FAB.4
01452:  GOTO   1DA8 (RETURN)
*
015D6:  BCF    F95.4
015D8:  BSF    F8C.4
015DA:  BTFSS  F9E.4
015DC:  BRA    15DA
015DE:  MOVLB  1
015E0:  MOVFF  1A6,FAD
015E4:  NOP   
015E6:  BCF    F95.4
015E8:  BSF    F8C.4
015EA:  BTFSS  FAC.1
015EC:  BRA    15EA
015EE:  BCF    F95.4
015F0:  BCF    F8C.4
015F2:  MOVLB  0
015F4:  RETURN 0
....................  
.................... //#include "DHT11.h" 
.................... #include "FLEX_LCD_164.c" 
.................... // flex_lcd.c  
....................  
.................... // These pins are for the Microchip PicDem2-Plus board,  
.................... // which is what I used to test the driver.  Change these  
.................... // pins to fit your own board.  
....................  
.................... #define LCD_DB4   PIN_D0 
.................... #define LCD_DB5   PIN_C2 
.................... #define LCD_DB6   PIN_C1 
.................... #define LCD_DB7   PIN_C0 
....................  
.................... #define LCD_RS    PIN_D3   //PIN_C4 
.................... #define LCD_RW    PIN_D2 
.................... #define LCD_E     PIN_D1   //PIN_C6 
....................  
....................  
....................  
....................  
.................... /* 
.................... #define LCD_DB4   PIN_A5 
.................... #define LCD_DB5   PIN_C0 
.................... #define LCD_DB6   PIN_C1 
.................... #define LCD_DB7   PIN_C2 
....................  
.................... #define LCD_E     PIN_A4 
.................... #define LCD_RS    PIN_A2 
.................... #define LCD_RW    PIN_A3 
.................... */ 
.................... /* 
....................  
.................... #define LCD_DB4   PIN_G2 
.................... #define LCD_DB5   PIN_J0 
.................... #define LCD_DB6   PIN_G3 
.................... #define LCD_DB7   PIN_J1 
....................  
.................... #define LCD_E     PIN_C4 
.................... #define LCD_RS    PIN_C3 
.................... #define LCD_RW    PIN_C2 
....................  
.................... */ 
....................  
.................... // If you only want a 6-pin interface to your LCD, then  
.................... // connect the R/W pin on the LCD to ground, and comment  
.................... // out the following line.  
....................  
.................... #define USE_LCD_RW   1       
....................  
.................... //========================================  
....................  
.................... #define lcd_type 2        // 0=5x7, 1=5x10, 2=2 lines  
.................... #define lcd_line_one 0x00 // LCD RAM address for the 2nd line  
.................... #define lcd_line_two 0x40 // LCD RAM address for the 2nd line  
.................... #define lcd_line_three 0x14 // LCD RAM address for the 2nd line  
.................... #define lcd_line_four 0x54 // LCD RAM address for the 2nd line  
....................  
....................  
.................... int8 const LCD_INIT_STRING[4] =  
.................... {  
....................  0x20 | (lcd_type << 2), // Func set: 4-bit, 2 lines, 5x8 dots  
....................  0xc,                    // Display on  
....................  1,                      // Clear display  
....................  6                       // Increment cursor  
....................  };  
....................                                
....................  
.................... //-------------------------------------  
.................... void lcd_send_nibble(int8 nibble)  
.................... {  
.................... // Note:  !! converts an integer expression  
.................... // to a boolean (1 or 0).  
....................  output_bit(LCD_DB4, !!(nibble & 1));  
*
014DC:  MOVLB  1
014DE:  BTFSC  xA7.0
014E0:  BRA    14E6
014E2:  BCF    F8C.0
014E4:  BRA    14E8
014E6:  BSF    F8C.0
014E8:  BCF    F95.0
....................  output_bit(LCD_DB5, !!(nibble & 2));   
014EA:  BTFSC  xA7.1
014EC:  BRA    14F2
014EE:  BCF    F8B.2
014F0:  BRA    14F4
014F2:  BSF    F8B.2
014F4:  BCF    F94.2
....................  output_bit(LCD_DB6, !!(nibble & 4));     
014F6:  BTFSC  xA7.2
014F8:  BRA    14FE
014FA:  BCF    F8B.1
014FC:  BRA    1500
014FE:  BSF    F8B.1
01500:  BCF    F94.1
....................  output_bit(LCD_DB7, !!(nibble & 8));     
01502:  BTFSC  xA7.3
01504:  BRA    150A
01506:  BCF    F8B.0
01508:  BRA    150C
0150A:  BSF    F8B.0
0150C:  BCF    F94.0
....................  
....................  delay_cycles(1);  
0150E:  NOP   
....................  output_high(LCD_E);  
01510:  BCF    F95.1
01512:  BSF    F8C.1
....................  delay_us(2);  
01514:  BRA    1516
....................  output_low(LCD_E);  
01516:  BCF    F95.1
01518:  BCF    F8C.1
.................... }  
0151A:  MOVLB  0
0151C:  RETURN 0
....................  
.................... //-----------------------------------  
.................... // This sub-routine is only called by lcd_read_byte().  
.................... // It's not a stand-alone routine.  For example, the  
.................... // R/W signal is set high by lcd_read_byte() before  
.................... // this routine is called.       
....................  
.................... #ifdef USE_LCD_RW  
.................... int8 lcd_read_nibble(void)  
.................... {  
.................... int8 retval;  
.................... // Create bit variables so that we can easily set  
.................... // individual bits in the retval variable.  
.................... #bit retval_0 = retval.0  
.................... #bit retval_1 = retval.1  
.................... #bit retval_2 = retval.2  
.................... #bit retval_3 = retval.3  
....................  
.................... retval = 0;  
*
01480:  MOVLB  1
01482:  CLRF   xA8
....................      
.................... output_high(LCD_E);  
01484:  BCF    F95.1
01486:  BSF    F8C.1
.................... delay_cycles(1);  
01488:  NOP   
....................  
.................... retval_0 = input(LCD_DB4);  
0148A:  BSF    F95.0
0148C:  BCF    xA8.0
0148E:  BTFSC  F83.0
01490:  BSF    xA8.0
.................... retval_1 = input(LCD_DB5);  
01492:  BSF    F94.2
01494:  BCF    xA8.1
01496:  BTFSC  F82.2
01498:  BSF    xA8.1
.................... retval_2 = input(LCD_DB6);  
0149A:  BSF    F94.1
0149C:  BCF    xA8.2
0149E:  BTFSC  F82.1
014A0:  BSF    xA8.2
.................... retval_3 = input(LCD_DB7);  
014A2:  BSF    F94.0
014A4:  BCF    xA8.3
014A6:  BTFSC  F82.0
014A8:  BSF    xA8.3
....................    
.................... output_low(LCD_E);  
014AA:  BCF    F95.1
014AC:  BCF    F8C.1
....................      
.................... return(retval);     
014AE:  MOVFF  1A8,01
.................... }     
014B2:  MOVLB  0
014B4:  RETURN 0
.................... #endif  
....................  
.................... //---------------------------------------  
.................... // Read a byte from the LCD and return it.  
....................  
.................... #ifdef USE_LCD_RW  
.................... int8 lcd_read_byte(void)  
.................... {  
.................... int8 low;  
.................... int8 high;  
....................  
.................... output_high(LCD_RW);  
014B6:  BCF    F95.2
014B8:  BSF    F8C.2
.................... delay_cycles(1);  
014BA:  NOP   
....................  
.................... high = lcd_read_nibble();  
014BC:  RCALL  1480
014BE:  MOVFF  01,1A7
....................  
.................... low = lcd_read_nibble();  
014C2:  RCALL  1480
014C4:  MOVFF  01,1A6
....................  
.................... return( (high<<4) | low);  
014C8:  MOVLB  1
014CA:  SWAPF  xA7,W
014CC:  MOVWF  00
014CE:  MOVLW  F0
014D0:  ANDWF  00,F
014D2:  MOVF   00,W
014D4:  IORWF  xA6,W
014D6:  MOVWF  01
.................... }  
014D8:  MOVLB  0
014DA:  RETURN 0
.................... #endif  
....................  
.................... //----------------------------------------  
.................... // Send a byte to the LCD.  
.................... void lcd_send_byte(int8 address, int8 n)  
.................... {  
.................... output_low(LCD_RS);  
*
0151E:  BCF    F95.3
01520:  BCF    F8C.3
....................  
.................... #ifdef USE_LCD_RW  
.................... while(bit_test(lcd_read_byte(),7)) ;  
01522:  RCALL  14B6
01524:  MOVFF  01,1A6
01528:  MOVLB  1
0152A:  BTFSS  01.7
0152C:  BRA    1532
0152E:  MOVLB  0
01530:  BRA    1522
.................... #else  
.................... delay_us(60);   
.................... #endif  
....................  
.................... if(address)  
01532:  MOVF   xA4,F
01534:  BZ    153C
....................    output_high(LCD_RS);  
01536:  BCF    F95.3
01538:  BSF    F8C.3
.................... else  
0153A:  BRA    1540
....................    output_low(LCD_RS);  
0153C:  BCF    F95.3
0153E:  BCF    F8C.3
....................        
....................  delay_cycles(1);  
01540:  NOP   
....................  
.................... #ifdef USE_LCD_RW  
.................... output_low(LCD_RW);  
01542:  BCF    F95.2
01544:  BCF    F8C.2
.................... delay_cycles(1);  
01546:  NOP   
.................... #endif  
....................  
.................... output_low(LCD_E);  
01548:  BCF    F95.1
0154A:  BCF    F8C.1
....................  
.................... lcd_send_nibble(n >> 4);  
0154C:  SWAPF  xA5,W
0154E:  MOVWF  xA6
01550:  MOVLW  0F
01552:  ANDWF  xA6,F
01554:  MOVFF  1A6,1A7
01558:  MOVLB  0
0155A:  RCALL  14DC
.................... lcd_send_nibble(n & 0xf);  
0155C:  MOVLB  1
0155E:  MOVF   xA5,W
01560:  ANDLW  0F
01562:  MOVWF  xA6
01564:  MOVWF  xA7
01566:  MOVLB  0
01568:  RCALL  14DC
.................... }  
0156A:  RETURN 0
....................  
.................... //----------------------------  
.................... void lcd_init(void)  
.................... {  
.................... int8 i;  
....................  
.................... output_low(LCD_RS);  
*
03D34:  BCF    F95.3
03D36:  BCF    F8C.3
....................  
.................... #ifdef USE_LCD_RW  
.................... output_low(LCD_RW);  
03D38:  BCF    F95.2
03D3A:  BCF    F8C.2
.................... #endif  
....................  
.................... output_low(LCD_E);  
03D3C:  BCF    F95.1
03D3E:  BCF    F8C.1
03D40:  CLRF   19
03D42:  BTFSC  FF2.7
03D44:  BSF    19.7
03D46:  BCF    FF2.7
....................  
.................... delay_ms(15);  
03D48:  MOVLW  0F
03D4A:  MOVLB  1
03D4C:  MOVWF  xA8
03D4E:  MOVLB  0
03D50:  CALL   1456
03D54:  BTFSC  19.7
03D56:  BSF    FF2.7
....................  
.................... for(i=0 ;i < 3; i++)  
03D58:  MOVLB  1
03D5A:  CLRF   x70
03D5C:  MOVF   x70,W
03D5E:  SUBLW  02
03D60:  BNC   3D96
03D62:  CLRF   19
03D64:  BTFSC  FF2.7
03D66:  BSF    19.7
03D68:  BCF    FF2.7
....................    {  
....................     lcd_send_nibble(0x03);  
03D6A:  MOVLW  03
03D6C:  MOVWF  xA7
03D6E:  MOVLB  0
03D70:  CALL   14DC
03D74:  BTFSC  19.7
03D76:  BSF    FF2.7
03D78:  CLRF   19
03D7A:  BTFSC  FF2.7
03D7C:  BSF    19.7
03D7E:  BCF    FF2.7
....................     delay_ms(5);  
03D80:  MOVLW  05
03D82:  MOVLB  1
03D84:  MOVWF  xA8
03D86:  MOVLB  0
03D88:  CALL   1456
03D8C:  BTFSC  19.7
03D8E:  BSF    FF2.7
....................    }  
03D90:  MOVLB  1
03D92:  INCF   x70,F
03D94:  BRA    3D5C
03D96:  CLRF   19
03D98:  BTFSC  FF2.7
03D9A:  BSF    19.7
03D9C:  BCF    FF2.7
....................  
.................... lcd_send_nibble(0x02);  
03D9E:  MOVLW  02
03DA0:  MOVWF  xA7
03DA2:  MOVLB  0
03DA4:  CALL   14DC
03DA8:  BTFSC  19.7
03DAA:  BSF    FF2.7
....................  
.................... for(i=0; i < sizeof(LCD_INIT_STRING); i++)  
03DAC:  MOVLB  1
03DAE:  CLRF   x70
03DB0:  MOVF   x70,W
03DB2:  SUBLW  03
03DB4:  BNC   3DE0
....................    {  
....................     lcd_send_byte(0, LCD_INIT_STRING[i]);  
03DB6:  CLRF   03
03DB8:  MOVF   x70,W
03DBA:  MOVLB  0
03DBC:  CALL   00BA
03DC0:  MOVLB  1
03DC2:  MOVWF  x71
03DC4:  CLRF   19
03DC6:  BTFSC  FF2.7
03DC8:  BSF    19.7
03DCA:  BCF    FF2.7
03DCC:  CLRF   xA4
03DCE:  MOVWF  xA5
03DD0:  MOVLB  0
03DD2:  CALL   151E
03DD6:  BTFSC  19.7
03DD8:  BSF    FF2.7
....................      
....................     // If the R/W signal is not used, then  
....................     // the busy bit can't be polled.  One of  
....................     // the init commands takes longer than  
....................     // the hard-coded delay of 60 us, so in  
....................     // that case, lets just do a 5 ms delay  
....................     // after all four of them.  
....................     #ifndef USE_LCD_RW  
....................     delay_ms(5);  
....................     #endif  
....................    }  
03DDA:  MOVLB  1
03DDC:  INCF   x70,F
03DDE:  BRA    3DB0
....................  
.................... }  
03DE0:  MOVLB  0
03DE2:  GOTO   3F7C (RETURN)
....................  
.................... //----------------------------  
....................  
.................... void lcd_gotoxy(int8 x, int8 y)  
.................... {  
.................... int8 address;  
....................  
.................... switch(y){ 
*
0156C:  MOVLW  01
0156E:  MOVLB  1
01570:  SUBWF  xA1,W
01572:  ADDLW  FC
01574:  BC    159E
01576:  ADDLW  04
01578:  MOVLB  0
0157A:  GOTO   15B4
....................    case 1: 
....................       address = lcd_line_one;  
0157E:  MOVLB  1
01580:  CLRF   xA2
....................    break; 
01582:  BRA    159E
....................        
....................    case 2: 
....................       address = lcd_line_two;  
01584:  MOVLW  40
01586:  MOVLB  1
01588:  MOVWF  xA2
....................    break; 
0158A:  BRA    159E
....................  
....................    case 3: 
....................       address = lcd_line_three;  
0158C:  MOVLW  14
0158E:  MOVLB  1
01590:  MOVWF  xA2
....................    break; 
01592:  BRA    159E
....................  
....................    case 4: 
....................       address = lcd_line_four;  
01594:  MOVLW  54
01596:  MOVLB  1
01598:  MOVWF  xA2
....................    break; 
0159A:  BRA    159E
0159C:  MOVLB  1
....................  
....................  
.................... } 
....................  
.................... address += x-1;  
0159E:  MOVLW  01
015A0:  SUBWF  xA0,W
015A2:  ADDWF  xA2,F
.................... lcd_send_byte(0, 0x80 | address);  
015A4:  MOVF   xA2,W
015A6:  IORLW  80
015A8:  MOVWF  xA3
015AA:  CLRF   xA4
015AC:  MOVWF  xA5
015AE:  MOVLB  0
015B0:  RCALL  151E
.................... }  
015B2:  RETURN 0
....................  
.................... //-----------------------------  
.................... void lcd_putc(char c)  
.................... {  
....................  switch(c)  
....................    {  
*
03DE6:  MOVLB  1
03DE8:  MOVF   x93,W
03DEA:  XORLW  0C
03DEC:  MOVLB  0
03DEE:  BZ    3DFA
03DF0:  XORLW  06
03DF2:  BZ    3E2E
03DF4:  XORLW  02
03DF6:  BZ    3E4C
03DF8:  BRA    3E68
....................     case '\f':  
03DFA:  CLRF   19
03DFC:  BTFSC  FF2.7
03DFE:  BSF    19.7
03E00:  BCF    FF2.7
....................       lcd_send_byte(0,1);  
03E02:  MOVLB  1
03E04:  CLRF   xA4
03E06:  MOVLW  01
03E08:  MOVWF  xA5
03E0A:  MOVLB  0
03E0C:  CALL   151E
03E10:  BTFSC  19.7
03E12:  BSF    FF2.7
03E14:  CLRF   19
03E16:  BTFSC  FF2.7
03E18:  BSF    19.7
03E1A:  BCF    FF2.7
....................       delay_ms(2);  
03E1C:  MOVLW  02
03E1E:  MOVLB  1
03E20:  MOVWF  xA8
03E22:  MOVLB  0
03E24:  CALL   1456
03E28:  BTFSC  19.7
03E2A:  BSF    FF2.7
....................       break;  
03E2C:  BRA    3E84
....................      
....................     case '\n':  
03E2E:  CLRF   19
03E30:  BTFSC  FF2.7
03E32:  BSF    19.7
03E34:  BCF    FF2.7
....................        lcd_gotoxy(1,2);  
03E36:  MOVLW  01
03E38:  MOVLB  1
03E3A:  MOVWF  xA0
03E3C:  MOVLW  02
03E3E:  MOVWF  xA1
03E40:  MOVLB  0
03E42:  CALL   156C
03E46:  BTFSC  19.7
03E48:  BSF    FF2.7
....................        break;  
03E4A:  BRA    3E84
....................      
....................     case '\b':  
03E4C:  CLRF   19
03E4E:  BTFSC  FF2.7
03E50:  BSF    19.7
03E52:  BCF    FF2.7
....................        lcd_send_byte(0,0x10);  
03E54:  MOVLB  1
03E56:  CLRF   xA4
03E58:  MOVLW  10
03E5A:  MOVWF  xA5
03E5C:  MOVLB  0
03E5E:  CALL   151E
03E62:  BTFSC  19.7
03E64:  BSF    FF2.7
....................        break;  
03E66:  BRA    3E84
03E68:  CLRF   19
03E6A:  BTFSC  FF2.7
03E6C:  BSF    19.7
03E6E:  BCF    FF2.7
....................      
....................     default:  
....................        lcd_send_byte(1,c);  
03E70:  MOVLW  01
03E72:  MOVLB  1
03E74:  MOVWF  xA4
03E76:  MOVFF  193,1A5
03E7A:  MOVLB  0
03E7C:  CALL   151E
03E80:  BTFSC  19.7
03E82:  BSF    FF2.7
....................        break;  
....................    }  
.................... }  
03E84:  RETURN 0
....................  
.................... //------------------------------  
.................... #ifdef USE_LCD_RW  
.................... char lcd_getc(int8 x, int8 y)  
.................... {  
.................... char value;  
....................  
.................... lcd_gotoxy(x,y);  
....................  
.................... // Wait until busy flag is low.  
.................... while(bit_test(lcd_read_byte(),7));   
....................  
.................... output_high(LCD_RS);  
.................... value = lcd_read_byte();  
.................... output_low(lcd_RS);  
....................  
.................... return(value);  
.................... }  
.................... #endif 
....................  
.................... #include "DS1307.c" 
....................  
.................... #define RTC_SDA  PIN_C4 
.................... #define RTC_SCL  PIN_C3 
....................  
.................... #use i2c(master, fast, sda=RTC_SDA, scl=RTC_SCL) 
*
01E3E:  MOVLW  08
01E40:  MOVWF  01
01E42:  NOP   
01E44:  BCF    F8B.3
01E46:  BCF    F94.3
01E48:  NOP   
01E4A:  MOVLB  1
01E4C:  RLCF   xA1,F
01E4E:  BCF    F8B.4
01E50:  BTFSC  FD8.0
01E52:  BSF    F94.4
01E54:  BTFSS  FD8.0
01E56:  BCF    F94.4
01E58:  BSF    F94.3
01E5A:  BTFSS  F82.3
01E5C:  BRA    1E5A
01E5E:  DECFSZ 01,F
01E60:  BRA    1E64
01E62:  BRA    1E68
01E64:  MOVLB  0
01E66:  BRA    1E42
01E68:  NOP   
01E6A:  BCF    F8B.3
01E6C:  BCF    F94.3
01E6E:  NOP   
01E70:  BSF    F94.4
01E72:  NOP   
01E74:  NOP   
01E76:  BSF    F94.3
01E78:  BTFSS  F82.3
01E7A:  BRA    1E78
01E7C:  CLRF   01
01E7E:  NOP   
01E80:  BTFSC  F82.4
01E82:  BSF    01.0
01E84:  BCF    F8B.3
01E86:  BCF    F94.3
01E88:  BCF    F8B.4
01E8A:  BCF    F94.4
01E8C:  MOVLB  0
01E8E:  RETURN 0
01E90:  MOVLW  08
01E92:  MOVLB  1
01E94:  MOVWF  xA2
01E96:  MOVFF  00,1A3
01E9A:  BSF    F94.4
01E9C:  NOP   
01E9E:  BSF    F94.3
01EA0:  BTFSS  F82.3
01EA2:  BRA    1EA0
01EA4:  BTFSC  F82.4
01EA6:  BSF    FD8.0
01EA8:  BTFSS  F82.4
01EAA:  BCF    FD8.0
01EAC:  RLCF   01,F
01EAE:  NOP   
01EB0:  BCF    F94.3
01EB2:  BCF    F8B.3
01EB4:  DECFSZ xA2,F
01EB6:  BRA    1E9A
01EB8:  BSF    F94.4
01EBA:  NOP   
01EBC:  BCF    F8B.4
01EBE:  MOVF   xA3,W
01EC0:  BTFSS  FD8.2
01EC2:  BCF    F94.4
01EC4:  NOP   
01EC6:  BSF    F94.3
01EC8:  BTFSS  F82.3
01ECA:  BRA    1EC8
01ECC:  NOP   
01ECE:  BCF    F8B.3
01ED0:  BCF    F94.3
01ED2:  NOP   
01ED4:  BCF    F8B.4
01ED6:  BCF    F94.4
01ED8:  MOVLB  0
01EDA:  RETURN 0
....................  
.................... //BYTE bin2bcd(BYTE binary_value); 
.................... //BYTE bcd2bin(BYTE bcd_value); 
....................  
.................... int8 bin2bcd(int8 binary_value) 
.................... { 
....................   int8 temp; 
....................   char retval; 
....................  
....................   temp = binary_value; 
*
03B80:  MOVFF  18A,18B
....................   retval = 0; 
03B84:  MOVLB  1
03B86:  CLRF   x8C
....................  
....................   while(1) 
....................   { 
....................     // Get the tens digit by doing multiple subtraction 
....................     // of 10 from the binary value. 
....................     if(temp >= 10) 
03B88:  MOVF   x8B,W
03B8A:  SUBLW  09
03B8C:  BC    3B98
....................     { 
....................       temp -= 10; 
03B8E:  MOVLW  0A
03B90:  SUBWF  x8B,F
....................       retval += 0x10; 
03B92:  MOVLW  10
03B94:  ADDWF  x8C,F
....................     } 
....................     else // Get the ones digit by adding the remainder. 
03B96:  BRA    3B9E
....................     { 
....................       retval += temp; 
03B98:  MOVF   x8B,W
03B9A:  ADDWF  x8C,F
....................       break; 
03B9C:  BRA    3BA0
....................     } 
....................   } 
03B9E:  BRA    3B88
....................  
....................   return(retval); 
03BA0:  MOVFF  18C,01
.................... } 
03BA4:  MOVLB  0
03BA6:  RETURN 0
....................  
.................... // Input range - 00 to 99. 
.................... char bcd2bin(char bcd_value) 
.................... { 
....................   char temp; 
....................  
....................   temp = bcd_value; 
*
01EDC:  MOVFF  1A2,1A3
....................   // Shifting upper digit right by 1 is same as multiplying by 8. 
....................   temp >>= 1; 
01EE0:  BCF    FD8.0
01EE2:  MOVLB  1
01EE4:  RRCF   xA3,F
....................   // Isolate the bits for the upper digit. 
....................   temp &= 0x78; 
01EE6:  MOVLW  78
01EE8:  ANDWF  xA3,F
....................  
....................   // Now return: (Tens * 8) + (Tens * 2) + Ones 
....................  
....................   return(temp + (temp >> 2) + (bcd_value & 0x0f)); 
01EEA:  RRCF   xA3,W
01EEC:  MOVWF  00
01EEE:  RRCF   00,F
01EF0:  MOVLW  3F
01EF2:  ANDWF  00,F
01EF4:  MOVF   00,W
01EF6:  ADDWF  xA3,W
01EF8:  MOVWF  xA4
01EFA:  MOVF   xA2,W
01EFC:  ANDLW  0F
01EFE:  ADDWF  xA4,W
01F00:  MOVWF  01
.................... } 
01F02:  MOVLB  0
01F04:  RETURN 0
....................  
.................... void ds1307_init(void) 
.................... { 
*
03BA8:  MOVLB  1
03BAA:  CLRF   x70
....................    BYTE seconds = 0; 
....................  
....................    i2c_start(); 
03BAC:  BSF    F94.4
03BAE:  NOP   
03BB0:  BSF    F94.3
03BB2:  NOP   
03BB4:  BCF    F8B.4
03BB6:  BCF    F94.4
03BB8:  NOP   
03BBA:  BCF    F8B.3
03BBC:  BCF    F94.3
03BBE:  CLRF   19
03BC0:  BTFSC  FF2.7
03BC2:  BSF    19.7
03BC4:  BCF    FF2.7
....................    i2c_write(0xD0);      // WR to RTC 
03BC6:  MOVLW  D0
03BC8:  MOVWF  xA1
03BCA:  MOVLB  0
03BCC:  CALL   1E3E
03BD0:  BTFSC  19.7
03BD2:  BSF    FF2.7
03BD4:  CLRF   19
03BD6:  BTFSC  FF2.7
03BD8:  BSF    19.7
03BDA:  BCF    FF2.7
....................    i2c_write(0x00);      // REG 0 
03BDC:  MOVLB  1
03BDE:  CLRF   xA1
03BE0:  MOVLB  0
03BE2:  CALL   1E3E
03BE6:  BTFSC  19.7
03BE8:  BSF    FF2.7
....................    i2c_start(); 
03BEA:  BSF    F94.4
03BEC:  NOP   
03BEE:  BSF    F94.3
03BF0:  NOP   
03BF2:  BTFSS  F82.3
03BF4:  BRA    3BF2
03BF6:  BCF    F8B.4
03BF8:  BCF    F94.4
03BFA:  NOP   
03BFC:  BCF    F8B.3
03BFE:  BCF    F94.3
03C00:  CLRF   19
03C02:  BTFSC  FF2.7
03C04:  BSF    19.7
03C06:  BCF    FF2.7
....................    i2c_write(0xD1);      // RD from RTC 
03C08:  MOVLW  D1
03C0A:  MOVLB  1
03C0C:  MOVWF  xA1
03C0E:  MOVLB  0
03C10:  CALL   1E3E
03C14:  BTFSC  19.7
03C16:  BSF    FF2.7
....................    seconds = bcd2bin(i2c_read(0)); // Read current "seconds" in DS1307 
03C18:  CLRF   00
03C1A:  CLRF   19
03C1C:  BTFSC  FF2.7
03C1E:  BSF    19.7
03C20:  BCF    FF2.7
03C22:  CALL   1E90
03C26:  BTFSC  19.7
03C28:  BSF    FF2.7
03C2A:  MOVFF  01,171
03C2E:  CLRF   19
03C30:  BTFSC  FF2.7
03C32:  BSF    19.7
03C34:  BCF    FF2.7
03C36:  MOVFF  01,1A2
03C3A:  CALL   1EDC
03C3E:  BTFSC  19.7
03C40:  BSF    FF2.7
03C42:  MOVFF  01,170
....................    i2c_stop(); 
03C46:  BCF    F94.4
03C48:  NOP   
03C4A:  BSF    F94.3
03C4C:  BTFSS  F82.3
03C4E:  BRA    3C4C
03C50:  NOP   
03C52:  BRA    3C54
03C54:  NOP   
03C56:  BSF    F94.4
03C58:  NOP   
....................    seconds &= 0x7F; 
03C5A:  MOVLB  1
03C5C:  BCF    x70.7
....................  
....................    delay_us(3); 
03C5E:  BRA    3C60
03C60:  NOP   
....................  
....................    i2c_start(); 
03C62:  BSF    F94.4
03C64:  NOP   
03C66:  BSF    F94.3
03C68:  NOP   
03C6A:  BCF    F8B.4
03C6C:  BCF    F94.4
03C6E:  NOP   
03C70:  BCF    F8B.3
03C72:  BCF    F94.3
03C74:  CLRF   19
03C76:  BTFSC  FF2.7
03C78:  BSF    19.7
03C7A:  BCF    FF2.7
....................    i2c_write(0xD0);      // WR to RTC 
03C7C:  MOVLW  D0
03C7E:  MOVWF  xA1
03C80:  MOVLB  0
03C82:  CALL   1E3E
03C86:  BTFSC  19.7
03C88:  BSF    FF2.7
03C8A:  CLRF   19
03C8C:  BTFSC  FF2.7
03C8E:  BSF    19.7
03C90:  BCF    FF2.7
....................    i2c_write(0x00);      // REG 0 
03C92:  MOVLB  1
03C94:  CLRF   xA1
03C96:  MOVLB  0
03C98:  CALL   1E3E
03C9C:  BTFSC  19.7
03C9E:  BSF    FF2.7
....................    i2c_write(bin2bcd(seconds));     // Start oscillator with current "seconds value 
03CA0:  MOVFF  170,18A
03CA4:  RCALL  3B80
03CA6:  MOVFF  01,171
03CAA:  CLRF   19
03CAC:  BTFSC  FF2.7
03CAE:  BSF    19.7
03CB0:  BCF    FF2.7
03CB2:  MOVFF  01,1A1
03CB6:  CALL   1E3E
03CBA:  BTFSC  19.7
03CBC:  BSF    FF2.7
....................    i2c_start(); 
03CBE:  BSF    F94.4
03CC0:  NOP   
03CC2:  BSF    F94.3
03CC4:  NOP   
03CC6:  BTFSS  F82.3
03CC8:  BRA    3CC6
03CCA:  BCF    F8B.4
03CCC:  BCF    F94.4
03CCE:  NOP   
03CD0:  BCF    F8B.3
03CD2:  BCF    F94.3
03CD4:  CLRF   19
03CD6:  BTFSC  FF2.7
03CD8:  BSF    19.7
03CDA:  BCF    FF2.7
....................    i2c_write(0xD0);      // WR to RTC 
03CDC:  MOVLW  D0
03CDE:  MOVLB  1
03CE0:  MOVWF  xA1
03CE2:  MOVLB  0
03CE4:  CALL   1E3E
03CE8:  BTFSC  19.7
03CEA:  BSF    FF2.7
03CEC:  CLRF   19
03CEE:  BTFSC  FF2.7
03CF0:  BSF    19.7
03CF2:  BCF    FF2.7
....................    i2c_write(0x07);      // Control Register 
03CF4:  MOVLW  07
03CF6:  MOVLB  1
03CF8:  MOVWF  xA1
03CFA:  MOVLB  0
03CFC:  CALL   1E3E
03D00:  BTFSC  19.7
03D02:  BSF    FF2.7
03D04:  CLRF   19
03D06:  BTFSC  FF2.7
03D08:  BSF    19.7
03D0A:  BCF    FF2.7
....................    i2c_write(0x80);     // Disable squarewave output pin 
03D0C:  MOVLW  80
03D0E:  MOVLB  1
03D10:  MOVWF  xA1
03D12:  MOVLB  0
03D14:  CALL   1E3E
03D18:  BTFSC  19.7
03D1A:  BSF    FF2.7
....................    i2c_stop(); 
03D1C:  BCF    F94.4
03D1E:  NOP   
03D20:  BSF    F94.3
03D22:  BTFSS  F82.3
03D24:  BRA    3D22
03D26:  NOP   
03D28:  BRA    3D2A
03D2A:  NOP   
03D2C:  BSF    F94.4
03D2E:  NOP   
....................  
.................... } 
03D30:  GOTO   3F7A (RETURN)
....................  
.................... void ds1307_set_date_time(BYTE day, int8 mth, BYTE year, BYTE dow, BYTE hr, BYTE min, BYTE sec) 
.................... { 
....................   sec &= 0x7F; 
*
0D0C4:  MOVLB  1
0D0C6:  BCF    x89.7
....................   hr &= 0x3F; 
0D0C8:  MOVLW  3F
0D0CA:  ANDWF  x87,F
....................  
....................   i2c_start(); 
0D0CC:  BSF    F94.4
0D0CE:  NOP   
0D0D0:  BSF    F94.3
0D0D2:  NOP   
0D0D4:  BCF    F8B.4
0D0D6:  BCF    F94.4
0D0D8:  NOP   
0D0DA:  BCF    F8B.3
0D0DC:  BCF    F94.3
0D0DE:  CLRF   19
0D0E0:  BTFSC  FF2.7
0D0E2:  BSF    19.7
0D0E4:  BCF    FF2.7
....................   i2c_write(0xD0);            // I2C write address 
0D0E6:  MOVLW  D0
0D0E8:  MOVWF  xA1
0D0EA:  MOVLB  0
0D0EC:  CALL   1E3E
0D0F0:  BTFSC  19.7
0D0F2:  BSF    FF2.7
0D0F4:  CLRF   19
0D0F6:  BTFSC  FF2.7
0D0F8:  BSF    19.7
0D0FA:  BCF    FF2.7
....................   i2c_write(0x00);            // Start at REG 0 - Seconds 
0D0FC:  MOVLB  1
0D0FE:  CLRF   xA1
0D100:  MOVLB  0
0D102:  CALL   1E3E
0D106:  BTFSC  19.7
0D108:  BSF    FF2.7
....................   i2c_write(bin2bcd(sec));      // REG 0 
0D10A:  MOVFF  189,18A
0D10E:  CALL   3B80
0D112:  MOVFF  01,18A
0D116:  CLRF   19
0D118:  BTFSC  FF2.7
0D11A:  BSF    19.7
0D11C:  BCF    FF2.7
0D11E:  MOVFF  01,1A1
0D122:  CALL   1E3E
0D126:  BTFSC  19.7
0D128:  BSF    FF2.7
....................   i2c_write(bin2bcd(min));      // REG 1 
0D12A:  MOVFF  188,18A
0D12E:  CALL   3B80
0D132:  MOVFF  01,18A
0D136:  CLRF   19
0D138:  BTFSC  FF2.7
0D13A:  BSF    19.7
0D13C:  BCF    FF2.7
0D13E:  MOVFF  01,1A1
0D142:  CALL   1E3E
0D146:  BTFSC  19.7
0D148:  BSF    FF2.7
....................   i2c_write(bin2bcd(hr));      // REG 2 
0D14A:  MOVFF  187,18A
0D14E:  CALL   3B80
0D152:  MOVFF  01,18A
0D156:  CLRF   19
0D158:  BTFSC  FF2.7
0D15A:  BSF    19.7
0D15C:  BCF    FF2.7
0D15E:  MOVFF  01,1A1
0D162:  CALL   1E3E
0D166:  BTFSC  19.7
0D168:  BSF    FF2.7
....................   i2c_write(bin2bcd(dow));      // REG 3 
0D16A:  MOVFF  186,18A
0D16E:  CALL   3B80
0D172:  MOVFF  01,18A
0D176:  CLRF   19
0D178:  BTFSC  FF2.7
0D17A:  BSF    19.7
0D17C:  BCF    FF2.7
0D17E:  MOVFF  01,1A1
0D182:  CALL   1E3E
0D186:  BTFSC  19.7
0D188:  BSF    FF2.7
....................   i2c_write(bin2bcd(day));      // REG 4 
0D18A:  MOVFF  183,18A
0D18E:  CALL   3B80
0D192:  MOVFF  01,18A
0D196:  CLRF   19
0D198:  BTFSC  FF2.7
0D19A:  BSF    19.7
0D19C:  BCF    FF2.7
0D19E:  MOVFF  01,1A1
0D1A2:  CALL   1E3E
0D1A6:  BTFSC  19.7
0D1A8:  BSF    FF2.7
....................   i2c_write(bin2bcd(mth));      // REG 5 
0D1AA:  MOVFF  184,18A
0D1AE:  CALL   3B80
0D1B2:  MOVFF  01,18A
0D1B6:  CLRF   19
0D1B8:  BTFSC  FF2.7
0D1BA:  BSF    19.7
0D1BC:  BCF    FF2.7
0D1BE:  MOVFF  01,1A1
0D1C2:  CALL   1E3E
0D1C6:  BTFSC  19.7
0D1C8:  BSF    FF2.7
....................   i2c_write(bin2bcd(year));      // REG 6 
0D1CA:  MOVFF  185,18A
0D1CE:  CALL   3B80
0D1D2:  MOVFF  01,18A
0D1D6:  CLRF   19
0D1D8:  BTFSC  FF2.7
0D1DA:  BSF    19.7
0D1DC:  BCF    FF2.7
0D1DE:  MOVFF  01,1A1
0D1E2:  CALL   1E3E
0D1E6:  BTFSC  19.7
0D1E8:  BSF    FF2.7
0D1EA:  CLRF   19
0D1EC:  BTFSC  FF2.7
0D1EE:  BSF    19.7
0D1F0:  BCF    FF2.7
....................   i2c_write(0x80);            // REG 7 - Disable squarewave output pin 
0D1F2:  MOVLW  80
0D1F4:  MOVLB  1
0D1F6:  MOVWF  xA1
0D1F8:  MOVLB  0
0D1FA:  CALL   1E3E
0D1FE:  BTFSC  19.7
0D200:  BSF    FF2.7
....................   i2c_stop(); 
0D202:  BCF    F94.4
0D204:  NOP   
0D206:  BSF    F94.3
0D208:  BTFSS  F82.3
0D20A:  BRA    D208
0D20C:  NOP   
0D20E:  BRA    D210
0D210:  NOP   
0D212:  BSF    F94.4
0D214:  NOP   
.................... } 
0D216:  RETURN 0
....................  
.................... void ds1307_set_time(byte hr, byte min, byte sec) 
.................... { 
....................   sec &= 0x7F; 
....................   hr &= 0x3F; 
....................   i2c_start(); 
....................   i2c_write(0xD0);            // I2C write address 
....................   i2c_write(0x00);            // Start at REG 0 - Seconds 
....................   i2c_write(bin2bcd(sec));      // REG 0 
....................   i2c_write(bin2bcd(min));      // REG 1 
....................   i2c_write(bin2bcd(hr));      // REG 2 
....................   //i2c_write(0x80);            // REG 7 - Disable squarewave output pin 
....................   i2c_stop(); 
.................... } 
....................  
.................... void ds1307_set_date(byte day, byte mth, byte year, byte dow) 
.................... { 
....................   
....................   i2c_start(); 
....................   i2c_write(0xD0);            // I2C write address 
....................   i2c_write(0x03);            // Start at REG 0 - Seconds 
....................   i2c_write(bin2bcd(dow)); 
....................   i2c_write(bin2bcd(day)); 
....................   i2c_write(bin2bcd(mth)); 
....................   i2c_write(bin2bcd(year)); 
....................   i2c_write(0x80);            // REG 7 - Disable squarewave output pin 
....................   i2c_stop(); 
.................... } 
....................  
.................... void ds1307_get_date(BYTE &day, BYTE &mth, BYTE &year, BYTE &dow) 
.................... { 
....................   i2c_start(); 
*
01F08:  BSF    F94.4
01F0A:  NOP   
01F0C:  BSF    F94.3
01F0E:  NOP   
01F10:  BCF    F8B.4
01F12:  BCF    F94.4
01F14:  NOP   
01F16:  BCF    F8B.3
01F18:  BCF    F94.3
....................   i2c_write(0xD0); 
01F1A:  MOVLW  D0
01F1C:  MOVLB  1
01F1E:  MOVWF  xA1
01F20:  MOVLB  0
01F22:  RCALL  1E3E
....................   i2c_write(0x03);            // Start at REG 3 - Day of week 
01F24:  MOVLW  03
01F26:  MOVLB  1
01F28:  MOVWF  xA1
01F2A:  MOVLB  0
01F2C:  RCALL  1E3E
....................   i2c_start(); 
01F2E:  BSF    F94.4
01F30:  NOP   
01F32:  BSF    F94.3
01F34:  NOP   
01F36:  BTFSS  F82.3
01F38:  BRA    1F36
01F3A:  BCF    F8B.4
01F3C:  BCF    F94.4
01F3E:  NOP   
01F40:  BCF    F8B.3
01F42:  BCF    F94.3
....................   i2c_write(0xD1); 
01F44:  MOVLW  D1
01F46:  MOVLB  1
01F48:  MOVWF  xA1
01F4A:  MOVLB  0
01F4C:  RCALL  1E3E
....................   dow  = bcd2bin(i2c_read() & 0x7f);   // REG 3 
01F4E:  MOVLW  01
01F50:  MOVWF  00
01F52:  RCALL  1E90
01F54:  MOVF   01,W
01F56:  ANDLW  7F
01F58:  MOVLB  1
01F5A:  MOVWF  x9D
01F5C:  MOVWF  xA2
01F5E:  MOVLB  0
01F60:  RCALL  1EDC
01F62:  MOVFF  01,27
....................   day  = bcd2bin(i2c_read() & 0x3f);   // REG 4 
01F66:  MOVLW  01
01F68:  MOVWF  00
01F6A:  RCALL  1E90
01F6C:  MOVF   01,W
01F6E:  ANDLW  3F
01F70:  MOVLB  1
01F72:  MOVWF  x9D
01F74:  MOVWF  xA2
01F76:  MOVLB  0
01F78:  RCALL  1EDC
01F7A:  MOVFF  01,24
....................   mth  = bcd2bin(i2c_read() & 0x1f);   // REG 5 
01F7E:  MOVLW  01
01F80:  MOVWF  00
01F82:  RCALL  1E90
01F84:  MOVF   01,W
01F86:  ANDLW  1F
01F88:  MOVLB  1
01F8A:  MOVWF  x9D
01F8C:  MOVWF  xA2
01F8E:  MOVLB  0
01F90:  RCALL  1EDC
01F92:  MOVFF  01,25
....................   year = bcd2bin(i2c_read(0));            // REG 6 
01F96:  CLRF   00
01F98:  RCALL  1E90
01F9A:  MOVFF  01,19D
01F9E:  MOVFF  01,1A2
01FA2:  RCALL  1EDC
01FA4:  MOVFF  01,26
....................   i2c_stop(); 
01FA8:  BCF    F94.4
01FAA:  NOP   
01FAC:  BSF    F94.3
01FAE:  BTFSS  F82.3
01FB0:  BRA    1FAE
01FB2:  NOP   
01FB4:  BRA    1FB6
01FB6:  NOP   
01FB8:  BSF    F94.4
01FBA:  NOP   
.................... } 
....................  
.................... void ds1307_get_time(BYTE &hr, BYTE &min, BYTE &sec) 
.................... { 
....................   i2c_start(); 
*
01FC8:  BSF    F94.4
01FCA:  NOP   
01FCC:  BSF    F94.3
01FCE:  NOP   
01FD0:  BCF    F8B.4
01FD2:  BCF    F94.4
01FD4:  NOP   
01FD6:  BCF    F8B.3
01FD8:  BCF    F94.3
....................   i2c_write(0xD0); 
01FDA:  MOVLW  D0
01FDC:  MOVLB  1
01FDE:  MOVWF  xA1
01FE0:  MOVLB  0
01FE2:  RCALL  1E3E
....................   i2c_write(0x00);            // Start at REG 0 - Seconds 
01FE4:  MOVLB  1
01FE6:  CLRF   xA1
01FE8:  MOVLB  0
01FEA:  RCALL  1E3E
....................   i2c_start(); 
01FEC:  BSF    F94.4
01FEE:  NOP   
01FF0:  BSF    F94.3
01FF2:  NOP   
01FF4:  BTFSS  F82.3
01FF6:  BRA    1FF4
01FF8:  BCF    F8B.4
01FFA:  BCF    F94.4
01FFC:  NOP   
01FFE:  BCF    F8B.3
02000:  BCF    F94.3
....................   i2c_write(0xD1); 
02002:  MOVLW  D1
02004:  MOVLB  1
02006:  MOVWF  xA1
02008:  MOVLB  0
0200A:  RCALL  1E3E
....................   sec = bcd2bin(i2c_read() & 0x7f); 
0200C:  MOVLW  01
0200E:  MOVWF  00
02010:  RCALL  1E90
02012:  MOVF   01,W
02014:  ANDLW  7F
02016:  MOVLB  1
02018:  MOVWF  x9D
0201A:  MOVWF  xA2
0201C:  MOVLB  0
0201E:  RCALL  1EDC
02020:  MOVFF  01,21
....................   min = bcd2bin(i2c_read() & 0x7f); 
02024:  MOVLW  01
02026:  MOVWF  00
02028:  RCALL  1E90
0202A:  MOVF   01,W
0202C:  ANDLW  7F
0202E:  MOVLB  1
02030:  MOVWF  x9D
02032:  MOVWF  xA2
02034:  MOVLB  0
02036:  RCALL  1EDC
02038:  MOVFF  01,22
....................   hr  = bcd2bin(i2c_read(0) & 0x3f); 
0203C:  CLRF   00
0203E:  RCALL  1E90
02040:  MOVF   01,W
02042:  ANDLW  3F
02044:  MOVLB  1
02046:  MOVWF  x9D
02048:  MOVWF  xA2
0204A:  MOVLB  0
0204C:  RCALL  1EDC
0204E:  MOVFF  01,23
....................   i2c_stop(); 
02052:  BCF    F94.4
02054:  NOP   
02056:  BSF    F94.3
02058:  BTFSS  F82.3
0205A:  BRA    2058
0205C:  NOP   
0205E:  BRA    2060
02060:  NOP   
02062:  BSF    F94.4
02064:  NOP   
....................  
.................... }  
....................  
.................... //#include <string.h> 
.................... //#include <internal_eeprom.c>  
....................  
....................  
.................... ///////////////////// Variables y Funciones para DHT11  //////////////////////////////// 
.................... unsigned char values[5];   // Arreglo de valores (Solo nos sirve 0-temp- y 2-humedad-) 
.................... void DHT11_init();         // Iniciador estabilizador 
.................... unsigned char get_byte();  // Funcion que arma cada byte 
.................... unsigned char get_data();  // Funcion que asigna los valores a los diferentes bytes 
.................... unsigned char state = 0;   // Estado del sensor 
.................... //////////////////////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ////// Variables del DS1307 ///// 
.................... int sec; 
.................... int min; 
.................... int hrs; 
.................... int day; 
.................... int month; 
.................... int year; 
.................... int dow; 
.................... ///////////////////////////////// 
....................  
....................  
.................... ///////////////// Definiciones de Pines ///////////////////// 
.................... #define DHT11_pin PIN_B5     // Sensor DHT11 
.................... #define LCDLED PIN_D6        // Luz de pantalla led 
.................... #define ARRIBA PIN_B3        // Teclado Cancelar 
.................... #define ABAJO  PIN_B2        // Teclado Ok 
.................... #define OOKK   PIN_B1        // Teclado Abajo 
.................... #define CANCEL PIN_B0        // Teclado Arriba 
.................... #define FA_R 0               // Fase R 
.................... #define FA_S 1               // Fase S 
.................... #define FA_T 2               // Fase T 
.................... #define TempIn values[2]     // Temperatura 
.................... #define Hum values[0]        // Humedad 
....................  
.................... #define ONLCDLED output_low(PIN_D6) 
.................... #define OFFLCDLED  output_high(PIN_D6) 
.................... #define LIMPIARLCD lcd_putc("\f") 
....................  
.................... //////////////// Definicion de los sensores y Luces protagonistas ///////////////////////////// 
....................                     //////////////// SENSORES //////////////// 
.................... #define SSPasCuar     50 // Sensor del pasillo de los cuartos 
.................... #define SSEstar       60 // Sensor del estar 
.................... #define SSHall        59 // Sensor del hall 
.................... #define SSLiving      62 // Sensor del living 
.................... #define SSCocina      61 // Sensor de la cocina 
.................... #define SSPasEnt      73 // Sensor del pasillo de entrada 
.................... #define SSGaleria     91 // Sensor de la galeria 
.................... #define SSParrilla    92 // Sensor de la galeria 
.................... #define SSGarage      72 // Sensor del garage 
....................  
....................                      ///////// LUCES DE SERVICIOS ///////////// 
.................... #define LLPasCuar1    48 // Luz1 del pasillo de los cuartos 
.................... #define LLPasCuar2    47 // Luz2 del pasillo de los cuartos 
.................... #define LLEstar       66 // Luz del estar 
.................... #define LLHall        58 // Luz del hall 
.................... #define LLLiving1     70 // Luz del living 1 
.................... //#define LLLiving2     Luz58 // Luz del living 2 
.................... #define LLCocina      63 // Luz de la cocina 
.................... #define LLPasEnt      76 // Luz del pasillo de entrada 
.................... #define LLGaleria1    82 // Luz de la galeria 1 
.................... #define LLGaleria2    83 // Luz de la galeria 2 
.................... #define LLGarage      75 // Luz del garage 
....................  
....................        ///////// DEFINICION DE LOS VENTILADORES ///////////// 
.................... #define VentPaMa      55 // Ventilador de papa y mama 23 + 32(despl) 
.................... #define VentGal       84 // Ventilador de papa y mama 52 + 32(despl) 
....................  
....................  
.................... ///////////////// Definiciones de posiciones de memoria EEPROM ///////////////// 
.................... #define EstAlarma   2        // Estado de la alarma 
.................... #define EstCasandra 3        // Estado de casandra 
.................... #define TpoSil      4        // Tiempo de Alarma Silenciosa (en segundos de 1 a 180) 
.................... #define TpoSal      5        // Tiempo para salir (en segundos de 1 a 180) 
.................... #define Password    6 // y 7 // Puntero de password (OJO!!! es solo el puntero, ocupa 2 bytes de memoria, 6 y 7) 
.................... #define G1On        8        // Horario de encendido del grupo automatico 1 
.................... #define G2On        9        // Horario de encendido del grupo automatico 2 
.................... #define G3On       10        // Horario de encendido del grupo automatico 2 
.................... #define G4On       11        // Horario de encendido del grupo automatico 2 
.................... #define G1Off      12        // Horario de apagado del grupo automatico 1 
.................... #define G2Off      13        // Horario de apagado del grupo automatico 2 
.................... #define G3Off      14        // Horario de apagado del grupo automatico 2 
.................... #define G4Off      15        // Horario de apagado del grupo automatico 2 
.................... #define G1Dias     16        // Luces integrantes del grupo 1 
.................... #define G2Dias     17        // Luces integrantes del grupo 2 
.................... #define G3Dias     18        // Luces integrantes del grupo 2 
.................... #define G4Dias     19        // Luces integrantes del grupo 2 
.................... #define Umbra      20        // Nivel umbral de la fotocelda 
....................  
.................... #define Luz1 33   // Posiciones de memoria para la intensidad de cada luz 
.................... #define Luz2 34 
.................... #define Luz3 35 
.................... #define Luz4 36 
.................... #define Luz5 37 
.................... #define Luz6 38 
.................... #define Luz7 39 
.................... #define Luz8 40 
.................... #define Luz9 41 
.................... #define Luz10 42 
.................... #define Luz11 43 
.................... #define Luz12 44 
.................... #define Luz13 45 
.................... #define Luz14 46 
.................... #define Luz15 47 
.................... #define Luz16 48 
.................... #define Luz17 49 
.................... #define Luz18 50 
.................... #define Luz19 51 
.................... #define Luz20 52 
.................... #define Luz21 53 
.................... #define Luz22 54 
.................... #define Luz23 55 
.................... #define Luz24 56 
.................... #define Luz25 57 
.................... #define Luz26 58 
.................... #define Luz27 59 
.................... #define Luz28 60 
.................... #define Luz29 61 
.................... #define Luz30 62 
.................... #define Luz31 63 
.................... #define Luz32 64 
.................... #define Luz33 65 
.................... #define Luz34 66 
.................... #define Luz35 67 
.................... #define Luz36 68 
.................... #define Luz37 69 
.................... #define Luz38 70 
.................... #define Luz39 71 
.................... #define Luz40 72 
.................... #define Luz41 73 
.................... #define Luz42 74 
.................... #define Luz43 75 
.................... #define Luz44 76 
.................... #define Luz45 77 
.................... #define Luz46 78 
.................... #define Luz47 79 
.................... #define Luz48 80 
.................... #define Luz49 81 
.................... #define Luz50 82 
.................... #define Luz51 83 
.................... #define Luz52 84 
.................... #define Luz53 85 
.................... #define Luz54 86 
.................... #define Luz55 87 
.................... #define Luz56 88 
.................... #define Luz57 89 
.................... #define Luz58 90 
.................... #define Luz59 91 
.................... #define Luz60 92 
.................... #define Luz61 93 
....................  
.................... //// Posiciones de los registros de maximo y minimo de Temperatura y Radiacion solar ///// 
.................... #define TempMaxLun 100        // Temperatura maxima del lunes 
.................... #define TempMaxMar 105        // Temperatura maxima del martes 
.................... #define TempMaxMie 110        // Temperatura maxima del miercoles 
.................... #define TempMaxJue 115        // Temperatura maxima del jueves 
.................... #define TempMaxVie 120        // Temperatura maxima del viernes 
.................... #define TempMaxSab 125        // Temperatura maxima del sabado 
.................... #define TempMaxDom 130        // Temperatura maxima del domingo 
....................  
.................... #define TempMinLun 135        // Temperatura minima del lunes 
.................... #define TempMinMar 140        // Temperatura minima del martes 
.................... #define TempMinMie 145        // Temperatura minima del miercoles 
.................... #define TempMinJue 150        // Temperatura minima del jueves 
.................... #define TempMinVie 155        // Temperatura minima del viernes 
.................... #define TempMinSab 160        // Temperatura minima del sabado 
.................... #define TempMinDom 165        // Temperatura minima del domingo 
....................  
.................... #define SolLun 170            // Sol maximo del lunes 
.................... #define SolMar 175            // Sol maximo del martes 
.................... #define SolMie 180            // Sol maximo del miercoles 
.................... #define SolJue 185            // Sol maximo del jueves 
.................... #define SolVie 190            // Sol maximo del viernes 
.................... #define SolSab 195            // Sol maximo del sabado 
.................... #define SolDom 200            // Sol maximo del domingo 
....................  
.................... #define GrLuz1 233   // Posiciones de memoria para el byte de pertenencia de Grupos de cada GrLuz 
.................... #define GrLuz2 234 
.................... #define GrLuz3 235 
.................... #define GrLuz4 236 
.................... #define GrLuz5 237 
.................... #define GrLuz6 238 
.................... #define GrLuz7 239 
.................... #define GrLuz8 240 
.................... #define GrLuz9 241 
.................... #define GrLuz10 242 
.................... #define GrLuz11 243 
.................... #define GrLuz12 244 
.................... #define GrLuz13 245 
.................... #define GrLuz14 246 
.................... #define GrLuz15 247 
.................... #define GrLuz16 248 
.................... #define GrLuz17 249 
.................... #define GrLuz18 250 
.................... #define GrLuz19 251 
.................... #define GrLuz20 252 
.................... #define GrLuz21 253 
.................... #define GrLuz22 254 
.................... #define GrLuz23 255 
.................... #define GrLuz24 256 
.................... #define GrLuz25 257 
.................... #define GrLuz26 258 
.................... #define GrLuz27 259 
.................... #define GrLuz28 260 
.................... #define GrLuz29 261 
.................... #define GrLuz30 262 
.................... #define GrLuz31 263 
.................... #define GrLuz32 264 
.................... #define GrLuz33 265 
.................... #define GrLuz34 266 
.................... #define GrLuz35 267 
.................... #define GrLuz36 268 
.................... #define GrLuz37 269 
.................... #define GrLuz38 270 
.................... #define GrLuz39 271 
.................... #define GrLuz40 272 
.................... #define GrLuz41 273 
.................... #define GrLuz42 274 
.................... #define GrLuz43 275 
.................... #define GrLuz44 276 
.................... #define GrLuz45 277 
.................... #define GrLuz46 278 
.................... #define GrLuz47 279 
.................... #define GrLuz48 280 
.................... #define GrLuz49 281 
.................... #define GrLuz50 282 
.................... #define GrLuz51 283 
.................... #define GrLuz52 284 
.................... #define GrLuz53 285 
.................... #define GrLuz54 286 
.................... #define GrLuz55 287 
.................... #define GrLuz56 288 
.................... #define GrLuz57 289 
.................... #define GrLuz58 290 
.................... #define GrLuz59 291 
.................... #define GrLuz60 292 
....................  
.................... ///////////////// Funciones Generales //////////////// 
.................... void inicio();     // Configuracion inicial 
.................... //void BusData();    // Bus de datos con algo para meter en el comando 
.................... void Comunica();   // Funcion de lectura de puerto serial y armado del comando 
.................... void Teclado();    // Leemos el teclado 
.................... void Pantalla();   // Actualizamos la pantalla 
.................... void Tiempo();     // Funcion para actualizar el tiempo 
.................... void Ambiente();   // Funcion para cargar variables ambientales 
.................... void AcercaDe();   // Acerca de... 
.................... void Holding();    // Pantalla de hold 
.................... void ZzZ();        // Casandra durmiendo 
.................... void ActAlarma();  // Activador de alarma 
.................... void LuzOnOff();   // Enciende o apaga la luz 
.................... void LuzGrupo();   // Enciende o apaga grupo de luces 
.................... void LuzInt();     // Configuracion de la intensidad de cada luz 
.................... void Ccasandra();  // Configuracion del nivel de automatico 
.................... void ConfAlarma(); // Configuracion de la alarma 
.................... void ADias();      // Funcion de seleccion de dias en grupos automaticos 
.................... void AHs();        // Funcion de horarios de grupos automaticos 
.................... void Aluces();     // Funcion de seleccion de luces para los grupos automaticos 
.................... int  Autenticar(); // Chequeo de contraseña, devuelve 1 si es correcta y 0 si no 
.................... void CClave();     // Funcion para cambiar la clave 
.................... void CHs();        // Funcion para cambiar la hora 
.................... void CReset();     // Resetea todas las variables del sistema 
.................... void ConfAlarma(); // Configuracion de alarma 
.................... void Fotocel();    // Configuracion del umbral de la fotocelula 
.................... void VerTemp();    // Donde vemos las temperaturas 
.................... void VerTens();    // Donde vemos las tensiones del sistema 
.................... void DosVeinte();  // Captura ADC para la tension trifasica 
.................... void Defini();     // Definiciones de Teclas y consumos 
.................... void Automaticos();// Funcion que analiza y dispara automaticos 
.................... //void Pasillos();   // Funcion que analiza y dispara los pasillos 
.................... void SensoresLuz();// Funcion de anlisis de sensores para servicios 
.................... void SensoresAl(); // Funcion de anlisis de sensores para alarma 
.................... void AAlarma();    // Funcion de gestion e interpretacion de alarma 
.................... void LuzLED();     // Controla cuando la luz led se prende o se apaga 
.................... void ActuaLuz();   // Funcion que actualiza las luces en los modulos segun el valor del servidor 
.................... void CuantaLuz();  // Funcion que muestra cantidad de luces prendidas 
.................... void BusData(int C1,int C2); // Funcion que manda comandos de bus por 3 
.................... void Prender(int NLuz); // Funcion que recibe parametros y prende cierta luz 
.................... void Apagar(int NLuz);  // Funcion que recibe parametros y prende cierta luz 
.................... void CorteLuz();   // Funcion que acondiciona y actualiza valores de los modulos luego de corte de luz 
....................  
.................... /////////////// Variables globales /////////////// 
.................... int Menu;          // Posicion dentro del menu 
.................... int TempMax[4];    // Temperatura maxima del dia - numero de dia - hora - minuto (el "dow" se interpreta por la posicion de memoria EEPROM) 
.................... int TempMin[4];    // Temperatura minima del dia - numero de dia - hora - minuto (el "dow" se interpreta por la posicion de memoria EEPROM) 
.................... int SolMax[4];     // Maximo nivel de radiacion de sol del dia - dia - hora - minuto (el "dow" se interpreta por la posicion de memoria EEPROM) 
.................... short Rebote;      // Antirebote de teclado 
.................... int Comando[4];    // Carga de EVENTO y VALOR 
.................... int i=0;           // Contador puntero para armar el comando recibido por el bus 
.................... char Dia[4];       // Cadena del dia 
.................... char Mes[4];       // Cadena del Mes 
.................... int TempOut;       // Temperatura remota (afuera) 
.................... int Sol;           // Intensidad del sol (remota, afuera) 
.................... int SolAux;        // Auxiliar para recibir y promediar el sol 
.................... int EstadoAl;      // Estado de la alarma 
.................... int ConfCas;       // El bit 0 es servicios, el 1 es el automatico1, el 2 el automatico2, el 3 el automatico3, el 4 el automatico4 y el 5 es el modulo web 
.................... int Umbral;        // Nivel seleccionado de fotocelda 
.................... int Tiempo1;       // Tiempo del timer1 
.................... int IntLuz[99];    // Arreglo que guarda los niveles de intensidad de cada luz 
.................... int LGrupo[99];    // Arreglo que avisa que luz forma parte de los dos grupos automaticos 
.................... //int LLuces[99];    // Arreglo que avisa que luz forma parte de los diferentes tipos de luces 
.................... //int LTecla[99];    // Arreglo que avisa que es: Tecla, sensor interno, o externo 
.................... int Passwd[2];     // Contraseña en RAM 
.................... int TpoSilencioso; // Tiempo de silencio antes de sirena 
.................... int TpoSalida;     // Tiempo de gracia post activacion para salir 
.................... int TpoSeguro;     // Variable de seguimiento del tiempo seguro para salir 
.................... int GOn[5];        // Hora de encendido de los automaticos 
.................... int GOff[5];       // Hora de apagado de los automaticos 
.................... int Gdias[5];      // Grupo de dias de los automaticos 
.................... int Vbata;         // Tension de la bateria 
.................... int FaseR;         // Tension en fase R 
.................... int FaseS;         // Tension en fase S 
.................... int FaseT;         // Tension en fase T 
.................... short SPasCuar;    // Sensor del pasillo de los cuartos 
.................... short SEstar;      // Sensor del estar 
.................... short SHall;       // Sensor del hall 
.................... short SLiving;     // Sensor del living 
.................... short SCocina;     // Sensor de la cocina 
.................... short SPasEnt;     // Sensor del pasillo de entrada 
.................... short SGaleria;    // Sensor de la galeria 
.................... short SParrilla;   // Sensor de la galeria frente a la parrilla 
.................... short SGarage;     // Sensor del garage 
.................... int AAseguu;       // Auxiliares para activacion de alarma 
.................... int AAdesact;      // Auxiliares para activacion de alarma 
.................... int UltIn[25];     // Ultimas entradas 
.................... int UltBus[13];    // Ultimos valores de bus de datos 
.................... int CuentaPanico;  // Contador de cambios de teclas para panico 
.................... int CuentaLuz;     // Contador de luces encendidas 
.................... int CuentaSens;    // Contador de luces encendidas 
.................... short zZzZ;        // Bandera de sueño 
.................... int RawBus[23];    // Valores del bus sin distincion 
.................... short EsNoche;     // Bandera para saber cuando amanece y cuando atardece 
....................  
....................  
.................... //////////////////////// EMPEZAMOS! :D ////////////////////////// 
....................  
.................... void main(){ 
*
0E3A8:  CLRF   FF8
0E3AA:  BCF    FD0.7
0E3AC:  BSF    07.7
0E3AE:  CLRF   FEA
0E3B0:  CLRF   FE9
0E3B2:  BCF    F95.4
0E3B4:  BCF    F8C.4
0E3B6:  CLRF   1A
0E3B8:  BSF    FB8.3
0E3BA:  MOVLW  A0
0E3BC:  MOVWF  FAF
0E3BE:  MOVLW  01
0E3C0:  MOVWF  FB0
0E3C2:  MOVLW  A6
0E3C4:  MOVWF  FAC
0E3C6:  MOVLW  90
0E3C8:  MOVWF  FAB
0E3CA:  CLRF   20
0E3CC:  CLRF   3A
0E3CE:  MOVF   FC1,W
0E3D0:  ANDLW  C0
0E3D2:  IORLW  0F
0E3D4:  MOVWF  FC1
0E3D6:  MOVLW  07
0E3D8:  MOVWF  FB4
....................  
.................... inicio(); 
0E3DA:  GOTO   3F66
....................  
.................... if (input(ARRIBA)==0 && input(ABAJO)==0 ) { // && input(OOKK)==0 && input(CANCEL)==0){ 
0E3DE:  BSF    F93.3
0E3E0:  BTFSC  F81.3
0E3E2:  BRA    E496
0E3E4:  BSF    F93.2
0E3E6:  BTFSC  F81.2
0E3E8:  BRA    E496
.................... long elimina; 
.................... for (elimina=0;elimina<1024;elimina++){ 
0E3EA:  MOVLB  1
0E3EC:  CLRF   x6C
0E3EE:  CLRF   x6B
0E3F0:  MOVF   x6C,W
0E3F2:  SUBLW  03
0E3F4:  BNC   E494
.................... write_eeprom(elimina,0x00); 
0E3F6:  MOVF   FF2,W
0E3F8:  MOVWF  00
0E3FA:  BCF    FF2.7
0E3FC:  MOVFF  16C,FAA
0E400:  MOVFF  16B,FA9
0E404:  CLRF   FA8
0E406:  BCF    FA6.6
0E408:  BCF    FA6.7
0E40A:  BSF    FA6.2
0E40C:  MOVLB  F
0E40E:  MOVLW  55
0E410:  MOVWF  FA7
0E412:  MOVLW  AA
0E414:  MOVWF  FA7
0E416:  BSF    FA6.1
0E418:  BTFSC  FA6.1
0E41A:  BRA    E418
0E41C:  BCF    FA6.2
0E41E:  MOVF   00,W
0E420:  IORWF  FF2,F
0E422:  CLRF   19
0E424:  BTFSC  FF2.7
0E426:  BSF    19.7
0E428:  BCF    FF2.7
.................... delay_ms(1); 
0E42A:  MOVLW  01
0E42C:  MOVLB  1
0E42E:  MOVWF  xA8
0E430:  MOVLB  0
0E432:  CALL   1456
0E436:  BTFSC  19.7
0E438:  BSF    FF2.7
0E43A:  CLRF   19
0E43C:  BTFSC  FF2.7
0E43E:  BSF    19.7
0E440:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0E442:  MOVLW  01
0E444:  MOVLB  1
0E446:  MOVWF  xA0
0E448:  MOVLW  02
0E44A:  MOVWF  xA1
0E44C:  MOVLB  0
0E44E:  CALL   156C
0E452:  BTFSC  19.7
0E454:  BSF    FF2.7
.................... printf(lcd_putc, "Eliminacion rustica "); 
0E456:  MOVLW  7C
0E458:  MOVWF  FF6
0E45A:  MOVLW  04
0E45C:  MOVWF  FF7
0E45E:  CALL   3E86
0E462:  CLRF   19
0E464:  BTFSC  FF2.7
0E466:  BSF    19.7
0E468:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0E46A:  MOVLW  01
0E46C:  MOVLB  1
0E46E:  MOVWF  xA0
0E470:  MOVLW  03
0E472:  MOVWF  xA1
0E474:  MOVLB  0
0E476:  CALL   156C
0E47A:  BTFSC  19.7
0E47C:  BSF    FF2.7
.................... printf(lcd_putc, "    de datos...     "); 
0E47E:  MOVLW  92
0E480:  MOVWF  FF6
0E482:  MOVLW  04
0E484:  MOVWF  FF7
0E486:  CALL   3E86
.................... } 
0E48A:  MOVLB  1
0E48C:  INCF   x6B,F
0E48E:  BTFSC  FD8.2
0E490:  INCF   x6C,F
0E492:  BRA    E3F0
0E494:  MOVLB  0
.................... } 
....................  
.................... while(1){ 
....................  
.................... restart_wdt(); // reiniciamos el perro 
0E496:  CLRWDT
....................  
.................... if (input(ARRIBA)==0 && input(ABAJO)==0 && input(OOKK)==0 && input(CANCEL)==0){ 
0E498:  BSF    F93.3
0E49A:  BTFSC  F81.3
0E49C:  BRA    E508
0E49E:  BSF    F93.2
0E4A0:  BTFSC  F81.2
0E4A2:  BRA    E508
0E4A4:  BSF    F93.1
0E4A6:  BTFSC  F81.1
0E4A8:  BRA    E508
0E4AA:  BSF    F93.0
0E4AC:  BTFSC  F81.0
0E4AE:  BRA    E508
.................... EstadoAl = 7; 
0E4B0:  MOVLW  07
0E4B2:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
0E4B4:  MOVF   FF2,W
0E4B6:  MOVWF  00
0E4B8:  BCF    FF2.7
0E4BA:  CLRF   FAA
0E4BC:  MOVLW  02
0E4BE:  MOVWF  FA9
0E4C0:  MOVFF  46,FA8
0E4C4:  BCF    FA6.6
0E4C6:  BCF    FA6.7
0E4C8:  BSF    FA6.2
0E4CA:  MOVLB  F
0E4CC:  MOVLW  55
0E4CE:  MOVWF  FA7
0E4D0:  MOVLW  AA
0E4D2:  MOVWF  FA7
0E4D4:  BSF    FA6.1
0E4D6:  BTFSC  FA6.1
0E4D8:  BRA    E4D6
0E4DA:  BCF    FA6.2
0E4DC:  MOVF   00,W
0E4DE:  IORWF  FF2,F
.................... delay_ms(500); 
0E4E0:  MOVLW  02
0E4E2:  MOVLB  1
0E4E4:  MOVWF  x6D
0E4E6:  CLRF   19
0E4E8:  BTFSC  FF2.7
0E4EA:  BSF    19.7
0E4EC:  BCF    FF2.7
0E4EE:  MOVLW  FA
0E4F0:  MOVWF  xA8
0E4F2:  MOVLB  0
0E4F4:  CALL   1456
0E4F8:  BTFSC  19.7
0E4FA:  BSF    FF2.7
0E4FC:  MOVLB  1
0E4FE:  DECFSZ x6D,F
0E500:  BRA    E4E6
.................... Menu = 1; 
0E502:  MOVLW  01
0E504:  MOVWF  28
0E506:  MOVLB  0
.................... } 
....................  
.................... Teclado();   // Escaneo de teclado 
0E508:  GOTO   6994
.................... Pantalla();  // Actualizaciones de Pantalla 
0E50C:  CALL   5810
.................... AAlarma();   // Analisis de Alarma 
0E510:  GOTO   73CA
.................... LuzLED();    // Luz de display 
0E514:  CALL   4406
.................... CuantaLuz(); // Cuenta luces y sensores 
0E518:  GOTO   7684
....................  
.................... if ((Menu == 121) || (Menu == 122) || (Menu == 123)) ActAlarma(); 
0E51C:  MOVF   28,W
0E51E:  SUBLW  79
0E520:  BZ    E52E
0E522:  MOVF   28,W
0E524:  SUBLW  7A
0E526:  BZ    E52E
0E528:  MOVF   28,W
0E52A:  SUBLW  7B
0E52C:  BNZ   E532
0E52E:  GOTO   7726
.................... if (Menu == 124) ConfAlarma(); 
0E532:  MOVF   28,W
0E534:  SUBLW  7C
0E536:  BNZ   E53C
0E538:  GOTO   7AAA
.................... if (Menu == 131) LuzOnOff(); 
0E53C:  MOVF   28,W
0E53E:  SUBLW  83
0E540:  BNZ   E546
0E542:  GOTO   7F4E
.................... if (Menu == 132) LuzGrupo(); 
0E546:  MOVF   28,W
0E548:  SUBLW  84
0E54A:  BNZ   E550
0E54C:  GOTO   8246
.................... if (Menu == 133) LuzInt(); 
0E550:  MOVF   28,W
0E552:  SUBLW  85
0E554:  BNZ   E55A
0E556:  GOTO   902C
.................... if (Menu ==  41) Ccasandra(); 
0E55A:  MOVF   28,W
0E55C:  SUBLW  29
0E55E:  BNZ   E564
0E560:  GOTO   9628
.................... if (Menu == 151) ADias(); 
0E564:  MOVF   28,W
0E566:  SUBLW  97
0E568:  BNZ   E56E
0E56A:  GOTO   A3C4
.................... if (Menu == 152) AHs(); 
0E56E:  MOVF   28,W
0E570:  SUBLW  98
0E572:  BNZ   E578
0E574:  GOTO   B456
.................... if (Menu == 153) Aluces(); 
0E578:  MOVF   28,W
0E57A:  SUBLW  99
0E57C:  BNZ   E582
0E57E:  GOTO   BCD2
.................... if (Menu == 161) CClave(); 
0E582:  MOVF   28,W
0E584:  SUBLW  A1
0E586:  BNZ   E58C
0E588:  GOTO   C78A
.................... if (Menu == 162) CHs(); 
0E58C:  MOVF   28,W
0E58E:  SUBLW  A2
0E590:  BNZ   E596
0E592:  GOTO   D218
.................... if (Menu == 163) Fotocel(); 
0E596:  MOVF   28,W
0E598:  SUBLW  A3
0E59A:  BNZ   E5A0
0E59C:  GOTO   DA70
.................... if (Menu == 164) CReset(); 
0E5A0:  MOVF   28,W
0E5A2:  SUBLW  A4
0E5A4:  BNZ   E5AA
0E5A6:  GOTO   DC54
.................... if (Menu == 165) AcercaDe(); 
0E5AA:  MOVF   28,W
0E5AC:  SUBLW  A5
0E5AE:  BNZ   E5B2
0E5B0:  BRA    DFA2
....................  
.................... //OFFLCDLED; 
.................... } //while 
0E5B2:  BRA    E496
.................... } // Main 
....................  
.................... void LuzLED() { 
....................  
0E5B4:  SLEEP 
.................... if (menu == 0) OFFLCDLED; 
*
04406:  MOVF   28,F
04408:  BNZ   4410
0440A:  BCF    F95.6
0440C:  BSF    F8C.6
.................... else ONLCDLED; 
0440E:  BRA    4414
04410:  BCF    F95.6
04412:  BCF    F8C.6
....................  
.................... } 
04414:  RETURN 0
....................  
.................... void BusData(int C1,int C2) { 
.................... //   printf("%c%c%c%c", 250, C1, C2, C1+C2);  
....................    delay_ms(5); 
*
015F6:  MOVLW  05
015F8:  MOVLB  1
015FA:  MOVWF  xA8
015FC:  MOVLB  0
015FE:  RCALL  1456
....................    printf("%c%c%c%c", 250, C1, C2, C1+C2);  
01600:  MOVLB  1
01602:  MOVF   xA4,W
01604:  ADDWF  xA3,W
01606:  MOVWF  xA5
01608:  MOVLW  FA
0160A:  MOVWF  xA6
0160C:  MOVLB  0
0160E:  RCALL  15D6
01610:  MOVFF  1A3,1A6
01614:  RCALL  15D6
01616:  MOVFF  1A4,1A6
0161A:  RCALL  15D6
0161C:  MOVFF  1A5,1A6
01620:  RCALL  15D6
.................... //   delay_ms(3); 
.................... //   printf("%c%c%c%c", 250, C1, C2, C1+C2);  
....................    delay_ms(5); 
01622:  MOVLW  05
01624:  MOVLB  1
01626:  MOVWF  xA8
01628:  MOVLB  0
0162A:  RCALL  1456
.................... } 
0162C:  RETURN 0
....................  
.................... void Prender(int NLuz) { 
....................       if (IntLuz[NLuz] < 99){ // estaba apagado 
*
02304:  CLRF   03
02306:  MOVLB  1
02308:  MOVF   xA2,W
0230A:  ADDLW  4A
0230C:  MOVWF  FE9
0230E:  MOVLW  00
02310:  ADDWFC 03,W
02312:  MOVWF  FEA
02314:  MOVF   FEF,W
02316:  SUBLW  62
02318:  BNC   23A2
....................          IntLuz[NLuz] = IntLuz[NLuz] + 100; // prendo en el arreglo 
0231A:  CLRF   03
0231C:  MOVF   xA2,W
0231E:  ADDLW  4A
02320:  MOVWF  01
02322:  MOVLW  00
02324:  ADDWFC 03,F
02326:  MOVFF  03,1A4
0232A:  CLRF   03
0232C:  MOVF   xA2,W
0232E:  ADDLW  4A
02330:  MOVWF  FE9
02332:  MOVLW  00
02334:  ADDWFC 03,W
02336:  MOVWF  FEA
02338:  MOVLW  64
0233A:  ADDWF  FEF,W
0233C:  MOVFF  1A4,FEA
02340:  MOVFF  01,FE9
02344:  MOVWF  FEF
.................... //         printf("%c%c%c%c", 250, NLuz, 90, 90+NLuz); // Mando el encendido 
....................          BusData(NLuz,90); // 
02346:  MOVFF  1A2,1A3
0234A:  MOVLW  5A
0234C:  MOVWF  xA4
0234E:  MOVLB  0
02350:  CALL   15F6
....................          write_eeprom(NLuz,IntLuz[NLuz]); 
02354:  CLRF   03
02356:  MOVLB  1
02358:  MOVF   xA2,W
0235A:  ADDLW  4A
0235C:  MOVWF  FE9
0235E:  MOVLW  00
02360:  ADDWFC 03,W
02362:  MOVWF  FEA
02364:  MOVFF  FEF,1A3
02368:  MOVF   FF2,W
0236A:  MOVWF  00
0236C:  BCF    FF2.7
0236E:  CLRF   FAA
02370:  MOVFF  1A2,FA9
02374:  MOVFF  1A3,FA8
02378:  BCF    FA6.6
0237A:  BCF    FA6.7
0237C:  BSF    FA6.2
0237E:  MOVLB  F
02380:  MOVLW  55
02382:  MOVWF  FA7
02384:  MOVLW  AA
02386:  MOVWF  FA7
02388:  BSF    FA6.1
0238A:  BTFSC  FA6.1
0238C:  BRA    238A
0238E:  BCF    FA6.2
02390:  MOVF   00,W
02392:  IORWF  FF2,F
....................          delay_ms(3); 
02394:  MOVLW  03
02396:  MOVLB  1
02398:  MOVWF  xA8
0239A:  MOVLB  0
0239C:  CALL   1456
023A0:  MOVLB  1
....................       } // si estaba apagado.. 
.................... } 
023A2:  MOVLB  0
023A4:  RETURN 0
....................  
.................... void Apagar(int NLuz) { 
....................       if (IntLuz[NLuz] > 99){ // estaba prendido 
023A6:  CLRF   03
023A8:  MOVLB  1
023AA:  MOVF   xA2,W
023AC:  ADDLW  4A
023AE:  MOVWF  FE9
023B0:  MOVLW  00
023B2:  ADDWFC 03,W
023B4:  MOVWF  FEA
023B6:  MOVF   FEF,W
023B8:  SUBLW  63
023BA:  BC    2444
....................          IntLuz[NLuz] = IntLuz[NLuz] - 100; // apago en el arreglo 
023BC:  CLRF   03
023BE:  MOVF   xA2,W
023C0:  ADDLW  4A
023C2:  MOVWF  01
023C4:  MOVLW  00
023C6:  ADDWFC 03,F
023C8:  MOVFF  03,1A4
023CC:  CLRF   03
023CE:  MOVF   xA2,W
023D0:  ADDLW  4A
023D2:  MOVWF  FE9
023D4:  MOVLW  00
023D6:  ADDWFC 03,W
023D8:  MOVWF  FEA
023DA:  MOVLW  64
023DC:  SUBWF  FEF,W
023DE:  MOVFF  1A4,FEA
023E2:  MOVFF  01,FE9
023E6:  MOVWF  FEF
.................... //         printf("%c%c%c%c", 250, NLuz, 80, 80+NLuz); // Mando el apagado 
....................          BusData(NLuz,80); 
023E8:  MOVFF  1A2,1A3
023EC:  MOVLW  50
023EE:  MOVWF  xA4
023F0:  MOVLB  0
023F2:  CALL   15F6
....................          write_eeprom(NLuz,IntLuz[NLuz]); 
023F6:  CLRF   03
023F8:  MOVLB  1
023FA:  MOVF   xA2,W
023FC:  ADDLW  4A
023FE:  MOVWF  FE9
02400:  MOVLW  00
02402:  ADDWFC 03,W
02404:  MOVWF  FEA
02406:  MOVFF  FEF,1A3
0240A:  MOVF   FF2,W
0240C:  MOVWF  00
0240E:  BCF    FF2.7
02410:  CLRF   FAA
02412:  MOVFF  1A2,FA9
02416:  MOVFF  1A3,FA8
0241A:  BCF    FA6.6
0241C:  BCF    FA6.7
0241E:  BSF    FA6.2
02420:  MOVLB  F
02422:  MOVLW  55
02424:  MOVWF  FA7
02426:  MOVLW  AA
02428:  MOVWF  FA7
0242A:  BSF    FA6.1
0242C:  BTFSC  FA6.1
0242E:  BRA    242C
02430:  BCF    FA6.2
02432:  MOVF   00,W
02434:  IORWF  FF2,F
....................          delay_ms(3); 
02436:  MOVLW  03
02438:  MOVLB  1
0243A:  MOVWF  xA8
0243C:  MOVLB  0
0243E:  CALL   1456
02442:  MOVLB  1
....................       } // si estaba prendido.. 
.................... } 
02444:  MOVLB  0
02446:  RETURN 0
....................  
.................... void ActuaLuz() { //Recorre todos los arreglos con las intensidades y estados de las luces y los ejecuta (hay que llamarla) 
....................  
.................... int kk; 
....................  
.................... for (kk=32;kk<94;kk++) { 
*
03EA6:  MOVLW  20
03EA8:  MOVLB  1
03EAA:  MOVWF  x70
03EAC:  MOVF   x70,W
03EAE:  SUBLW  5D
03EB0:  BNC   3F62
.................... restart_wdt(); 
03EB2:  CLRWDT
....................   if (IntLuz[kk] > 99){ // La luz está prendida 
03EB4:  CLRF   03
03EB6:  MOVF   x70,W
03EB8:  ADDLW  4A
03EBA:  MOVWF  FE9
03EBC:  MOVLW  00
03EBE:  ADDWFC 03,W
03EC0:  MOVWF  FEA
03EC2:  MOVF   FEF,W
03EC4:  SUBLW  63
03EC6:  BC    3F14
.................... //      printf("%c%c%c%c", 250, kk, IntLuz[kk]-100, (IntLuz[kk]-100)+kk); // Mando la intensidad 
....................       BusData(kk,IntLuz[kk]-100); 
03EC8:  CLRF   03
03ECA:  MOVF   x70,W
03ECC:  ADDLW  4A
03ECE:  MOVWF  FE9
03ED0:  MOVLW  00
03ED2:  ADDWFC 03,W
03ED4:  MOVWF  FEA
03ED6:  MOVLW  64
03ED8:  SUBWF  FEF,W
03EDA:  MOVWF  x71
03EDC:  CLRF   19
03EDE:  BTFSC  FF2.7
03EE0:  BSF    19.7
03EE2:  BCF    FF2.7
03EE4:  MOVFF  170,1A3
03EE8:  MOVWF  xA4
03EEA:  MOVLB  0
03EEC:  CALL   15F6
03EF0:  BTFSC  19.7
03EF2:  BSF    FF2.7
03EF4:  CLRF   19
03EF6:  BTFSC  FF2.7
03EF8:  BSF    19.7
03EFA:  BCF    FF2.7
....................       //delay_ms(3); 
.................... //      printf("%c%c%c%c", 250, kk, 90, 90+kk); // Mando el encendido 
....................       BusData(kk,90); 
03EFC:  MOVFF  170,1A3
03F00:  MOVLW  5A
03F02:  MOVLB  1
03F04:  MOVWF  xA4
03F06:  MOVLB  0
03F08:  CALL   15F6
03F0C:  BTFSC  19.7
03F0E:  BSF    FF2.7
....................       //delay_ms(3); 
....................     } else { // si esta apagada 
03F10:  BRA    3F5C
03F12:  MOVLB  1
03F14:  CLRF   19
03F16:  BTFSC  FF2.7
03F18:  BSF    19.7
03F1A:  BCF    FF2.7
.................... //      printf("%c%c%c%c", 250, kk, 80, 80+kk); // Mando el apagado 
....................       BusData(kk,80); 
03F1C:  MOVFF  170,1A3
03F20:  MOVLW  50
03F22:  MOVWF  xA4
03F24:  MOVLB  0
03F26:  CALL   15F6
03F2A:  BTFSC  19.7
03F2C:  BSF    FF2.7
....................       //delay_ms(3); 
.................... //      printf("%c%c%c%c", 250, kk, IntLuz[kk], IntLuz[kk]+kk); // Mando la intensidad 
....................       BusData(kk,IntLuz[kk]); 
03F2E:  CLRF   03
03F30:  MOVLB  1
03F32:  MOVF   x70,W
03F34:  ADDLW  4A
03F36:  MOVWF  FE9
03F38:  MOVLW  00
03F3A:  ADDWFC 03,W
03F3C:  MOVWF  FEA
03F3E:  MOVFF  FEF,171
03F42:  CLRF   19
03F44:  BTFSC  FF2.7
03F46:  BSF    19.7
03F48:  BCF    FF2.7
03F4A:  MOVFF  170,1A3
03F4E:  MOVFF  171,1A4
03F52:  MOVLB  0
03F54:  CALL   15F6
03F58:  BTFSC  19.7
03F5A:  BSF    FF2.7
....................       //delay_ms(3); 
....................     } // else (esta apagada) 
.................... } // for... 
03F5C:  MOVLB  1
03F5E:  INCF   x70,F
03F60:  BRA    3EAC
.................... } //fn 
03F62:  MOVLB  0
03F64:  RETURN 0
....................  
.................... void CuantaLuz() { //Recorre todos los arreglos con las intensidades y estados de las luces y los ejecuta (hay que llamarla) 
.................... int kk; 
.................... CuentaLuz = 0; 
*
07684:  MOVLB  1
07686:  CLRF   x52
.................... for (kk=32;kk<94;kk++) { 
07688:  MOVLW  20
0768A:  MOVWF  x6D
0768C:  MOVF   x6D,W
0768E:  SUBLW  5D
07690:  BNC   7720
....................    if ((kk==33) || (kk==37) || (kk==54) || (kk==55) || (kk==56) || (kk==57) || (kk==65) || (kk==67) || (kk==69) || (kk==71) || (kk==74) || (kk==78) || (kk==79) || (kk==80) || (kk==81) || (kk==86) || (kk==87) || (kk==89) || (kk==90)){ 
07692:  MOVF   x6D,W
07694:  SUBLW  21
07696:  BZ    7704
07698:  MOVF   x6D,W
0769A:  SUBLW  25
0769C:  BZ    7704
0769E:  MOVF   x6D,W
076A0:  SUBLW  36
076A2:  BZ    7704
076A4:  MOVF   x6D,W
076A6:  SUBLW  37
076A8:  BZ    7704
076AA:  MOVF   x6D,W
076AC:  SUBLW  38
076AE:  BZ    7704
076B0:  MOVF   x6D,W
076B2:  SUBLW  39
076B4:  BZ    7704
076B6:  MOVF   x6D,W
076B8:  SUBLW  41
076BA:  BZ    7704
076BC:  MOVF   x6D,W
076BE:  SUBLW  43
076C0:  BZ    7704
076C2:  MOVF   x6D,W
076C4:  SUBLW  45
076C6:  BZ    7704
076C8:  MOVF   x6D,W
076CA:  SUBLW  47
076CC:  BZ    7704
076CE:  MOVF   x6D,W
076D0:  SUBLW  4A
076D2:  BZ    7704
076D4:  MOVF   x6D,W
076D6:  SUBLW  4E
076D8:  BZ    7704
076DA:  MOVF   x6D,W
076DC:  SUBLW  4F
076DE:  BZ    7704
076E0:  MOVF   x6D,W
076E2:  SUBLW  50
076E4:  BZ    7704
076E6:  MOVF   x6D,W
076E8:  SUBLW  51
076EA:  BZ    7704
076EC:  MOVF   x6D,W
076EE:  SUBLW  56
076F0:  BZ    7704
076F2:  MOVF   x6D,W
076F4:  SUBLW  57
076F6:  BZ    7704
076F8:  MOVF   x6D,W
076FA:  SUBLW  59
076FC:  BZ    7704
076FE:  MOVF   x6D,W
07700:  SUBLW  5A
07702:  BNZ   7706
....................    } else if (IntLuz[kk] > 99) ++CuentaLuz;  // Solamente considero las luces que estan conectadas 
07704:  BRA    771C
07706:  CLRF   03
07708:  MOVF   x6D,W
0770A:  ADDLW  4A
0770C:  MOVWF  FE9
0770E:  MOVLW  00
07710:  ADDWFC 03,W
07712:  MOVWF  FEA
07714:  MOVF   FEF,W
07716:  SUBLW  63
07718:  BTFSS  FD8.0
0771A:  INCF   x52,F
.................... } // for... 
0771C:  INCF   x6D,F
0771E:  BRA    768C
.................... } //fn 
07720:  MOVLB  0
07722:  GOTO   E51C (RETURN)
....................  
....................  
.................... void AAlarma() {  // Funcion de analisis y disparo de alarma (corre sola en main) 
....................  
.................... if ((EstadoAl == 2) || (EstadoAl == 3) || (EstadoAl == 4) || (EstadoAl == 5) || (EstadoAl == 6) || (EstadoAl == 7)) { // Si la alarma en cualquier estado activado 
*
073CA:  MOVF   46,W
073CC:  SUBLW  02
073CE:  BZ    73EE
073D0:  MOVF   46,W
073D2:  SUBLW  03
073D4:  BZ    73EE
073D6:  MOVF   46,W
073D8:  SUBLW  04
073DA:  BZ    73EE
073DC:  MOVF   46,W
073DE:  SUBLW  05
073E0:  BZ    73EE
073E2:  MOVF   46,W
073E4:  SUBLW  06
073E6:  BZ    73EE
073E8:  MOVF   46,W
073EA:  SUBLW  07
073EC:  BNZ   7474
.................... if (Menu > 1){ 
073EE:  MOVF   28,W
073F0:  SUBLW  01
073F2:  BC    7474
.................... if (Autenticar()) { //autentica ok 
073F4:  RCALL  6E4C
073F6:  MOVF   01,F
073F8:  BZ    7470
073FA:  CLRF   19
073FC:  BTFSC  FF2.7
073FE:  BSF    19.7
07400:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, 155, 0, 155);    // Apagamos sirena 
.................... BusData(155,0); 
07402:  MOVLW  9B
07404:  MOVLB  1
07406:  MOVWF  xA3
07408:  CLRF   xA4
0740A:  MOVLB  0
0740C:  CALL   15F6
07410:  BTFSC  19.7
07412:  BSF    FF2.7
.................... //delay_ms(5); 
.................... restart_wdt(); 
07414:  CLRWDT
07416:  CLRF   19
07418:  BTFSC  FF2.7
0741A:  BSF    19.7
0741C:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, 100, 141, 241);  // Habilitamos teclas 
.................... BusData(100,141); 
0741E:  MOVLW  64
07420:  MOVLB  1
07422:  MOVWF  xA3
07424:  MOVLW  8D
07426:  MOVWF  xA4
07428:  MOVLB  0
0742A:  CALL   15F6
0742E:  BTFSC  19.7
07430:  BSF    FF2.7
.................... //delay_ms(5); 
.................... restart_wdt(); 
07432:  CLRWDT
.................... /* 
.................... printf("%c%c%c%c", 250, 155, 0, 155);    // Apagamos sirena 
.................... BusData(155,0); 
.................... delay_ms(5); 
.................... restart_wdt(); 
.................... printf("%c%c%c%c", 250, 100, 141, 241);  // Habilitamos teclas 
.................... BusData(155,0); 
.................... delay_ms(5); 
.................... restart_wdt(); 
.................... */ 
.................... ActuaLuz(); // Actualizamos luces segun RAM 
07434:  CALL   3EA6
.................... EstadoAl = 1; // desactivada 
07438:  MOVLW  01
0743A:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
0743C:  MOVF   FF2,W
0743E:  MOVWF  00
07440:  BCF    FF2.7
07442:  CLRF   FAA
07444:  MOVLW  02
07446:  MOVWF  FA9
07448:  MOVFF  46,FA8
0744C:  BCF    FA6.6
0744E:  BCF    FA6.7
07450:  BSF    FA6.2
07452:  MOVLB  F
07454:  MOVLW  55
07456:  MOVWF  FA7
07458:  MOVLW  AA
0745A:  MOVWF  FA7
0745C:  BSF    FA6.1
0745E:  BTFSC  FA6.1
07460:  BRA    745E
07462:  BCF    FA6.2
07464:  MOVF   00,W
07466:  IORWF  FF2,F
.................... Menu = 1; 
07468:  MOVLW  01
0746A:  MOVWF  28
.................... } else { // no autentica 
0746C:  BRA    7476
0746E:  MOVLB  0
.................... Menu = 1; 
07470:  MOVLW  01
07472:  MOVWF  28
07474:  MOVLB  F
.................... } // no autentica 
.................... } // Menu mas que 1 
.................... } // Alarma activada 
....................  
.................... if (EstadoAl == 5) { // disparada pero en silencio 
07476:  MOVF   46,W
07478:  SUBLW  05
0747A:  BNZ   7550
.................... if (sec != AAseguu) { // paso un segundo 
0747C:  MOVLB  1
0747E:  MOVF   x29,W
07480:  SUBWF  21,W
07482:  BZ    754E
.................... AAseguu = sec; 
07484:  MOVFF  21,129
.................... if (TpoSilencioso > 0) { 
07488:  MOVF   x12,F
0748A:  BZ    7502
.................... if (TpoSilencioso == read_eeprom(TpoSil)) { 
0748C:  MOVFF  FF2,16D
07490:  BCF    FF2.7
07492:  CLRF   FAA
07494:  MOVLW  04
07496:  MOVWF  FA9
07498:  BCF    FA6.6
0749A:  BCF    FA6.7
0749C:  BSF    FA6.0
0749E:  MOVF   FA8,W
074A0:  BTFSC  x6D.7
074A2:  BSF    FF2.7
074A4:  SUBWF  x12,W
074A6:  BNZ   74FC
074A8:  CLRF   19
074AA:  BTFSC  FF2.7
074AC:  BSF    19.7
074AE:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, 100, 140, 240); // Disparamos alarma sin sonido 
.................... BusData(100,140); 
074B0:  MOVLW  64
074B2:  MOVWF  xA3
074B4:  MOVLW  8C
074B6:  MOVWF  xA4
074B8:  MOVLB  0
074BA:  CALL   15F6
074BE:  BTFSC  19.7
074C0:  BSF    FF2.7
074C2:  CLRF   19
074C4:  BTFSC  FF2.7
074C6:  BSF    19.7
074C8:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, VentPaMa, 80, VentPaMa+80); // Apago ventilador papa mama 
.................... BusData(VentPaMa,80); 
074CA:  MOVLW  37
074CC:  MOVLB  1
074CE:  MOVWF  xA3
074D0:  MOVLW  50
074D2:  MOVWF  xA4
074D4:  MOVLB  0
074D6:  CALL   15F6
074DA:  BTFSC  19.7
074DC:  BSF    FF2.7
074DE:  CLRF   19
074E0:  BTFSC  FF2.7
074E2:  BSF    19.7
074E4:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, VentGal, 80, VentGal+80); // Apago ventilador galeria 
.................... BusData(VentGal,80); 
074E6:  MOVLW  54
074E8:  MOVLB  1
074EA:  MOVWF  xA3
074EC:  MOVLW  50
074EE:  MOVWF  xA4
074F0:  MOVLB  0
074F2:  CALL   15F6
074F6:  BTFSC  19.7
074F8:  BSF    FF2.7
074FA:  MOVLB  1
.................... } 
.................... TpoSilencioso = TpoSilencioso - 1; 
074FC:  MOVLW  01
074FE:  SUBWF  x12,F
.................... } 
.................... else { // llegamos a tiempo silencioso 0 
07500:  BRA    754E
.................... EstadoAl = 6; // comienza a sonar 
07502:  MOVLW  06
07504:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
07506:  MOVF   FF2,W
07508:  MOVWF  00
0750A:  BCF    FF2.7
0750C:  CLRF   FAA
0750E:  MOVLW  02
07510:  MOVWF  FA9
07512:  MOVFF  46,FA8
07516:  BCF    FA6.6
07518:  BCF    FA6.7
0751A:  BSF    FA6.2
0751C:  MOVLB  F
0751E:  MOVLW  55
07520:  MOVWF  FA7
07522:  MOVLW  AA
07524:  MOVWF  FA7
07526:  BSF    FA6.1
07528:  BTFSC  FA6.1
0752A:  BRA    7528
0752C:  BCF    FA6.2
0752E:  MOVF   00,W
07530:  IORWF  FF2,F
.................... TpoSilencioso = read_eeprom(TpoSil);  // Leo y recupero el tiempo silencioso original 
07532:  MOVFF  FF2,16D
07536:  BCF    FF2.7
07538:  CLRF   FAA
0753A:  MOVLW  04
0753C:  MOVWF  FA9
0753E:  BCF    FA6.6
07540:  BCF    FA6.7
07542:  BSF    FA6.0
07544:  MOVF   FA8,W
07546:  MOVLB  1
07548:  BTFSC  x6D.7
0754A:  BSF    FF2.7
0754C:  MOVWF  x12
0754E:  MOVLB  F
.................... } // tiempo silencioso es 0 
.................... } // paso un segundo 
.................... } // disparada pero en silencio 
....................  
.................... if (EstadoAl == 6) { // disparada con sonido intermitente 
07550:  MOVF   46,W
07552:  SUBLW  06
07554:  BNZ   75C0
.................... if (sec != AAseguu) { // paso un segundo 
07556:  MOVLB  1
07558:  MOVF   x29,W
0755A:  SUBWF  21,W
0755C:  BZ    75C2
.................... AAseguu = sec; 
0755E:  MOVFF  21,129
.................... if ((AAseguu % 4) == 0) BusData(155,2); // printf("%c%c%c%c", 250, 155, 1, 156); // Disparamos un segundo intermitente cada 4 
07562:  MOVF   x29,W
07564:  ANDLW  03
07566:  BNZ   7584
07568:  CLRF   19
0756A:  BTFSC  FF2.7
0756C:  BSF    19.7
0756E:  BCF    FF2.7
07570:  MOVLW  9B
07572:  MOVWF  xA3
07574:  MOVLW  02
07576:  MOVWF  xA4
07578:  MOVLB  0
0757A:  CALL   15F6
0757E:  BTFSC  19.7
07580:  BSF    FF2.7
07582:  MOVLB  1
.................... AAdesact = AAdesact + 1; 
07584:  MOVLW  01
07586:  ADDWF  x2A,F
.................... if (AAdesact == 25) { // Pasaron 45 segundos de intermitente 
07588:  MOVF   x2A,W
0758A:  SUBLW  19
0758C:  BNZ   75C2
.................... AAdesact = 0; // Reiniciamos el desactivador 
0758E:  CLRF   x2A
.................... EstadoAl = 7; // Comienza disparo total 
07590:  MOVLW  07
07592:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
07594:  MOVF   FF2,W
07596:  MOVWF  00
07598:  BCF    FF2.7
0759A:  CLRF   FAA
0759C:  MOVLW  02
0759E:  MOVWF  FA9
075A0:  MOVFF  46,FA8
075A4:  BCF    FA6.6
075A6:  BCF    FA6.7
075A8:  BSF    FA6.2
075AA:  MOVLB  F
075AC:  MOVLW  55
075AE:  MOVWF  FA7
075B0:  MOVLW  AA
075B2:  MOVWF  FA7
075B4:  BSF    FA6.1
075B6:  BTFSC  FA6.1
075B8:  BRA    75B6
075BA:  BCF    FA6.2
075BC:  MOVF   00,W
075BE:  IORWF  FF2,F
075C0:  MOVLB  1
.................... } // terminan 45 segundos tranqilos 
.................... } // paso sec 
.................... } // estado al 6 
....................  
.................... if (EstadoAl == 7) { // disparada con sonido total = PANICO 
075C2:  MOVF   46,W
075C4:  SUBLW  07
075C6:  BNZ   767E
.................... if (sec != AAseguu) { // paso un segundo 
075C8:  MOVF   x29,W
075CA:  SUBWF  21,W
075CC:  BZ    767E
.................... AAseguu = sec; 
075CE:  MOVFF  21,129
075D2:  CLRF   19
075D4:  BTFSC  FF2.7
075D6:  BSF    19.7
075D8:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, 155, 100, 255); // Disparamos total 
.................... BusData(155,100); 
075DA:  MOVLW  9B
075DC:  MOVWF  xA3
075DE:  MOVLW  64
075E0:  MOVWF  xA4
075E2:  MOVLB  0
075E4:  CALL   15F6
075E8:  BTFSC  19.7
075EA:  BSF    FF2.7
075EC:  CLRF   19
075EE:  BTFSC  FF2.7
075F0:  BSF    19.7
075F2:  BCF    FF2.7
.................... //delay_ms(5); 
.................... //printf("%c%c%c%c", 250, 100, 140, 240); // Disparamos alarma de luces 
.................... BusData(100,140); 
075F4:  MOVLW  64
075F6:  MOVLB  1
075F8:  MOVWF  xA3
075FA:  MOVLW  8C
075FC:  MOVWF  xA4
075FE:  MOVLB  0
07600:  CALL   15F6
07604:  BTFSC  19.7
07606:  BSF    FF2.7
07608:  CLRF   19
0760A:  BTFSC  FF2.7
0760C:  BSF    19.7
0760E:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, VentPaMa, 80, VentPaMa+80); // Apago ventilador papa mama 
.................... BusData(VentPaMa,80); 
07610:  MOVLW  37
07612:  MOVLB  1
07614:  MOVWF  xA3
07616:  MOVLW  50
07618:  MOVWF  xA4
0761A:  MOVLB  0
0761C:  CALL   15F6
07620:  BTFSC  19.7
07622:  BSF    FF2.7
07624:  CLRF   19
07626:  BTFSC  FF2.7
07628:  BSF    19.7
0762A:  BCF    FF2.7
.................... //printf("%c%c%c%c", 250, VentGal, 80, VentGal+80); // Apago ventilador galeria 
.................... BusData(VentGal,80); 
0762C:  MOVLW  54
0762E:  MOVLB  1
07630:  MOVWF  xA3
07632:  MOVLW  50
07634:  MOVWF  xA4
07636:  MOVLB  0
07638:  CALL   15F6
0763C:  BTFSC  19.7
0763E:  BSF    FF2.7
.................... AAdesact = AAdesact + 1; 
07640:  MOVLW  01
07642:  MOVLB  1
07644:  ADDWF  x2A,F
.................... if (AAdesact == 240) { // Pasaron 4 minutos de alarma 
07646:  MOVF   x2A,W
07648:  SUBLW  F0
0764A:  BNZ   767E
.................... EstadoAl = 2; // Reactivamos total 
0764C:  MOVLW  02
0764E:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
07650:  MOVF   FF2,W
07652:  MOVWF  00
07654:  BCF    FF2.7
07656:  CLRF   FAA
07658:  MOVLW  02
0765A:  MOVWF  FA9
0765C:  MOVFF  46,FA8
07660:  BCF    FA6.6
07662:  BCF    FA6.7
07664:  BSF    FA6.2
07666:  MOVLB  F
07668:  MOVLW  55
0766A:  MOVWF  FA7
0766C:  MOVLW  AA
0766E:  MOVWF  FA7
07670:  BSF    FA6.1
07672:  BTFSC  FA6.1
07674:  BRA    7672
07676:  BCF    FA6.2
07678:  MOVF   00,W
0767A:  IORWF  FF2,F
0767C:  MOVLB  1
.................... } // terminan 45 segundos tranqilos 
.................... } // paso sec 
.................... } // estado al 7 
....................  
.................... } //fn 
0767E:  MOVLB  0
07680:  GOTO   E514 (RETURN)
....................  
....................  
....................  
.................... void SensoresLuz(){ // funcion que analiza y dispara el encendido y apagado de los pasillos y servicios 
.................... if (bit_test(ConfCas,0)) { // si configuracion casandra tiene activado los servicios (pasillos) 
*
016F8:  BTFSS  47.0
016FA:  BRA    1902
....................  
.................... //if (Sol <= Umbral) { // si estamos bajo el umbral de sol 
....................  
.................... if (IntLuz[LLPasCuar2] < 40) { // La luz esta apagada, controla casandra 
016FC:  MOVF   79,W
016FE:  SUBLW  27
01700:  BNC   172E
.................... if (SPasCuar) { if (Sol <= (Umbral + 20)) { BusData(LLPasCuar2,96); }}//printf("%c%c%c%c", 250, LLPasCuar2, 102, LLPasCuar2+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
01702:  BTFSS  35.1
01704:  BRA    1720
01706:  MOVLW  14
01708:  ADDWF  48,W
0170A:  SUBWF  44,W
0170C:  BZ    1710
0170E:  BC    171E
01710:  MOVLW  2F
01712:  MOVLB  1
01714:  MOVWF  xA3
01716:  MOVLW  60
01718:  MOVWF  xA4
0171A:  MOVLB  0
0171C:  RCALL  15F6
.................... else BusData(LLPasCuar2,80); //printf("%c%c%c%c", 250, LLPasCuar2, 80, LLPasCuar2+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
0171E:  BRA    172E
01720:  MOVLW  2F
01722:  MOVLB  1
01724:  MOVWF  xA3
01726:  MOVLW  50
01728:  MOVWF  xA4
0172A:  MOVLB  0
0172C:  RCALL  15F6
.................... } // esta apagada 
....................  
.................... if (IntLuz[LLPasCuar1] < 40) { // La luz esta apagada, controla casandra 
0172E:  MOVF   7A,W
01730:  SUBLW  27
01732:  BNC   1760
.................... if (SPasCuar) { if (Sol <= (Umbral + 20)) { BusData(LLPasCuar1,96); }} // printf("%c%c%c%c", 250, LLPasCuar1, 102, LLPasCuar1+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
01734:  BTFSS  35.1
01736:  BRA    1752
01738:  MOVLW  14
0173A:  ADDWF  48,W
0173C:  SUBWF  44,W
0173E:  BZ    1742
01740:  BC    1750
01742:  MOVLW  30
01744:  MOVLB  1
01746:  MOVWF  xA3
01748:  MOVLW  60
0174A:  MOVWF  xA4
0174C:  MOVLB  0
0174E:  RCALL  15F6
.................... else BusData(LLPasCuar1,80); //printf("%c%c%c%c", 250, LLPasCuar1, 80, LLPasCuar1+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
01750:  BRA    1760
01752:  MOVLW  30
01754:  MOVLB  1
01756:  MOVWF  xA3
01758:  MOVLW  50
0175A:  MOVWF  xA4
0175C:  MOVLB  0
0175E:  RCALL  15F6
.................... } // esta apagada 
....................  
.................... if ((IntLuz[LLEstar]) < 40) { // La luz esta apagada, controla casandra 
01760:  MOVF   x8C,W
01762:  SUBLW  27
01764:  BNC   1792
.................... if (SEstar) { if (Sol <= (Umbral + 10)) { BusData(LLEstar,95); }} //printf("%c%c%c%c", 250, LLEstar, 95, LLEstar+95); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
01766:  BTFSS  35.2
01768:  BRA    1784
0176A:  MOVLW  0A
0176C:  ADDWF  48,W
0176E:  SUBWF  44,W
01770:  BZ    1774
01772:  BC    1782
01774:  MOVLW  42
01776:  MOVLB  1
01778:  MOVWF  xA3
0177A:  MOVLW  5F
0177C:  MOVWF  xA4
0177E:  MOVLB  0
01780:  RCALL  15F6
.................... else BusData(LLEstar,80); //printf("%c%c%c%c", 250, LLEstar, 80, LLEstar+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
01782:  BRA    1792
01784:  MOVLW  42
01786:  MOVLB  1
01788:  MOVWF  xA3
0178A:  MOVLW  50
0178C:  MOVWF  xA4
0178E:  MOVLB  0
01790:  RCALL  15F6
.................... } // esta apagada 
....................  
.................... if ((IntLuz[LLHall]) < 40) { // La luz esta apagada, controla casandra 
01792:  MOVF   x84,W
01794:  SUBLW  27
01796:  BNC   17C4
.................... if (SHall) { if (Sol <= (Umbral + 10)) { BusData(LLHall,102); }} //printf("%c%c%c%c", 250, LLHall, 102, LLHall+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
01798:  BTFSS  35.3
0179A:  BRA    17B6
0179C:  MOVLW  0A
0179E:  ADDWF  48,W
017A0:  SUBWF  44,W
017A2:  BZ    17A6
017A4:  BC    17B4
017A6:  MOVLW  3A
017A8:  MOVLB  1
017AA:  MOVWF  xA3
017AC:  MOVLW  66
017AE:  MOVWF  xA4
017B0:  MOVLB  0
017B2:  RCALL  15F6
.................... else BusData(LLHall,80); //printf("%c%c%c%c", 250, LLHall, 80, LLHall+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
017B4:  BRA    17C4
017B6:  MOVLW  3A
017B8:  MOVLB  1
017BA:  MOVWF  xA3
017BC:  MOVLW  50
017BE:  MOVWF  xA4
017C0:  MOVLB  0
017C2:  RCALL  15F6
.................... } // esta apagada 
....................  
.................... if ((CuentaLuz - CuentaSens) < 4){ //solo funciona si hay menos de 4 luces prendidas 
017C4:  MOVLB  1
017C6:  MOVF   x53,W
017C8:  SUBWF  x52,W
017CA:  SUBLW  03
017CC:  BNC   1802
.................... if ((IntLuz[LLLiving1]) < 40) { // La luz esta apagada, controla casandra 
017CE:  MOVLB  0
017D0:  MOVF   x90,W
017D2:  SUBLW  27
017D4:  BNC   1802
.................... if (SLiving) { if (Sol <= (Umbral + 10)) { BusData(LLLiving1,95); }} //printf("%c%c%c%c", 250, LLLiving1, 102, LLLiving1+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
017D6:  BTFSS  35.4
017D8:  BRA    17F4
017DA:  MOVLW  0A
017DC:  ADDWF  48,W
017DE:  SUBWF  44,W
017E0:  BZ    17E4
017E2:  BC    17F2
017E4:  MOVLW  46
017E6:  MOVLB  1
017E8:  MOVWF  xA3
017EA:  MOVLW  5F
017EC:  MOVWF  xA4
017EE:  MOVLB  0
017F0:  RCALL  15F6
.................... else BusData(LLLiving1,80); //printf("%c%c%c%c", 250, LLLiving1, 80, LLLiving1+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
017F2:  BRA    1802
017F4:  MOVLW  46
017F6:  MOVLB  1
017F8:  MOVWF  xA3
017FA:  MOVLW  50
017FC:  MOVWF  xA4
017FE:  MOVLB  0
01800:  RCALL  15F6
.................... } // esta apagada 
.................... } // luces del sensor 
....................  
.................... if ((IntLuz[LLCocina]) < 40) { // La luz esta apagada, controla casandra 
01802:  MOVLB  0
01804:  MOVF   x89,W
01806:  SUBLW  27
01808:  BNC   1836
.................... if (SCocina) { if (Sol <= (Umbral + 10)) { BusData(LLCocina,95); }} //printf("%c%c%c%c", 250, LLCocina, 95, LLCocina+95); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
0180A:  BTFSS  35.5
0180C:  BRA    1828
0180E:  MOVLW  0A
01810:  ADDWF  48,W
01812:  SUBWF  44,W
01814:  BZ    1818
01816:  BC    1826
01818:  MOVLW  3F
0181A:  MOVLB  1
0181C:  MOVWF  xA3
0181E:  MOVLW  5F
01820:  MOVWF  xA4
01822:  MOVLB  0
01824:  RCALL  15F6
.................... else BusData(LLCocina,80); //printf("%c%c%c%c", 250, LLCocina, 80, LLCocina+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
01826:  BRA    1836
01828:  MOVLW  3F
0182A:  MOVLB  1
0182C:  MOVWF  xA3
0182E:  MOVLW  50
01830:  MOVWF  xA4
01832:  MOVLB  0
01834:  RCALL  15F6
.................... } // esta apagada 
....................  
.................... if ((IntLuz[LLPasEnt]) < 40) { // La luz esta apagada, controla casandra 
01836:  MOVF   x96,W
01838:  SUBLW  27
0183A:  BNC   1868
.................... if (SPasEnt) { if (Sol <= (Umbral + 10)) { BusData(LLPasEnt,102); }} //printf("%c%c%c%c", 250, LLPasEnt, 102, LLPasEnt+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
0183C:  BTFSS  35.6
0183E:  BRA    185A
01840:  MOVLW  0A
01842:  ADDWF  48,W
01844:  SUBWF  44,W
01846:  BZ    184A
01848:  BC    1858
0184A:  MOVLW  4C
0184C:  MOVLB  1
0184E:  MOVWF  xA3
01850:  MOVLW  66
01852:  MOVWF  xA4
01854:  MOVLB  0
01856:  RCALL  15F6
.................... else BusData(LLPasEnt,80); //printf("%c%c%c%c", 250, LLPasEnt, 80, LLPasEnt+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
01858:  BRA    1868
0185A:  MOVLW  4C
0185C:  MOVLB  1
0185E:  MOVWF  xA3
01860:  MOVLW  50
01862:  MOVWF  xA4
01864:  MOVLB  0
01866:  RCALL  15F6
.................... } // esta apagada 
....................  
.................... if ((IntLuz[LLGaleria1]) < 40) { // La luz esta apagada, controla casandra 
01868:  MOVF   x9C,W
0186A:  SUBLW  27
0186C:  BNC   189A
.................... if (SGaleria) { if (Sol <= (Umbral + 10)) { BusData(LLGaleria1,102); }} //printf("%c%c%c%c", 250, LLGaleria1, 102, LLGaleria1+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
0186E:  BTFSS  35.7
01870:  BRA    188C
01872:  MOVLW  0A
01874:  ADDWF  48,W
01876:  SUBWF  44,W
01878:  BZ    187C
0187A:  BC    188A
0187C:  MOVLW  52
0187E:  MOVLB  1
01880:  MOVWF  xA3
01882:  MOVLW  66
01884:  MOVWF  xA4
01886:  MOVLB  0
01888:  RCALL  15F6
.................... else BusData(LLGaleria1,80); //printf("%c%c%c%c", 250, LLGaleria1, 80, LLGaleria1+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
0188A:  BRA    189A
0188C:  MOVLW  52
0188E:  MOVLB  1
01890:  MOVWF  xA3
01892:  MOVLW  50
01894:  MOVWF  xA4
01896:  MOVLB  0
01898:  RCALL  15F6
.................... } // esta apagada 
.................... if ((IntLuz[LLGaleria2]) < 40) { // La luz esta apagada, controla casandra 
0189A:  MOVF   x9D,W
0189C:  SUBLW  27
0189E:  BNC   18CC
.................... if (SParrilla) { if (Sol <= (Umbral + 10)) { BusData(LLGaleria2,102); }} //printf("%c%c%c%c", 250, LLGaleria2, 102, LLGaleria2+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
018A0:  MOVLB  1
018A2:  BTFSS  x28.0
018A4:  BRA    18C0
018A6:  MOVLW  0A
018A8:  ADDWF  48,W
018AA:  SUBWF  44,W
018AC:  BZ    18B0
018AE:  BC    18BE
018B0:  MOVLW  53
018B2:  MOVWF  xA3
018B4:  MOVLW  66
018B6:  MOVWF  xA4
018B8:  MOVLB  0
018BA:  RCALL  15F6
018BC:  MOVLB  1
.................... else BusData(LLGaleria2,80); //printf("%c%c%c%c", 250, LLGaleria2, 80, LLGaleria2+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
018BE:  BRA    18CE
018C0:  MOVLW  53
018C2:  MOVWF  xA3
018C4:  MOVLW  50
018C6:  MOVWF  xA4
018C8:  MOVLB  0
018CA:  RCALL  15F6
018CC:  MOVLB  1
.................... } // esta apagada 
....................  
.................... if ((IntLuz[LLGarage]) < 40) { // La luz esta apagada, controla casandra 
018CE:  MOVLB  0
018D0:  MOVF   x95,W
018D2:  SUBLW  27
018D4:  BNC   1902
.................... if (SGarage) { if (Sol <= (Umbral + 10)) { BusData(LLGarage,95); }} //printf("%c%c%c%c", 250, LLGarage, 102, LLGarage+102); // Prendemos en la red // esta activado el sensor de los pasillos de los cuartos 
018D6:  MOVLB  1
018D8:  BTFSS  x28.1
018DA:  BRA    18F6
018DC:  MOVLW  0A
018DE:  ADDWF  48,W
018E0:  SUBWF  44,W
018E2:  BZ    18E6
018E4:  BC    18F4
018E6:  MOVLW  4B
018E8:  MOVWF  xA3
018EA:  MOVLW  5F
018EC:  MOVWF  xA4
018EE:  MOVLB  0
018F0:  RCALL  15F6
018F2:  MOVLB  1
.................... else BusData(LLGarage,80); //printf("%c%c%c%c", 250, LLGarage, 80, LLGarage+80); // Apagamos en la red // esta activado el sensor de los pasillos de los cuartos 
018F4:  BRA    1904
018F6:  MOVLW  4B
018F8:  MOVWF  xA3
018FA:  MOVLW  50
018FC:  MOVWF  xA4
018FE:  MOVLB  0
01900:  RCALL  15F6
01902:  MOVLB  1
.................... } // esta apagada 
....................  
.................... //} // si el sol es menor a umbral 
....................  
.................... } // confcas 
.................... } // fn 
01904:  MOVLB  0
01906:  GOTO   1D84 (RETURN)
....................  
.................... void SensoresAl(){  // Funcion que maneja criterios de disparo de alamra segun sensores 
....................  
.................... int SumCuartos; 
.................... if (SPasCuar == true) SumCuartos = 1; 
0190A:  BTFSS  35.1
0190C:  BRA    1916
0190E:  MOVLW  01
01910:  MOVLB  1
01912:  MOVWF  x9F
.................... else SumCuartos = 0; 
01914:  BRA    191A
01916:  MOVLB  1
01918:  CLRF   x9F
....................  
.................... int SumEstar; 
.................... if (SEstar == true) SumEstar = 1; 
0191A:  BTFSS  35.2
0191C:  BRA    1924
0191E:  MOVLW  01
01920:  MOVWF  xA0
.................... else SumEstar = 0; 
01922:  BRA    1926
01924:  CLRF   xA0
....................  
.................... int SumHall; 
.................... if (SHall == true) SumHall = 1; 
01926:  BTFSS  35.3
01928:  BRA    1930
0192A:  MOVLW  01
0192C:  MOVWF  xA1
.................... else SumHall = 0; 
0192E:  BRA    1932
01930:  CLRF   xA1
....................  
.................... int SumLiving; 
.................... if (SLiving == true) SumLiving = 1; 
01932:  BTFSS  35.4
01934:  BRA    193C
01936:  MOVLW  01
01938:  MOVWF  xA2
.................... else SumLiving = 0; 
0193A:  BRA    193E
0193C:  CLRF   xA2
....................  
.................... int SumCocina; 
.................... if (SCocina == true) SumCocina = 1; 
0193E:  BTFSS  35.5
01940:  BRA    1948
01942:  MOVLW  01
01944:  MOVWF  xA3
.................... else SumCocina = 0; 
01946:  BRA    194A
01948:  CLRF   xA3
....................  
.................... int SumPasEnt; 
.................... if (SPasEnt == true) SumPasEnt = 1; 
0194A:  BTFSS  35.6
0194C:  BRA    1954
0194E:  MOVLW  01
01950:  MOVWF  xA4
.................... else SumPasEnt = 0; 
01952:  BRA    1956
01954:  CLRF   xA4
....................  
.................... int SumGaleria; 
.................... if (SGaleria == true) SumGaleria = 1; 
01956:  BTFSS  35.7
01958:  BRA    1960
0195A:  MOVLW  01
0195C:  MOVWF  xA5
.................... else SumGaleria = 0; 
0195E:  BRA    1962
01960:  CLRF   xA5
....................  
.................... int SumParrilla; 
.................... if (SParrilla == true) SumParrilla = 1; 
01962:  BTFSS  x28.0
01964:  BRA    196C
01966:  MOVLW  01
01968:  MOVWF  xA6
.................... else SumParrilla = 0; 
0196A:  BRA    196E
0196C:  CLRF   xA6
....................  
.................... int SumGarage; 
.................... if (SGarage == true) SumGarage = 1; 
0196E:  BTFSS  x28.1
01970:  BRA    1978
01972:  MOVLW  01
01974:  MOVWF  xA7
.................... else SumGarage = 0; 
01976:  BRA    197A
01978:  CLRF   xA7
....................  
.................... if (TpoSeguro == 0){ // 30 segundos mas despues de activacion 
0197A:  MOVF   x14,F
0197C:  BTFSS  FD8.2
0197E:  BRA    1A7A
....................  
.................... if (EstadoAl == 2) { // Alarma total activa (dispara con 3 sensores cualquiera) 
01980:  MOVF   46,W
01982:  SUBLW  02
01984:  BNZ   19D8
.................... if ((SumCuartos + SumEstar + SumHall + SumLiving + SumCocina + SumPasEnt + SumGaleria + SumParrilla + SumGarage) > 2){ 
01986:  MOVF   xA0,W
01988:  ADDWF  x9F,W
0198A:  ADDWF  xA1,W
0198C:  ADDWF  xA2,W
0198E:  ADDWF  xA3,W
01990:  ADDWF  xA4,W
01992:  ADDWF  xA5,W
01994:  ADDWF  xA6,W
01996:  ADDWF  xA7,W
01998:  SUBLW  02
0199A:  BC    19D8
.................... EstadoAl = 5; 
0199C:  MOVLW  05
0199E:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
019A0:  MOVF   FF2,W
019A2:  MOVWF  00
019A4:  BCF    FF2.7
019A6:  CLRF   FAA
019A8:  MOVLW  02
019AA:  MOVWF  FA9
019AC:  MOVFF  46,FA8
019B0:  BCF    FA6.6
019B2:  BCF    FA6.7
019B4:  BSF    FA6.2
019B6:  MOVLB  F
019B8:  MOVLW  55
019BA:  MOVWF  FA7
019BC:  MOVLW  AA
019BE:  MOVWF  FA7
019C0:  BSF    FA6.1
019C2:  BTFSC  FA6.1
019C4:  BRA    19C2
019C6:  BCF    FA6.2
019C8:  MOVF   00,W
019CA:  IORWF  FF2,F
.................... delay_ms(3); 
019CC:  MOVLW  03
019CE:  MOVLB  1
019D0:  MOVWF  xA8
019D2:  MOVLB  0
019D4:  RCALL  1456
019D6:  MOVLB  1
.................... } 
.................... } //Al2 
....................  
.................... if (EstadoAl == 3) { // Alarma CuartosOK (dispara con 3 sensores cualquiera fuera de cuartos) 
019D8:  MOVF   46,W
019DA:  SUBLW  03
019DC:  BNZ   1A2E
.................... if ((SumEstar + SumHall + SumLiving + SumCocina + SumPasEnt + SumGaleria + SumParrilla + SumGarage) > 2){ 
019DE:  MOVF   xA1,W
019E0:  ADDWF  xA0,W
019E2:  ADDWF  xA2,W
019E4:  ADDWF  xA3,W
019E6:  ADDWF  xA4,W
019E8:  ADDWF  xA5,W
019EA:  ADDWF  xA6,W
019EC:  ADDWF  xA7,W
019EE:  SUBLW  02
019F0:  BC    1A2E
.................... EstadoAl = 5; 
019F2:  MOVLW  05
019F4:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
019F6:  MOVF   FF2,W
019F8:  MOVWF  00
019FA:  BCF    FF2.7
019FC:  CLRF   FAA
019FE:  MOVLW  02
01A00:  MOVWF  FA9
01A02:  MOVFF  46,FA8
01A06:  BCF    FA6.6
01A08:  BCF    FA6.7
01A0A:  BSF    FA6.2
01A0C:  MOVLB  F
01A0E:  MOVLW  55
01A10:  MOVWF  FA7
01A12:  MOVLW  AA
01A14:  MOVWF  FA7
01A16:  BSF    FA6.1
01A18:  BTFSC  FA6.1
01A1A:  BRA    1A18
01A1C:  BCF    FA6.2
01A1E:  MOVF   00,W
01A20:  IORWF  FF2,F
.................... delay_ms(3); 
01A22:  MOVLW  03
01A24:  MOVLB  1
01A26:  MOVWF  xA8
01A28:  MOVLB  0
01A2A:  RCALL  1456
01A2C:  MOVLB  1
.................... } 
.................... } //Al3 
....................  
.................... if (EstadoAl == 4) { // Alarma CasaOK (dispara con 2 sensores cualquiera de afuera) 
01A2E:  MOVF   46,W
01A30:  SUBLW  04
01A32:  BNZ   1A7A
.................... if ((SumGaleria + SumParrilla + SumGarage) > 1){ 
01A34:  MOVF   xA6,W
01A36:  ADDWF  xA5,W
01A38:  ADDWF  xA7,W
01A3A:  SUBLW  01
01A3C:  BC    1A7A
.................... EstadoAl = 5; 
01A3E:  MOVLW  05
01A40:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
01A42:  MOVF   FF2,W
01A44:  MOVWF  00
01A46:  BCF    FF2.7
01A48:  CLRF   FAA
01A4A:  MOVLW  02
01A4C:  MOVWF  FA9
01A4E:  MOVFF  46,FA8
01A52:  BCF    FA6.6
01A54:  BCF    FA6.7
01A56:  BSF    FA6.2
01A58:  MOVLB  F
01A5A:  MOVLW  55
01A5C:  MOVWF  FA7
01A5E:  MOVLW  AA
01A60:  MOVWF  FA7
01A62:  BSF    FA6.1
01A64:  BTFSC  FA6.1
01A66:  BRA    1A64
01A68:  BCF    FA6.2
01A6A:  MOVF   00,W
01A6C:  IORWF  FF2,F
.................... delay_ms(3); 
01A6E:  MOVLW  03
01A70:  MOVLB  1
01A72:  MOVWF  xA8
01A74:  MOVLB  0
01A76:  RCALL  1456
01A78:  MOVLB  1
.................... } 
.................... } //Al4 
....................  
.................... } // ya termiano el tiempo seguro 
....................  
.................... } //fn 
01A7A:  MOVLB  0
01A7C:  GOTO   1D86 (RETURN)
....................  
....................  
....................  
.................... void Automaticos(){ // funcion que analiza y dispara el encendido y apagado de los grupos automaticos 
....................  
.................... int kk; 
.................... int dowfalso; 
.................... int HsAux; 
.................... int MinAux; 
.................... int Miti; 
....................  
.................... if (bit_test(ConfCas,1)) { // si configuracion casandra tiene activado grupo auto 1 
*
02448:  BTFSS  47.1
0244A:  BRA    25E0
....................  
.................... if (bit_test(Gdias[1], dow)) {  // El grupo 1 esta activo el dia de hoy 
0244C:  MOVFF  120,00
02450:  MOVF   27,W
02452:  MOVWF  01
02454:  BZ    245E
02456:  BCF    FD8.0
02458:  RRCF   00,F
0245A:  DECFSZ 01,F
0245C:  BRA    2456
0245E:  BTFSS  00.0
02460:  BRA    2502
.................... ////// ENCENDIDO 
.................... if (GOn[1] == 48) {  // si se prende por fotocelda 
02462:  MOVLB  1
02464:  MOVF   x16,W
02466:  SUBLW  30
02468:  BNZ   24A4
.................... //if ((hrs > 12) && (hrs < 24)){ 
.................... if ((Umbral == Sol) && (EsNoche == false)){ 
0246A:  MOVF   44,W
0246C:  SUBWF  48,W
0246E:  BNZ   24A4
02470:  BTFSC  x28.3
02472:  BRA    24A4
.................... //if (((Umbral - 1) == Sol) || ((Umbral - 2) == Sol) || ((Umbral - 3) == Sol)) { // si vale 1 menos que umbral, o 2 o 3 menos disparamos encendido 
....................       for (kk=32;kk<94;kk++) { 
02474:  MOVLW  20
02476:  MOVWF  x9D
02478:  MOVF   x9D,W
0247A:  SUBLW  5D
0247C:  BNC   24A2
....................       if (bit_test(LGrupo[kk],4))Prender (kk); // si pertenece al grupo la prendo 
0247E:  CLRF   03
02480:  MOVF   x9D,W
02482:  ADDLW  AD
02484:  MOVWF  FE9
02486:  MOVLW  00
02488:  ADDWFC 03,W
0248A:  MOVWF  FEA
0248C:  MOVFF  FEF,1A2
02490:  BTFSS  xA2.4
02492:  BRA    249E
02494:  MOVFF  19D,1A2
02498:  MOVLB  0
0249A:  RCALL  2304
0249C:  MOVLB  1
....................       } // for... 
0249E:  INCF   x9D,F
024A0:  BRA    2478
.................... EsNoche = true; 
024A2:  BSF    x28.3
.................... } 
.................... //} // horario 
.................... } // Prende por fotocelda 
....................  
.................... if (GOn[1] < 48) { // por horario comienza 
024A4:  MOVF   x16,W
024A6:  SUBLW  2F
024A8:  BNC   2500
.................... HsAux = (hrs*2)+(GOn[1]%2); 
024AA:  BCF    FD8.0
024AC:  RLCF   23,W
024AE:  MOVWF  xA2
024B0:  MOVF   x16,W
024B2:  ANDLW  01
024B4:  ADDWF  xA2,W
024B6:  MOVWF  x9F
.................... MinAux = ((GOn[1]%2)*30); 
024B8:  MOVF   x16,W
024BA:  ANDLW  01
024BC:  MULLW  1E
024BE:  MOVFF  FF3,1A0
....................  
.................... if ((GOn[1] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
024C2:  MOVF   x9F,W
024C4:  SUBWF  x16,W
024C6:  BNZ   2500
024C8:  MOVF   xA0,W
024CA:  SUBWF  22,W
024CC:  BNZ   2500
024CE:  MOVF   21,F
024D0:  BNZ   2500
....................       for (kk=32;kk<94;kk++) { 
024D2:  MOVLW  20
024D4:  MOVWF  x9D
024D6:  MOVF   x9D,W
024D8:  SUBLW  5D
024DA:  BNC   2500
....................       if (bit_test(LGrupo[kk],4))Prender(kk); // si pertenece al grupo la prendo  
024DC:  CLRF   03
024DE:  MOVF   x9D,W
024E0:  ADDLW  AD
024E2:  MOVWF  FE9
024E4:  MOVLW  00
024E6:  ADDWFC 03,W
024E8:  MOVWF  FEA
024EA:  MOVFF  FEF,1A2
024EE:  BTFSS  xA2.4
024F0:  BRA    24FC
024F2:  MOVFF  19D,1A2
024F6:  MOVLB  0
024F8:  RCALL  2304
024FA:  MOVLB  1
....................       } // for... 
024FC:  INCF   x9D,F
024FE:  BRA    24D6
02500:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G1 activo hoy 
....................  
.................... Miti = GOff[1]/2; 
02502:  BCF    FD8.0
02504:  MOVLB  1
02506:  RRCF   x1B,W
02508:  MOVWF  xA1
.................... if (( (Miti >= 0) && (Miti < 6) ) || (Miti == 24)) { 
0250A:  MOVF   xA1,W
0250C:  SUBLW  05
0250E:  BC    2516
02510:  MOVF   xA1,W
02512:  SUBLW  18
02514:  BNZ   2528
.................... dowfalso = dow + 1; 
02516:  MOVLW  01
02518:  ADDWF  27,W
0251A:  MOVWF  x9E
.................... if (dowfalso == 8) dowfalso = 1; 
0251C:  MOVF   x9E,W
0251E:  SUBLW  08
02520:  BNZ   2526
02522:  MOVLW  01
02524:  MOVWF  x9E
.................... } 
.................... else dowfalso = dow; 
02526:  BRA    252C
02528:  MOVFF  27,19E
....................  
.................... if (bit_test(Gdias[1], dowfalso)) {  // El grupo 1 esta activo el dia de hoy o ayer, dado que es para apagado 
0252C:  MOVFF  120,00
02530:  MOVF   x9E,W
02532:  MOVWF  01
02534:  BZ    253E
02536:  BCF    FD8.0
02538:  RRCF   00,F
0253A:  DECFSZ 01,F
0253C:  BRA    2536
0253E:  BTFSS  00.0
02540:  BRA    25DE
.................... ////// APAGADO 
.................... if (GOff[1] == 48) {  // si se apaga por fotocelda 
02542:  MOVF   x1B,W
02544:  SUBLW  30
02546:  BNZ   2582
.................... //if ((hrs > 0) && (hrs < 12)){ 
.................... if ((Umbral == Sol) && (EsNoche == true)){ 
02548:  MOVF   44,W
0254A:  SUBWF  48,W
0254C:  BNZ   2582
0254E:  BTFSS  x28.3
02550:  BRA    2582
.................... //if (((Umbral + 1) == Sol) || ((Umbral + 2) == Sol) || ((Umbral + 3) == Sol)) { // si vale 1 mas que umbral, o 2 o 3 mas disparamos apagado 
....................       for (kk=32;kk<94;kk++) { 
02552:  MOVLW  20
02554:  MOVWF  x9D
02556:  MOVF   x9D,W
02558:  SUBLW  5D
0255A:  BNC   2580
....................       if (bit_test(LGrupo[kk],4))Apagar(kk); // si pertenece al grupo la apago  
0255C:  CLRF   03
0255E:  MOVF   x9D,W
02560:  ADDLW  AD
02562:  MOVWF  FE9
02564:  MOVLW  00
02566:  ADDWFC 03,W
02568:  MOVWF  FEA
0256A:  MOVFF  FEF,1A2
0256E:  BTFSS  xA2.4
02570:  BRA    257C
02572:  MOVFF  19D,1A2
02576:  MOVLB  0
02578:  RCALL  23A6
0257A:  MOVLB  1
....................       } // for... 
0257C:  INCF   x9D,F
0257E:  BRA    2556
.................... EsNoche = false;       
02580:  BCF    x28.3
.................... } 
.................... //} // horario fotocelda 
.................... } // fotocelda  
.................... if (GOff[1] < 48) { // por horarios 
02582:  MOVF   x1B,W
02584:  SUBLW  2F
02586:  BNC   25DE
.................... HsAux = (hrs*2)+(GOff[1]%2); 
02588:  BCF    FD8.0
0258A:  RLCF   23,W
0258C:  MOVWF  xA2
0258E:  MOVF   x1B,W
02590:  ANDLW  01
02592:  ADDWF  xA2,W
02594:  MOVWF  x9F
.................... MinAux = ((GOff[1]%2)*30); 
02596:  MOVF   x1B,W
02598:  ANDLW  01
0259A:  MULLW  1E
0259C:  MOVFF  FF3,1A0
.................... if ((GOff[1] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
025A0:  MOVF   x9F,W
025A2:  SUBWF  x1B,W
025A4:  BNZ   25DE
025A6:  MOVF   xA0,W
025A8:  SUBWF  22,W
025AA:  BNZ   25DE
025AC:  MOVF   21,F
025AE:  BNZ   25DE
....................       for (kk=32;kk<94;kk++) { 
025B0:  MOVLW  20
025B2:  MOVWF  x9D
025B4:  MOVF   x9D,W
025B6:  SUBLW  5D
025B8:  BNC   25DE
....................       if (bit_test(LGrupo[kk],4))Apagar(kk); // si pertenece al grupo la apago  
025BA:  CLRF   03
025BC:  MOVF   x9D,W
025BE:  ADDLW  AD
025C0:  MOVWF  FE9
025C2:  MOVLW  00
025C4:  ADDWFC 03,W
025C6:  MOVWF  FEA
025C8:  MOVFF  FEF,1A2
025CC:  BTFSS  xA2.4
025CE:  BRA    25DA
025D0:  MOVFF  19D,1A2
025D4:  MOVLB  0
025D6:  RCALL  23A6
025D8:  MOVLB  1
....................       } // for... 
025DA:  INCF   x9D,F
025DC:  BRA    25B4
025DE:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G1 activo hoy 
.................... } // si confcas tiene activado auto1 //////////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... if (bit_test(ConfCas,2)) { // si configuracion casandra tiene activado grupo auto 2 
025E0:  BTFSS  47.2
025E2:  BRA    2778
....................  
.................... if (bit_test(Gdias[2], dow)) {  // El grupo 2 esta activo el dia de hoy 
025E4:  MOVFF  121,00
025E8:  MOVF   27,W
025EA:  MOVWF  01
025EC:  BZ    25F6
025EE:  BCF    FD8.0
025F0:  RRCF   00,F
025F2:  DECFSZ 01,F
025F4:  BRA    25EE
025F6:  BTFSS  00.0
025F8:  BRA    269A
.................... ////// ENCENDIDO 
.................... if (GOn[2] == 48) {  // si se prende por fotocelda 
025FA:  MOVLB  1
025FC:  MOVF   x17,W
025FE:  SUBLW  30
02600:  BNZ   263C
.................... //if ((hrs > 12) && (hrs < 24)){ 
.................... if ((Umbral == Sol) && (EsNoche == false)){ 
02602:  MOVF   44,W
02604:  SUBWF  48,W
02606:  BNZ   263C
02608:  BTFSC  x28.3
0260A:  BRA    263C
.................... //if (((Umbral - 1) == Sol) || ((Umbral - 2) == Sol) || ((Umbral - 3) == Sol)) { // si vale 1 menos que umbral, o 2 o 3 menos disparamos encendido 
....................       for (kk=32;kk<94;kk++) { 
0260C:  MOVLW  20
0260E:  MOVWF  x9D
02610:  MOVF   x9D,W
02612:  SUBLW  5D
02614:  BNC   263A
....................       if (bit_test(LGrupo[kk],5))Prender(kk); // si pertenece al grupo la prendo  
02616:  CLRF   03
02618:  MOVF   x9D,W
0261A:  ADDLW  AD
0261C:  MOVWF  FE9
0261E:  MOVLW  00
02620:  ADDWFC 03,W
02622:  MOVWF  FEA
02624:  MOVFF  FEF,1A2
02628:  BTFSS  xA2.5
0262A:  BRA    2636
0262C:  MOVFF  19D,1A2
02630:  MOVLB  0
02632:  RCALL  2304
02634:  MOVLB  1
....................       } // for... 
02636:  INCF   x9D,F
02638:  BRA    2610
.................... EsNoche = true; 
0263A:  BSF    x28.3
.................... } 
.................... //} // hs ftcel 
.................... }  
.................... if (GOn[2] < 48) {  // si se prende por horario 
0263C:  MOVF   x17,W
0263E:  SUBLW  2F
02640:  BNC   2698
.................... HsAux = (hrs*2)+(GOn[2]%2); 
02642:  BCF    FD8.0
02644:  RLCF   23,W
02646:  MOVWF  xA2
02648:  MOVF   x17,W
0264A:  ANDLW  01
0264C:  ADDWF  xA2,W
0264E:  MOVWF  x9F
.................... //if (GOn[2]%2) MinAux = 30; 
.................... //else MinAux = 0; 
.................... MinAux = ((GOn[2]%2)*30); 
02650:  MOVF   x17,W
02652:  ANDLW  01
02654:  MULLW  1E
02656:  MOVFF  FF3,1A0
.................... if ((GOn[2] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
0265A:  MOVF   x9F,W
0265C:  SUBWF  x17,W
0265E:  BNZ   2698
02660:  MOVF   xA0,W
02662:  SUBWF  22,W
02664:  BNZ   2698
02666:  MOVF   21,F
02668:  BNZ   2698
....................       for (kk=32;kk<94;kk++) { 
0266A:  MOVLW  20
0266C:  MOVWF  x9D
0266E:  MOVF   x9D,W
02670:  SUBLW  5D
02672:  BNC   2698
....................       if (bit_test(LGrupo[kk],5)) Prender(kk); // si pertenece al grupo la prendo  
02674:  CLRF   03
02676:  MOVF   x9D,W
02678:  ADDLW  AD
0267A:  MOVWF  FE9
0267C:  MOVLW  00
0267E:  ADDWFC 03,W
02680:  MOVWF  FEA
02682:  MOVFF  FEF,1A2
02686:  BTFSS  xA2.5
02688:  BRA    2694
0268A:  MOVFF  19D,1A2
0268E:  MOVLB  0
02690:  RCALL  2304
02692:  MOVLB  1
....................       } // for... 
02694:  INCF   x9D,F
02696:  BRA    266E
02698:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G2 activo hoy 
....................  
.................... Miti = GOff[2]/2; 
0269A:  BCF    FD8.0
0269C:  MOVLB  1
0269E:  RRCF   x1C,W
026A0:  MOVWF  xA1
.................... if (( (Miti >= 0) && (Miti < 6) ) || (Miti == 24)) { 
026A2:  MOVF   xA1,W
026A4:  SUBLW  05
026A6:  BC    26AE
026A8:  MOVF   xA1,W
026AA:  SUBLW  18
026AC:  BNZ   26C0
.................... dowfalso = dow + 1; 
026AE:  MOVLW  01
026B0:  ADDWF  27,W
026B2:  MOVWF  x9E
.................... if (dowfalso == 8) dowfalso = 1; 
026B4:  MOVF   x9E,W
026B6:  SUBLW  08
026B8:  BNZ   26BE
026BA:  MOVLW  01
026BC:  MOVWF  x9E
.................... } 
.................... else dowfalso = dow; 
026BE:  BRA    26C4
026C0:  MOVFF  27,19E
....................  
.................... if (bit_test(Gdias[2], dowfalso)) {  // El grupo 2 esta activo el dia de hoy o ayer, dado que es para apagado 
026C4:  MOVFF  121,00
026C8:  MOVF   x9E,W
026CA:  MOVWF  01
026CC:  BZ    26D6
026CE:  BCF    FD8.0
026D0:  RRCF   00,F
026D2:  DECFSZ 01,F
026D4:  BRA    26CE
026D6:  BTFSS  00.0
026D8:  BRA    2776
.................... ////// APAGADO 
.................... if (GOff[2] == 48) {  // si se apaga por fotocelda 
026DA:  MOVF   x1C,W
026DC:  SUBLW  30
026DE:  BNZ   271A
.................... //if ((hrs > 0) && (hrs < 12)){ 
.................... if ((Umbral == Sol) && (EsNoche == true)){ 
026E0:  MOVF   44,W
026E2:  SUBWF  48,W
026E4:  BNZ   271A
026E6:  BTFSS  x28.3
026E8:  BRA    271A
.................... //if (((Umbral + 1) == Sol) || ((Umbral + 2) == Sol) || ((Umbral + 3) == Sol)) { // si vale 1 mas que umbral, o 2 o 3 mas disparamos apagado 
....................       for (kk=32;kk<94;kk++) { 
026EA:  MOVLW  20
026EC:  MOVWF  x9D
026EE:  MOVF   x9D,W
026F0:  SUBLW  5D
026F2:  BNC   2718
....................       if (bit_test(LGrupo[kk],5)) Apagar(kk); // si pertenece al grupo la apago  
026F4:  CLRF   03
026F6:  MOVF   x9D,W
026F8:  ADDLW  AD
026FA:  MOVWF  FE9
026FC:  MOVLW  00
026FE:  ADDWFC 03,W
02700:  MOVWF  FEA
02702:  MOVFF  FEF,1A2
02706:  BTFSS  xA2.5
02708:  BRA    2714
0270A:  MOVFF  19D,1A2
0270E:  MOVLB  0
02710:  RCALL  23A6
02712:  MOVLB  1
....................       } // for... 
02714:  INCF   x9D,F
02716:  BRA    26EE
.................... EsNoche = false; 
02718:  BCF    x28.3
.................... } 
.................... //} // hs ftcel 
.................... }  
.................... if (GOff[2] < 48) {  // si se apaga por horario 
0271A:  MOVF   x1C,W
0271C:  SUBLW  2F
0271E:  BNC   2776
.................... HsAux = (hrs*2)+(GOff[2]%2); 
02720:  BCF    FD8.0
02722:  RLCF   23,W
02724:  MOVWF  xA2
02726:  MOVF   x1C,W
02728:  ANDLW  01
0272A:  ADDWF  xA2,W
0272C:  MOVWF  x9F
.................... MinAux = ((GOff[2]%2)*30); 
0272E:  MOVF   x1C,W
02730:  ANDLW  01
02732:  MULLW  1E
02734:  MOVFF  FF3,1A0
.................... if ((GOff[2] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
02738:  MOVF   x9F,W
0273A:  SUBWF  x1C,W
0273C:  BNZ   2776
0273E:  MOVF   xA0,W
02740:  SUBWF  22,W
02742:  BNZ   2776
02744:  MOVF   21,F
02746:  BNZ   2776
....................       for (kk=32;kk<94;kk++) { 
02748:  MOVLW  20
0274A:  MOVWF  x9D
0274C:  MOVF   x9D,W
0274E:  SUBLW  5D
02750:  BNC   2776
....................       if (bit_test(LGrupo[kk],5)) Apagar(kk); // si pertenece al grupo la apago  
02752:  CLRF   03
02754:  MOVF   x9D,W
02756:  ADDLW  AD
02758:  MOVWF  FE9
0275A:  MOVLW  00
0275C:  ADDWFC 03,W
0275E:  MOVWF  FEA
02760:  MOVFF  FEF,1A2
02764:  BTFSS  xA2.5
02766:  BRA    2772
02768:  MOVFF  19D,1A2
0276C:  MOVLB  0
0276E:  RCALL  23A6
02770:  MOVLB  1
....................       } // for... 
02772:  INCF   x9D,F
02774:  BRA    274C
02776:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G2 activo hoy 
.................... } // si confcas tiene activado auto2 /////////////////////////////////////////// 
....................  
....................  
.................... if (bit_test(ConfCas,3)) { // si configuracion casandra tiene activado grupo auto 3 
02778:  BTFSS  47.3
0277A:  BRA    2910
....................  
.................... if (bit_test(Gdias[3], dow)) {  // El grupo 3 esta activo el dia de hoy 
0277C:  MOVFF  122,00
02780:  MOVF   27,W
02782:  MOVWF  01
02784:  BZ    278E
02786:  BCF    FD8.0
02788:  RRCF   00,F
0278A:  DECFSZ 01,F
0278C:  BRA    2786
0278E:  BTFSS  00.0
02790:  BRA    2832
.................... ////// ENCENDIDO 
.................... if (GOn[3] == 48) {  // si se prende por fotocelda 
02792:  MOVLB  1
02794:  MOVF   x18,W
02796:  SUBLW  30
02798:  BNZ   27D4
.................... //if ((hrs > 12) && (hrs < 24)){ 
.................... if ((Umbral == Sol) && (EsNoche == false)){ 
0279A:  MOVF   44,W
0279C:  SUBWF  48,W
0279E:  BNZ   27D4
027A0:  BTFSC  x28.3
027A2:  BRA    27D4
.................... //if (((Umbral - 1) == Sol) || ((Umbral - 2) == Sol) || ((Umbral - 3) == Sol)) { // si vale 1 menos que umbral, o 2 o 3 menos disparamos encendido 
....................       for (kk=32;kk<94;kk++) { 
027A4:  MOVLW  20
027A6:  MOVWF  x9D
027A8:  MOVF   x9D,W
027AA:  SUBLW  5D
027AC:  BNC   27D2
....................       if (bit_test(LGrupo[kk],6)) Prender(kk); // si pertenece al grupo la prendo  
027AE:  CLRF   03
027B0:  MOVF   x9D,W
027B2:  ADDLW  AD
027B4:  MOVWF  FE9
027B6:  MOVLW  00
027B8:  ADDWFC 03,W
027BA:  MOVWF  FEA
027BC:  MOVFF  FEF,1A2
027C0:  BTFSS  xA2.6
027C2:  BRA    27CE
027C4:  MOVFF  19D,1A2
027C8:  MOVLB  0
027CA:  RCALL  2304
027CC:  MOVLB  1
....................       } // for... 
027CE:  INCF   x9D,F
027D0:  BRA    27A8
.................... EsNoche = true; 
027D2:  BSF    x28.3
.................... } 
.................... //} // hs ftcel 
.................... }  
.................... if (GOn[3] < 48) { 
027D4:  MOVF   x18,W
027D6:  SUBLW  2F
027D8:  BNC   2830
.................... HsAux = (hrs*2)+(GOn[3]%2); 
027DA:  BCF    FD8.0
027DC:  RLCF   23,W
027DE:  MOVWF  xA2
027E0:  MOVF   x18,W
027E2:  ANDLW  01
027E4:  ADDWF  xA2,W
027E6:  MOVWF  x9F
.................... MinAux = ((GOn[3]%2)*30); 
027E8:  MOVF   x18,W
027EA:  ANDLW  01
027EC:  MULLW  1E
027EE:  MOVFF  FF3,1A0
.................... if ((GOn[3] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
027F2:  MOVF   x9F,W
027F4:  SUBWF  x18,W
027F6:  BNZ   2830
027F8:  MOVF   xA0,W
027FA:  SUBWF  22,W
027FC:  BNZ   2830
027FE:  MOVF   21,F
02800:  BNZ   2830
....................       for (kk=32;kk<94;kk++) { 
02802:  MOVLW  20
02804:  MOVWF  x9D
02806:  MOVF   x9D,W
02808:  SUBLW  5D
0280A:  BNC   2830
....................       if (bit_test(LGrupo[kk],6)) Prender(kk); // si pertenece al grupo la prendo  
0280C:  CLRF   03
0280E:  MOVF   x9D,W
02810:  ADDLW  AD
02812:  MOVWF  FE9
02814:  MOVLW  00
02816:  ADDWFC 03,W
02818:  MOVWF  FEA
0281A:  MOVFF  FEF,1A2
0281E:  BTFSS  xA2.6
02820:  BRA    282C
02822:  MOVFF  19D,1A2
02826:  MOVLB  0
02828:  RCALL  2304
0282A:  MOVLB  1
....................       } // for... 
0282C:  INCF   x9D,F
0282E:  BRA    2806
02830:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G1 activo hoy 
....................  
.................... Miti = GOff[3]/2; 
02832:  BCF    FD8.0
02834:  MOVLB  1
02836:  RRCF   x1D,W
02838:  MOVWF  xA1
.................... if (( (Miti >= 0) && (Miti < 6) ) || (Miti == 24)) { 
0283A:  MOVF   xA1,W
0283C:  SUBLW  05
0283E:  BC    2846
02840:  MOVF   xA1,W
02842:  SUBLW  18
02844:  BNZ   2858
.................... dowfalso = dow + 1; 
02846:  MOVLW  01
02848:  ADDWF  27,W
0284A:  MOVWF  x9E
.................... if (dowfalso == 8) dowfalso = 1; 
0284C:  MOVF   x9E,W
0284E:  SUBLW  08
02850:  BNZ   2856
02852:  MOVLW  01
02854:  MOVWF  x9E
.................... } 
.................... else dowfalso = dow; 
02856:  BRA    285C
02858:  MOVFF  27,19E
....................  
.................... if (bit_test(Gdias[3], dowfalso)) {  // El grupo 1 esta activo el dia de hoy o ayer, dado que es para apagado 
0285C:  MOVFF  122,00
02860:  MOVF   x9E,W
02862:  MOVWF  01
02864:  BZ    286E
02866:  BCF    FD8.0
02868:  RRCF   00,F
0286A:  DECFSZ 01,F
0286C:  BRA    2866
0286E:  BTFSS  00.0
02870:  BRA    290E
.................... ////// APAGADO 
.................... if (GOff[3] == 48) {  // si se apaga por fotocelda 
02872:  MOVF   x1D,W
02874:  SUBLW  30
02876:  BNZ   28B2
.................... //if ((hrs > 0) && (hrs < 12)){ 
.................... if ((Umbral == Sol) && (EsNoche == true)){ 
02878:  MOVF   44,W
0287A:  SUBWF  48,W
0287C:  BNZ   28B2
0287E:  BTFSS  x28.3
02880:  BRA    28B2
.................... //if (((Umbral + 1) == Sol) || ((Umbral + 2) == Sol) || ((Umbral + 3) == Sol)) { // si vale 1 mas que umbral, o 2 o 3 mas disparamos apagado 
....................       for (kk=32;kk<94;kk++) { 
02882:  MOVLW  20
02884:  MOVWF  x9D
02886:  MOVF   x9D,W
02888:  SUBLW  5D
0288A:  BNC   28B0
....................       if (bit_test(LGrupo[kk],6)) Apagar(kk); // si pertenece al grupo la apago  
0288C:  CLRF   03
0288E:  MOVF   x9D,W
02890:  ADDLW  AD
02892:  MOVWF  FE9
02894:  MOVLW  00
02896:  ADDWFC 03,W
02898:  MOVWF  FEA
0289A:  MOVFF  FEF,1A2
0289E:  BTFSS  xA2.6
028A0:  BRA    28AC
028A2:  MOVFF  19D,1A2
028A6:  MOVLB  0
028A8:  RCALL  23A6
028AA:  MOVLB  1
....................       } // for... 
028AC:  INCF   x9D,F
028AE:  BRA    2886
.................... EsNoche = false; 
028B0:  BCF    x28.3
.................... } 
.................... //} // hs ftcel 
.................... } 
.................... if (GOff[3] < 48) {  // si se apaga por fotocelda 
028B2:  MOVF   x1D,W
028B4:  SUBLW  2F
028B6:  BNC   290E
.................... HsAux = (hrs*2)+(GOff[3]%2); 
028B8:  BCF    FD8.0
028BA:  RLCF   23,W
028BC:  MOVWF  xA2
028BE:  MOVF   x1D,W
028C0:  ANDLW  01
028C2:  ADDWF  xA2,W
028C4:  MOVWF  x9F
.................... MinAux = ((GOff[3]%2)*30); 
028C6:  MOVF   x1D,W
028C8:  ANDLW  01
028CA:  MULLW  1E
028CC:  MOVFF  FF3,1A0
.................... if ((GOff[3] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
028D0:  MOVF   x9F,W
028D2:  SUBWF  x1D,W
028D4:  BNZ   290E
028D6:  MOVF   xA0,W
028D8:  SUBWF  22,W
028DA:  BNZ   290E
028DC:  MOVF   21,F
028DE:  BNZ   290E
....................       for (kk=32;kk<94;kk++) { 
028E0:  MOVLW  20
028E2:  MOVWF  x9D
028E4:  MOVF   x9D,W
028E6:  SUBLW  5D
028E8:  BNC   290E
....................       if (bit_test(LGrupo[kk],6)) Apagar(kk); // si pertenece al grupo la apago  
028EA:  CLRF   03
028EC:  MOVF   x9D,W
028EE:  ADDLW  AD
028F0:  MOVWF  FE9
028F2:  MOVLW  00
028F4:  ADDWFC 03,W
028F6:  MOVWF  FEA
028F8:  MOVFF  FEF,1A2
028FC:  BTFSS  xA2.6
028FE:  BRA    290A
02900:  MOVFF  19D,1A2
02904:  MOVLB  0
02906:  RCALL  23A6
02908:  MOVLB  1
....................       } // for... 
0290A:  INCF   x9D,F
0290C:  BRA    28E4
0290E:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G3 activo hoy 
.................... } // si confcas tiene activado auto3 //////////////////////////////////////////////////////////////////////////// 
....................  
.................... if (bit_test(ConfCas,4)) { // si configuracion casandra tiene activado grupo auto 2 
02910:  BTFSS  47.4
02912:  BRA    2AA6
....................  
.................... if (bit_test(Gdias[4], dow)) {  // El grupo 2 esta activo el dia de hoy 
02914:  MOVFF  123,00
02918:  MOVF   27,W
0291A:  MOVWF  01
0291C:  BZ    2926
0291E:  BCF    FD8.0
02920:  RRCF   00,F
02922:  DECFSZ 01,F
02924:  BRA    291E
02926:  BTFSS  00.0
02928:  BRA    29CA
.................... ////// ENCENDIDO 
.................... if (GOn[4] == 48) {  // si se prende por fotocelda 
0292A:  MOVLB  1
0292C:  MOVF   x19,W
0292E:  SUBLW  30
02930:  BNZ   296C
.................... //if ((hrs > 12) && (hrs < 24)){ 
.................... if ((Umbral == Sol) && (EsNoche == false)){ 
02932:  MOVF   44,W
02934:  SUBWF  48,W
02936:  BNZ   296C
02938:  BTFSC  x28.3
0293A:  BRA    296C
.................... //if (((Umbral - 1) == Sol) || ((Umbral - 2) == Sol) || ((Umbral - 3) == Sol)) { // si vale 1 menos que umbral, o 2 o 3 menos disparamos encendido 
....................       for (kk=32;kk<94;kk++) { 
0293C:  MOVLW  20
0293E:  MOVWF  x9D
02940:  MOVF   x9D,W
02942:  SUBLW  5D
02944:  BNC   296A
....................       if (bit_test(LGrupo[kk],7)) Prender(kk); // si pertenece al grupo la prendo  
02946:  CLRF   03
02948:  MOVF   x9D,W
0294A:  ADDLW  AD
0294C:  MOVWF  FE9
0294E:  MOVLW  00
02950:  ADDWFC 03,W
02952:  MOVWF  FEA
02954:  MOVFF  FEF,1A2
02958:  BTFSS  xA2.7
0295A:  BRA    2966
0295C:  MOVFF  19D,1A2
02960:  MOVLB  0
02962:  RCALL  2304
02964:  MOVLB  1
....................       } // for... 
02966:  INCF   x9D,F
02968:  BRA    2940
.................... EsNoche = true; 
0296A:  BSF    x28.3
.................... } 
.................... //} // hs ftcel 
.................... }  
.................... if (GOn[4] < 48) {  // si se prende por horario 
0296C:  MOVF   x19,W
0296E:  SUBLW  2F
02970:  BNC   29C8
.................... HsAux = (hrs*2)+(GOn[4]%2); 
02972:  BCF    FD8.0
02974:  RLCF   23,W
02976:  MOVWF  xA2
02978:  MOVF   x19,W
0297A:  ANDLW  01
0297C:  ADDWF  xA2,W
0297E:  MOVWF  x9F
.................... MinAux = ((GOn[4]%2)*30); 
02980:  MOVF   x19,W
02982:  ANDLW  01
02984:  MULLW  1E
02986:  MOVFF  FF3,1A0
.................... if ((GOn[4] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
0298A:  MOVF   x9F,W
0298C:  SUBWF  x19,W
0298E:  BNZ   29C8
02990:  MOVF   xA0,W
02992:  SUBWF  22,W
02994:  BNZ   29C8
02996:  MOVF   21,F
02998:  BNZ   29C8
....................       for (kk=32;kk<94;kk++) { 
0299A:  MOVLW  20
0299C:  MOVWF  x9D
0299E:  MOVF   x9D,W
029A0:  SUBLW  5D
029A2:  BNC   29C8
....................       if (bit_test(LGrupo[kk],7)) Prender(kk); // si pertenece al grupo la prendo  
029A4:  CLRF   03
029A6:  MOVF   x9D,W
029A8:  ADDLW  AD
029AA:  MOVWF  FE9
029AC:  MOVLW  00
029AE:  ADDWFC 03,W
029B0:  MOVWF  FEA
029B2:  MOVFF  FEF,1A2
029B6:  BTFSS  xA2.7
029B8:  BRA    29C4
029BA:  MOVFF  19D,1A2
029BE:  MOVLB  0
029C0:  RCALL  2304
029C2:  MOVLB  1
....................       } // for... 
029C4:  INCF   x9D,F
029C6:  BRA    299E
029C8:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G4 activo hoy 
....................  
.................... Miti = GOff[4]/2; 
029CA:  BCF    FD8.0
029CC:  MOVLB  1
029CE:  RRCF   x1E,W
029D0:  MOVWF  xA1
.................... if (( (Miti >= 0) && (Miti < 6) ) || (Miti == 24)) { 
029D2:  MOVF   xA1,W
029D4:  SUBLW  05
029D6:  BC    29DE
029D8:  MOVF   xA1,W
029DA:  SUBLW  18
029DC:  BNZ   29F0
.................... dowfalso = dow + 1; 
029DE:  MOVLW  01
029E0:  ADDWF  27,W
029E2:  MOVWF  x9E
.................... if (dowfalso == 8) dowfalso = 1; 
029E4:  MOVF   x9E,W
029E6:  SUBLW  08
029E8:  BNZ   29EE
029EA:  MOVLW  01
029EC:  MOVWF  x9E
.................... } 
.................... else dowfalso = dow; 
029EE:  BRA    29F4
029F0:  MOVFF  27,19E
....................  
.................... if (bit_test(Gdias[4], dowfalso)) {  // El grupo 2 esta activo el dia de hoy o ayer, dado que es para apagado 
029F4:  MOVFF  123,00
029F8:  MOVF   x9E,W
029FA:  MOVWF  01
029FC:  BZ    2A06
029FE:  BCF    FD8.0
02A00:  RRCF   00,F
02A02:  DECFSZ 01,F
02A04:  BRA    29FE
02A06:  BTFSS  00.0
02A08:  BRA    2AA6
.................... ////// APAGADO 
.................... if (GOff[4] == 48) {  // si se apaga por fotocelda 
02A0A:  MOVF   x1E,W
02A0C:  SUBLW  30
02A0E:  BNZ   2A4A
.................... //if ((hrs > 0) && (hrs < 12)){ 
.................... if ((Umbral == Sol) && (EsNoche == true)){ 
02A10:  MOVF   44,W
02A12:  SUBWF  48,W
02A14:  BNZ   2A4A
02A16:  BTFSS  x28.3
02A18:  BRA    2A4A
.................... //if (((Umbral + 1) == Sol) || ((Umbral + 2) == Sol) || ((Umbral + 3) == Sol)) { // si vale 1 mas que umbral, o 2 o 3 mas disparamos apagado 
....................       for (kk=32;kk<94;kk++) { 
02A1A:  MOVLW  20
02A1C:  MOVWF  x9D
02A1E:  MOVF   x9D,W
02A20:  SUBLW  5D
02A22:  BNC   2A48
....................       if (bit_test(LGrupo[kk],7)) Apagar(kk); // si pertenece al grupo la apago  
02A24:  CLRF   03
02A26:  MOVF   x9D,W
02A28:  ADDLW  AD
02A2A:  MOVWF  FE9
02A2C:  MOVLW  00
02A2E:  ADDWFC 03,W
02A30:  MOVWF  FEA
02A32:  MOVFF  FEF,1A2
02A36:  BTFSS  xA2.7
02A38:  BRA    2A44
02A3A:  MOVFF  19D,1A2
02A3E:  MOVLB  0
02A40:  RCALL  23A6
02A42:  MOVLB  1
....................       } // for... 
02A44:  INCF   x9D,F
02A46:  BRA    2A1E
.................... EsNoche = false; 
02A48:  BCF    x28.3
.................... } 
.................... //} //hs fcel 
.................... }  
.................... if (GOff[4] < 48) {  // si se apaga por fotocelda 
02A4A:  MOVF   x1E,W
02A4C:  SUBLW  2F
02A4E:  BNC   2AA6
.................... HsAux = (hrs*2)+(GOff[4]%2); 
02A50:  BCF    FD8.0
02A52:  RLCF   23,W
02A54:  MOVWF  xA2
02A56:  MOVF   x1E,W
02A58:  ANDLW  01
02A5A:  ADDWF  xA2,W
02A5C:  MOVWF  x9F
.................... MinAux = ((GOff[4]%2)*30); 
02A5E:  MOVF   x1E,W
02A60:  ANDLW  01
02A62:  MULLW  1E
02A64:  MOVFF  FF3,1A0
.................... if ((GOff[4] == HsAux) && (min == MinAux) && (sec == 00)){ // prendemos por horario 
02A68:  MOVF   x9F,W
02A6A:  SUBWF  x1E,W
02A6C:  BNZ   2AA6
02A6E:  MOVF   xA0,W
02A70:  SUBWF  22,W
02A72:  BNZ   2AA6
02A74:  MOVF   21,F
02A76:  BNZ   2AA6
....................       for (kk=32;kk<94;kk++) { 
02A78:  MOVLW  20
02A7A:  MOVWF  x9D
02A7C:  MOVF   x9D,W
02A7E:  SUBLW  5D
02A80:  BNC   2AA6
....................       if (bit_test(LGrupo[kk],7)) Apagar(kk); // si pertenece al grupo la apago  
02A82:  CLRF   03
02A84:  MOVF   x9D,W
02A86:  ADDLW  AD
02A88:  MOVWF  FE9
02A8A:  MOVLW  00
02A8C:  ADDWFC 03,W
02A8E:  MOVWF  FEA
02A90:  MOVFF  FEF,1A2
02A94:  BTFSS  xA2.7
02A96:  BRA    2AA2
02A98:  MOVFF  19D,1A2
02A9C:  MOVLB  0
02A9E:  RCALL  23A6
02AA0:  MOVLB  1
....................       } // for... 
02AA2:  INCF   x9D,F
02AA4:  BRA    2A7C
02AA6:  MOVLB  0
.................... } // prendemos por hs 
.................... } // fin por horarios 
.................... } // G4 activo hoy 
.................... } // si confcas tiene activado auto4 /////////////////////////////////////////// 
....................  
.................... } // fn 
02AA8:  GOTO   2F80 (RETURN)
....................  
....................  
....................  
.................... void VerTemp() {   // visor de temperaturas historicas de la semana 
....................  
.................... LIMPIARLCD; 
*
04772:  MOVLW  A8
04774:  MOVWF  FF6
04776:  MOVLW  04
04778:  MOVWF  FF7
0477A:  CALL   3E86
.................... restart_wdt(); 
0477E:  CLRWDT
.................... int dia = 1; 
.................... int Tmax[4];  // 0 es dow, 1 es grados, 2 es hora y 3 es minuto 
.................... int Tmin[4];  // 0 es dow, 1 es grados, 2 es hora y 3 es minuto 
.................... int Solc[4];  // 0 es dow, 1 es radiacion, 2 es hora y 3 es minuto 
.................... char DDow[8]; // Leyenda de lo que estamos visualizando 
....................  
.................... int falsodow; 
04780:  MOVLW  01
04782:  MOVLB  1
04784:  MOVWF  x6D
....................  
.................... while (dia != 0){ //  
04786:  MOVF   x6D,F
04788:  BTFSC  FD8.2
0478A:  BRA    4C38
.................... restart_wdt(); 
0478C:  CLRWDT
....................  
.................... falsodow = dow - (dia - 1); 
0478E:  MOVLW  01
04790:  SUBWF  x6D,W
04792:  SUBWF  27,W
04794:  MOVWF  x82
.................... if ((falsodow == 0) || (falsodow > 7)) falsodow = falsodow + 7; 
04796:  MOVF   x82,F
04798:  BZ    47A0
0479A:  MOVF   x82,W
0479C:  SUBLW  07
0479E:  BC    47A4
047A0:  MOVLW  07
047A2:  ADDWF  x82,F
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
047A4:  BSF    F93.3
047A6:  BTFSS  F81.3
047A8:  BRA    47BC
047AA:  BSF    F93.2
047AC:  BTFSS  F81.2
047AE:  BRA    47BC
047B0:  BSF    F93.1
047B2:  BTFSS  F81.1
047B4:  BRA    47BC
047B6:  BSF    F93.0
047B8:  BTFSC  F81.0
047BA:  BCF    35.0
....................  
.................... if (Rebote == false){ 
047BC:  BTFSC  35.0
047BE:  BRA    47CA
.................... if (input(CANCEL) == 0){ // si cancel solo resto o salgo con 10 
047C0:  BSF    F93.0
047C2:  BTFSC  F81.0
047C4:  BRA    47CA
.................... dia = 0; 
047C6:  CLRF   x6D
.................... Rebote = true; 
047C8:  BSF    35.0
.................... } // si cancel 
.................... } 
....................  
.................... if (Rebote == false){ 
047CA:  BTFSC  35.0
047CC:  BRA    47E2
.................... if (input(ARRIBA) == 0){ // si arriba 
047CE:  BSF    F93.3
047D0:  BTFSC  F81.3
047D2:  BRA    47E2
.................... Rebote = true; 
047D4:  BSF    35.0
.................... ++dia; 
047D6:  INCF   x6D,F
.................... if (dia == 8) dia = 7; 
047D8:  MOVF   x6D,W
047DA:  SUBLW  08
047DC:  BNZ   47E2
047DE:  MOVLW  07
047E0:  MOVWF  x6D
.................... } // si abajo 
.................... } // si rebote 
....................  
.................... if (Rebote == false){ 
047E2:  BTFSC  35.0
047E4:  BRA    47F0
.................... if (input(ABAJO) == 0){ // si abajo 
047E6:  BSF    F93.2
047E8:  BTFSC  F81.2
047EA:  BRA    47F0
.................... Rebote = true; 
047EC:  BSF    35.0
.................... --dia; 
047EE:  DECF   x6D,F
047F0:  CLRF   19
047F2:  BTFSC  FF2.7
047F4:  BSF    19.7
047F6:  BCF    FF2.7
.................... } // si abajo 
.................... } // si rebote 
....................  
.................... lcd_gotoxy(1,1); 
047F8:  MOVLW  01
047FA:  MOVWF  xA0
047FC:  MOVWF  xA1
047FE:  MOVLB  0
04800:  CALL   156C
04804:  BTFSC  19.7
04806:  BSF    FF2.7
.................... printf(lcd_putc, "== Max/Min de%s", DDow); 
04808:  MOVLW  AA
0480A:  MOVWF  FF6
0480C:  MOVLW  04
0480E:  MOVWF  FF7
04810:  MOVLW  0D
04812:  MOVLB  1
04814:  MOVWF  x90
04816:  MOVLB  0
04818:  RCALL  44F0
0481A:  MOVLW  01
0481C:  MOVWF  FEA
0481E:  MOVLW  7A
04820:  MOVWF  FE9
04822:  RCALL  4518
04824:  CLRF   19
04826:  BTFSC  FF2.7
04828:  BSF    19.7
0482A:  BCF    FF2.7
.................... //printf(lcd_putc, "= falsodow : %u", falsodow); 
.................... lcd_gotoxy(1,2); 
0482C:  MOVLW  01
0482E:  MOVLB  1
04830:  MOVWF  xA0
04832:  MOVLW  02
04834:  MOVWF  xA1
04836:  MOVLB  0
04838:  CALL   156C
0483C:  BTFSC  19.7
0483E:  BSF    FF2.7
.................... printf(lcd_putc, "Maxima: %2d%cC (%02d:%02d)", Tmax[1], 210, Tmax[2], Tmax[3]); 
04840:  MOVLW  BA
04842:  MOVWF  FF6
04844:  MOVLW  04
04846:  MOVWF  FF7
04848:  MOVLW  08
0484A:  MOVLB  1
0484C:  MOVWF  x90
0484E:  MOVLB  0
04850:  RCALL  44F0
04852:  MOVFF  16F,185
04856:  MOVLW  11
04858:  MOVLB  1
0485A:  MOVWF  x86
0485C:  MOVLB  0
0485E:  RCALL  4568
04860:  MOVLW  D2
04862:  MOVLB  1
04864:  MOVWF  x93
04866:  MOVLB  0
04868:  CALL   3DE6
0486C:  MOVLW  C7
0486E:  MOVWF  FF6
04870:  MOVLW  04
04872:  MOVWF  FF7
04874:  MOVLW  03
04876:  MOVLB  1
04878:  MOVWF  x90
0487A:  MOVLB  0
0487C:  RCALL  44F0
0487E:  MOVFF  170,185
04882:  MOVLW  01
04884:  MOVLB  1
04886:  MOVWF  x86
04888:  MOVLB  0
0488A:  RCALL  462C
0488C:  MOVLW  3A
0488E:  MOVLB  1
04890:  MOVWF  x93
04892:  MOVLB  0
04894:  CALL   3DE6
04898:  MOVFF  171,185
0489C:  MOVLW  01
0489E:  MOVLB  1
048A0:  MOVWF  x86
048A2:  MOVLB  0
048A4:  RCALL  462C
048A6:  MOVLW  29
048A8:  MOVLB  1
048AA:  MOVWF  x93
048AC:  MOVLB  0
048AE:  CALL   3DE6
048B2:  CLRF   19
048B4:  BTFSC  FF2.7
048B6:  BSF    19.7
048B8:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
048BA:  MOVLW  01
048BC:  MOVLB  1
048BE:  MOVWF  xA0
048C0:  MOVLW  03
048C2:  MOVWF  xA1
048C4:  MOVLB  0
048C6:  CALL   156C
048CA:  BTFSC  19.7
048CC:  BSF    FF2.7
.................... printf(lcd_putc, "Minima: %2d%cC (%02d:%02d)", Tmin[1], 210, Tmin[2], Tmin[3]); 
048CE:  MOVLW  D6
048D0:  MOVWF  FF6
048D2:  MOVLW  04
048D4:  MOVWF  FF7
048D6:  MOVLW  08
048D8:  MOVLB  1
048DA:  MOVWF  x90
048DC:  MOVLB  0
048DE:  RCALL  44F0
048E0:  MOVFF  173,185
048E4:  MOVLW  11
048E6:  MOVLB  1
048E8:  MOVWF  x86
048EA:  MOVLB  0
048EC:  RCALL  4568
048EE:  MOVLW  D2
048F0:  MOVLB  1
048F2:  MOVWF  x93
048F4:  MOVLB  0
048F6:  CALL   3DE6
048FA:  MOVLW  E3
048FC:  MOVWF  FF6
048FE:  MOVLW  04
04900:  MOVWF  FF7
04902:  MOVLW  03
04904:  MOVLB  1
04906:  MOVWF  x90
04908:  MOVLB  0
0490A:  RCALL  44F0
0490C:  MOVFF  174,185
04910:  MOVLW  01
04912:  MOVLB  1
04914:  MOVWF  x86
04916:  MOVLB  0
04918:  RCALL  462C
0491A:  MOVLW  3A
0491C:  MOVLB  1
0491E:  MOVWF  x93
04920:  MOVLB  0
04922:  CALL   3DE6
04926:  MOVFF  175,185
0492A:  MOVLW  01
0492C:  MOVLB  1
0492E:  MOVWF  x86
04930:  MOVLB  0
04932:  RCALL  462C
04934:  MOVLW  29
04936:  MOVLB  1
04938:  MOVWF  x93
0493A:  MOVLB  0
0493C:  CALL   3DE6
04940:  CLRF   19
04942:  BTFSC  FF2.7
04944:  BSF    19.7
04946:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
04948:  MOVLW  01
0494A:  MOVLB  1
0494C:  MOVWF  xA0
0494E:  MOVLW  04
04950:  MOVWF  xA1
04952:  MOVLB  0
04954:  CALL   156C
04958:  BTFSC  19.7
0495A:  BSF    FF2.7
.................... printf(lcd_putc, "Sol max:%3u  (%02d:%02d)", Solc[1], Solc[2], Solc[3]); 
0495C:  MOVLW  F2
0495E:  MOVWF  FF6
04960:  MOVLW  04
04962:  MOVWF  FF7
04964:  MOVLW  08
04966:  MOVLB  1
04968:  MOVWF  x90
0496A:  MOVLB  0
0496C:  RCALL  44F0
0496E:  MOVFF  177,190
04972:  MOVLW  13
04974:  MOVLB  1
04976:  MOVWF  x91
04978:  MOVLB  0
0497A:  RCALL  46F0
0497C:  MOVLW  FD
0497E:  MOVWF  FF6
04980:  MOVLW  04
04982:  MOVWF  FF7
04984:  MOVLW  03
04986:  MOVLB  1
04988:  MOVWF  x90
0498A:  MOVLB  0
0498C:  RCALL  44F0
0498E:  MOVFF  178,185
04992:  MOVLW  01
04994:  MOVLB  1
04996:  MOVWF  x86
04998:  MOVLB  0
0499A:  RCALL  462C
0499C:  MOVLW  3A
0499E:  MOVLB  1
049A0:  MOVWF  x93
049A2:  MOVLB  0
049A4:  CALL   3DE6
049A8:  MOVFF  179,185
049AC:  MOVLW  01
049AE:  MOVLB  1
049B0:  MOVWF  x86
049B2:  MOVLB  0
049B4:  RCALL  462C
049B6:  MOVLW  29
049B8:  MOVLB  1
049BA:  MOVWF  x93
049BC:  MOVLB  0
049BE:  CALL   3DE6
....................  
.................... long puntero; 
.................... puntero = (long) ((falsodow * 5) + 95); 
049C2:  MOVLB  1
049C4:  MOVF   x82,W
049C6:  MULLW  05
049C8:  MOVF   FF3,W
049CA:  ADDLW  5F
049CC:  CLRF   x84
049CE:  MOVWF  x83
.................... Tmax[1] = read_eeprom(puntero); 
049D0:  MOVFF  FF2,185
049D4:  BCF    FF2.7
049D6:  MOVFF  184,FAA
049DA:  MOVFF  183,FA9
049DE:  BCF    FA6.6
049E0:  BCF    FA6.7
049E2:  BSF    FA6.0
049E4:  MOVF   FA8,W
049E6:  BTFSC  x85.7
049E8:  BSF    FF2.7
049EA:  MOVWF  x6F
.................... puntero = (long) ((falsodow * 5) + 97); 
049EC:  MOVF   x82,W
049EE:  MULLW  05
049F0:  MOVF   FF3,W
049F2:  ADDLW  61
049F4:  CLRF   x84
049F6:  MOVWF  x83
.................... Tmax[2] = read_eeprom(puntero); 
049F8:  MOVFF  FF2,185
049FC:  BCF    FF2.7
049FE:  MOVFF  184,FAA
04A02:  MOVFF  183,FA9
04A06:  BCF    FA6.6
04A08:  BCF    FA6.7
04A0A:  BSF    FA6.0
04A0C:  MOVF   FA8,W
04A0E:  BTFSC  x85.7
04A10:  BSF    FF2.7
04A12:  MOVWF  x70
.................... puntero = (long) ((falsodow * 5) + 98); 
04A14:  MOVF   x82,W
04A16:  MULLW  05
04A18:  MOVF   FF3,W
04A1A:  ADDLW  62
04A1C:  CLRF   x84
04A1E:  MOVWF  x83
.................... Tmax[3] = read_eeprom(puntero); 
04A20:  MOVFF  FF2,185
04A24:  BCF    FF2.7
04A26:  MOVFF  184,FAA
04A2A:  MOVFF  183,FA9
04A2E:  BCF    FA6.6
04A30:  BCF    FA6.7
04A32:  BSF    FA6.0
04A34:  MOVF   FA8,W
04A36:  BTFSC  x85.7
04A38:  BSF    FF2.7
04A3A:  MOVWF  x71
....................  
.................... puntero = (long) ((falsodow * 5) + 130); 
04A3C:  MOVF   x82,W
04A3E:  MULLW  05
04A40:  MOVF   FF3,W
04A42:  ADDLW  82
04A44:  CLRF   x84
04A46:  MOVWF  x83
.................... Tmin[1] = read_eeprom(puntero); 
04A48:  MOVFF  FF2,185
04A4C:  BCF    FF2.7
04A4E:  MOVFF  184,FAA
04A52:  MOVFF  183,FA9
04A56:  BCF    FA6.6
04A58:  BCF    FA6.7
04A5A:  BSF    FA6.0
04A5C:  MOVF   FA8,W
04A5E:  BTFSC  x85.7
04A60:  BSF    FF2.7
04A62:  MOVWF  x73
.................... puntero = (long) ((falsodow * 5) + 132); 
04A64:  MOVF   x82,W
04A66:  MULLW  05
04A68:  MOVF   FF3,W
04A6A:  ADDLW  84
04A6C:  CLRF   x84
04A6E:  MOVWF  x83
.................... Tmin[2] = read_eeprom(puntero); 
04A70:  MOVFF  FF2,185
04A74:  BCF    FF2.7
04A76:  MOVFF  184,FAA
04A7A:  MOVFF  183,FA9
04A7E:  BCF    FA6.6
04A80:  BCF    FA6.7
04A82:  BSF    FA6.0
04A84:  MOVF   FA8,W
04A86:  BTFSC  x85.7
04A88:  BSF    FF2.7
04A8A:  MOVWF  x74
.................... puntero = (long) ((falsodow * 5) + 133); 
04A8C:  MOVF   x82,W
04A8E:  MULLW  05
04A90:  MOVF   FF3,W
04A92:  ADDLW  85
04A94:  CLRF   x84
04A96:  MOVWF  x83
.................... Tmin[3] = read_eeprom(puntero); 
04A98:  MOVFF  FF2,185
04A9C:  BCF    FF2.7
04A9E:  MOVFF  184,FAA
04AA2:  MOVFF  183,FA9
04AA6:  BCF    FA6.6
04AA8:  BCF    FA6.7
04AAA:  BSF    FA6.0
04AAC:  MOVF   FA8,W
04AAE:  BTFSC  x85.7
04AB0:  BSF    FF2.7
04AB2:  MOVWF  x75
....................  
.................... puntero = (long) ((falsodow * 5) + 165); 
04AB4:  MOVF   x82,W
04AB6:  MULLW  05
04AB8:  MOVF   FF3,W
04ABA:  ADDLW  A5
04ABC:  CLRF   x84
04ABE:  MOVWF  x83
.................... Solc[1] = read_eeprom(puntero); 
04AC0:  MOVFF  FF2,185
04AC4:  BCF    FF2.7
04AC6:  MOVFF  184,FAA
04ACA:  MOVFF  183,FA9
04ACE:  BCF    FA6.6
04AD0:  BCF    FA6.7
04AD2:  BSF    FA6.0
04AD4:  MOVF   FA8,W
04AD6:  BTFSC  x85.7
04AD8:  BSF    FF2.7
04ADA:  MOVWF  x77
.................... puntero = (long) ((falsodow * 5) + 167); 
04ADC:  MOVF   x82,W
04ADE:  MULLW  05
04AE0:  MOVF   FF3,W
04AE2:  ADDLW  A7
04AE4:  CLRF   x84
04AE6:  MOVWF  x83
.................... Solc[2] = read_eeprom(puntero); 
04AE8:  MOVFF  FF2,185
04AEC:  BCF    FF2.7
04AEE:  MOVFF  184,FAA
04AF2:  MOVFF  183,FA9
04AF6:  BCF    FA6.6
04AF8:  BCF    FA6.7
04AFA:  BSF    FA6.0
04AFC:  MOVF   FA8,W
04AFE:  BTFSC  x85.7
04B00:  BSF    FF2.7
04B02:  MOVWF  x78
.................... puntero = (long) ((falsodow * 5) + 168); 
04B04:  MOVF   x82,W
04B06:  MULLW  05
04B08:  MOVF   FF3,W
04B0A:  ADDLW  A8
04B0C:  CLRF   x84
04B0E:  MOVWF  x83
.................... Solc[3] = read_eeprom(puntero); 
04B10:  MOVFF  FF2,185
04B14:  BCF    FF2.7
04B16:  MOVFF  184,FAA
04B1A:  MOVFF  183,FA9
04B1E:  BCF    FA6.6
04B20:  BCF    FA6.7
04B22:  BSF    FA6.0
04B24:  MOVF   FA8,W
04B26:  BTFSC  x85.7
04B28:  BSF    FF2.7
04B2A:  MOVWF  x79
....................  
.................... switch (falsodow){ 
04B2C:  MOVLW  01
04B2E:  SUBWF  x82,W
04B30:  ADDLW  F9
04B32:  BTFSC  FD8.0
04B34:  BRA    4C12
04B36:  ADDLW  07
04B38:  MOVLB  0
04B3A:  GOTO   4C4C
....................    case 1: // Hoy 
....................    DDow = " Lun =="; 
04B3E:  MOVLW  01
04B40:  MOVWF  FEA
04B42:  MOVLW  7A
04B44:  MOVWF  FE9
04B46:  MOVLW  00
04B48:  CALL   00CE
04B4C:  TBLRD*-
04B4E:  TBLRD*+
04B50:  MOVF   FF5,W
04B52:  MOVWF  FEE
04B54:  IORLW  00
04B56:  BNZ   4B4E
....................    break; 
04B58:  MOVLB  1
04B5A:  BRA    4C12
....................  
....................    case 2: // Ayer 
....................    DDow = " Mar =="; 
04B5C:  MOVLW  01
04B5E:  MOVWF  FEA
04B60:  MOVLW  7A
04B62:  MOVWF  FE9
04B64:  MOVLW  00
04B66:  CALL   00E6
04B6A:  TBLRD*-
04B6C:  TBLRD*+
04B6E:  MOVF   FF5,W
04B70:  MOVWF  FEE
04B72:  IORLW  00
04B74:  BNZ   4B6C
....................    break; 
04B76:  MOVLB  1
04B78:  BRA    4C12
....................  
....................    case 3: //  
....................    DDow = " Mier ="; 
04B7A:  MOVLW  01
04B7C:  MOVWF  FEA
04B7E:  MOVLW  7A
04B80:  MOVWF  FE9
04B82:  MOVLW  00
04B84:  CALL   00FE
04B88:  TBLRD*-
04B8A:  TBLRD*+
04B8C:  MOVF   FF5,W
04B8E:  MOVWF  FEE
04B90:  IORLW  00
04B92:  BNZ   4B8A
....................    break; 
04B94:  MOVLB  1
04B96:  BRA    4C12
....................  
....................    case 4: //  
....................    DDow = " Jue =="; 
04B98:  MOVLW  01
04B9A:  MOVWF  FEA
04B9C:  MOVLW  7A
04B9E:  MOVWF  FE9
04BA0:  MOVLW  00
04BA2:  CALL   0116
04BA6:  TBLRD*-
04BA8:  TBLRD*+
04BAA:  MOVF   FF5,W
04BAC:  MOVWF  FEE
04BAE:  IORLW  00
04BB0:  BNZ   4BA8
....................    break; 
04BB2:  MOVLB  1
04BB4:  BRA    4C12
....................  
....................    case 5: // 
....................    DDow = " Vie =="; 
04BB6:  MOVLW  01
04BB8:  MOVWF  FEA
04BBA:  MOVLW  7A
04BBC:  MOVWF  FE9
04BBE:  MOVLW  00
04BC0:  CALL   012E
04BC4:  TBLRD*-
04BC6:  TBLRD*+
04BC8:  MOVF   FF5,W
04BCA:  MOVWF  FEE
04BCC:  IORLW  00
04BCE:  BNZ   4BC6
....................    break; 
04BD0:  MOVLB  1
04BD2:  BRA    4C12
....................  
....................    case 6: // 
....................    DDow = " Sab =="; 
04BD4:  MOVLW  01
04BD6:  MOVWF  FEA
04BD8:  MOVLW  7A
04BDA:  MOVWF  FE9
04BDC:  MOVLW  00
04BDE:  CALL   0146
04BE2:  TBLRD*-
04BE4:  TBLRD*+
04BE6:  MOVF   FF5,W
04BE8:  MOVWF  FEE
04BEA:  IORLW  00
04BEC:  BNZ   4BE4
....................    break; 
04BEE:  MOVLB  1
04BF0:  BRA    4C12
....................  
....................    case 7: // 
....................    DDow = " Dom =="; 
04BF2:  MOVLW  01
04BF4:  MOVWF  FEA
04BF6:  MOVLW  7A
04BF8:  MOVWF  FE9
04BFA:  MOVLW  00
04BFC:  CALL   015E
04C00:  TBLRD*-
04C02:  TBLRD*+
04C04:  MOVF   FF5,W
04C06:  MOVWF  FEE
04C08:  IORLW  00
04C0A:  BNZ   4C02
....................    break; 
04C0C:  MOVLB  1
04C0E:  BRA    4C12
04C10:  MOVLB  1
.................... } // switch 
....................  
.................... if (falsodow == dow) DDow = " Hoy =="; 
04C12:  MOVF   27,W
04C14:  SUBWF  x82,W
04C16:  BNZ   4C36
04C18:  MOVLW  01
04C1A:  MOVWF  FEA
04C1C:  MOVLW  7A
04C1E:  MOVWF  FE9
04C20:  MOVLW  00
04C22:  MOVLB  0
04C24:  CALL   0176
04C28:  TBLRD*-
04C2A:  TBLRD*+
04C2C:  MOVF   FF5,W
04C2E:  MOVWF  FEE
04C30:  IORLW  00
04C32:  BNZ   4C2A
04C34:  MOVLB  1
....................  
.................... } // while 
04C36:  BRA    4786
.................... while (input(ABAJO)==0){ 
04C38:  BSF    F93.2
04C3A:  BTFSC  F81.2
04C3C:  BRA    4C46
.................... Rebote = true; 
04C3E:  BSF    35.0
.................... Menu = 1; 
04C40:  MOVLW  01
04C42:  MOVWF  28
.................... } 
04C44:  BRA    4C38
.................... //delay_ms(50); 
.................... } // fn 
04C46:  MOVLB  0
04C48:  GOTO   6A00 (RETURN)
....................  
....................  
.................... void DosVeinte(){  // Toma de lectura analogica de la tension 220 
....................  
.................... restart_wdt(); 
.................... float Rr; 
.................... float Ss; 
.................... float Tt; 
....................  
.................... long Tensiones[3]; 
....................  
.................... set_adc_channel(FA_R); 
.................... Tensiones[0] = read_adc(); 
.................... Rr = (float) (Tensiones[0]/3.41); 
.................... FaseR = Rr; 
....................  
.................... set_adc_channel(FA_S); 
.................... Tensiones[1] = read_adc(); 
.................... Ss = (float) (Tensiones[1]/3.41); 
.................... FaseS = Ss; 
....................  
.................... set_adc_channel(FA_T); 
.................... Tensiones[2] = read_adc(); 
.................... Tt = (float) (Tensiones[2]/3.41); 
.................... FaseT = Tt; 
....................  
.................... }//fn 
....................  
....................  
.................... void VerTens() { // funcion de muestra de tensiones 
.................... LIMPIARLCD; 
*
04DF0:  MOVLW  0C
04DF2:  MOVWF  FF6
04DF4:  MOVLW  05
04DF6:  MOVWF  FF7
04DF8:  CALL   3E86
.................... restart_wdt(); 
04DFC:  CLRWDT
....................  
.................... int Nido = 1; // Cuan anidados estamos dentro de la funcion (o sea, en que pantalla) 
04DFE:  MOVLW  01
04E00:  MOVLB  1
04E02:  MOVWF  x6D
.................... while (Nido != 0){ //  
04E04:  MOVF   x6D,F
04E06:  BTFSC  FD8.2
04E08:  GOTO   580A
.................... restart_wdt(); 
04E0C:  CLRWDT
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
04E0E:  BSF    F93.3
04E10:  BTFSS  F81.3
04E12:  BRA    4E26
04E14:  BSF    F93.2
04E16:  BTFSS  F81.2
04E18:  BRA    4E26
04E1A:  BSF    F93.1
04E1C:  BTFSS  F81.1
04E1E:  BRA    4E26
04E20:  BSF    F93.0
04E22:  BTFSC  F81.0
04E24:  BCF    35.0
....................  
.................... if (Rebote == false){ 
04E26:  BTFSC  35.0
04E28:  BRA    4E44
.................... if (input(CANCEL) == 0){ // si cancel solo resto o salgo con 10 
04E2A:  BSF    F93.0
04E2C:  BTFSC  F81.0
04E2E:  BRA    4E44
.................... Nido = 0; 
04E30:  CLRF   x6D
.................... Rebote = true; 
04E32:  BSF    35.0
.................... LIMPIARLCD; 
04E34:  MOVLW  0E
04E36:  MOVWF  FF6
04E38:  MOVLW  05
04E3A:  MOVWF  FF7
04E3C:  MOVLB  0
04E3E:  CALL   3E86
04E42:  MOVLB  1
.................... } // si cancel 
.................... } // si rebote 
.................... if (Rebote == false){ 
04E44:  BTFSC  35.0
04E46:  BRA    4E62
.................... if (input(ARRIBA) == 0){ // si arriba 
04E48:  BSF    F93.3
04E4A:  BTFSC  F81.3
04E4C:  BRA    4E62
.................... Rebote = true; 
04E4E:  BSF    35.0
.................... --Nido; 
04E50:  DECF   x6D,F
.................... LIMPIARLCD; 
04E52:  MOVLW  10
04E54:  MOVWF  FF6
04E56:  MOVLW  05
04E58:  MOVWF  FF7
04E5A:  MOVLB  0
04E5C:  CALL   3E86
04E60:  MOVLB  1
.................... } // si arriba 
.................... } // si rebote 
.................... if (Rebote == false){ 
04E62:  BTFSC  35.0
04E64:  BRA    4E8A
.................... if (input(ABAJO) == 0){ // si abajo 
04E66:  BSF    F93.2
04E68:  BTFSC  F81.2
04E6A:  BRA    4E8A
.................... Rebote = true; 
04E6C:  BSF    35.0
.................... ++Nido; 
04E6E:  INCF   x6D,F
.................... if (Nido == 5) Nido = 4; // Tope de pantallas 
04E70:  MOVF   x6D,W
04E72:  SUBLW  05
04E74:  BNZ   4E7A
04E76:  MOVLW  04
04E78:  MOVWF  x6D
.................... LIMPIARLCD; 
04E7A:  MOVLW  12
04E7C:  MOVWF  FF6
04E7E:  MOVLW  05
04E80:  MOVWF  FF7
04E82:  MOVLB  0
04E84:  CALL   3E86
04E88:  MOVLB  1
.................... } // si abajo 
.................... } // si rebote 
....................  
.................... if (Nido == 1) { 
04E8A:  DECFSZ x6D,W
04E8C:  BRA    502A
.................... restart_wdt(); 
04E8E:  CLRWDT
04E90:  CLRF   19
04E92:  BTFSC  FF2.7
04E94:  BSF    19.7
04E96:  BCF    FF2.7
.................... lcd_gotoxy(1,1); 
04E98:  MOVLW  01
04E9A:  MOVWF  xA0
04E9C:  MOVWF  xA1
04E9E:  MOVLB  0
04EA0:  CALL   156C
04EA4:  BTFSC  19.7
04EA6:  BSF    FF2.7
.................... printf(lcd_putc, "=== Tensiones(V) ==="); 
04EA8:  MOVLW  14
04EAA:  MOVWF  FF6
04EAC:  MOVLW  05
04EAE:  MOVWF  FF7
04EB0:  CALL   3E86
04EB4:  CLRF   19
04EB6:  BTFSC  FF2.7
04EB8:  BSF    19.7
04EBA:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
04EBC:  MOVLW  01
04EBE:  MOVLB  1
04EC0:  MOVWF  xA0
04EC2:  MOVLW  02
04EC4:  MOVWF  xA1
04EC6:  MOVLB  0
04EC8:  CALL   156C
04ECC:  BTFSC  19.7
04ECE:  BSF    FF2.7
.................... printf(lcd_putc, " (R) // (S) // (T)  "); 
04ED0:  MOVLW  2A
04ED2:  MOVWF  FF6
04ED4:  MOVLW  05
04ED6:  MOVWF  FF7
04ED8:  CALL   3E86
04EDC:  CLRF   19
04EDE:  BTFSC  FF2.7
04EE0:  BSF    19.7
04EE2:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
04EE4:  MOVLW  01
04EE6:  MOVLB  1
04EE8:  MOVWF  xA0
04EEA:  MOVLW  03
04EEC:  MOVWF  xA1
04EEE:  MOVLB  0
04EF0:  CALL   156C
04EF4:  BTFSC  19.7
04EF6:  BSF    FF2.7
.................... printf(lcd_putc, " %uv ", FaseR); 
04EF8:  MOVLW  20
04EFA:  MOVLB  1
04EFC:  MOVWF  x93
04EFE:  MOVLB  0
04F00:  CALL   3DE6
04F04:  MOVFF  125,190
04F08:  MOVLW  1B
04F0A:  MOVLB  1
04F0C:  MOVWF  x91
04F0E:  MOVLB  0
04F10:  CALL   46F0
04F14:  MOVLW  76
04F16:  MOVLB  1
04F18:  MOVWF  x93
04F1A:  MOVLB  0
04F1C:  CALL   3DE6
04F20:  MOVLW  20
04F22:  MOVLB  1
04F24:  MOVWF  x93
04F26:  MOVLB  0
04F28:  CALL   3DE6
04F2C:  CLRF   19
04F2E:  BTFSC  FF2.7
04F30:  BSF    19.7
04F32:  BCF    FF2.7
.................... lcd_gotoxy(8,3); 
04F34:  MOVLW  08
04F36:  MOVLB  1
04F38:  MOVWF  xA0
04F3A:  MOVLW  03
04F3C:  MOVWF  xA1
04F3E:  MOVLB  0
04F40:  CALL   156C
04F44:  BTFSC  19.7
04F46:  BSF    FF2.7
.................... printf(lcd_putc, " %uv ", FaseS); 
04F48:  MOVLW  20
04F4A:  MOVLB  1
04F4C:  MOVWF  x93
04F4E:  MOVLB  0
04F50:  CALL   3DE6
04F54:  MOVFF  126,190
04F58:  MOVLW  1B
04F5A:  MOVLB  1
04F5C:  MOVWF  x91
04F5E:  MOVLB  0
04F60:  CALL   46F0
04F64:  MOVLW  76
04F66:  MOVLB  1
04F68:  MOVWF  x93
04F6A:  MOVLB  0
04F6C:  CALL   3DE6
04F70:  MOVLW  20
04F72:  MOVLB  1
04F74:  MOVWF  x93
04F76:  MOVLB  0
04F78:  CALL   3DE6
04F7C:  CLRF   19
04F7E:  BTFSC  FF2.7
04F80:  BSF    19.7
04F82:  BCF    FF2.7
.................... lcd_gotoxy(15,3); 
04F84:  MOVLW  0F
04F86:  MOVLB  1
04F88:  MOVWF  xA0
04F8A:  MOVLW  03
04F8C:  MOVWF  xA1
04F8E:  MOVLB  0
04F90:  CALL   156C
04F94:  BTFSC  19.7
04F96:  BSF    FF2.7
.................... printf(lcd_putc, " %uv ", FaseT); 
04F98:  MOVLW  20
04F9A:  MOVLB  1
04F9C:  MOVWF  x93
04F9E:  MOVLB  0
04FA0:  CALL   3DE6
04FA4:  MOVFF  127,190
04FA8:  MOVLW  1B
04FAA:  MOVLB  1
04FAC:  MOVWF  x91
04FAE:  MOVLB  0
04FB0:  CALL   46F0
04FB4:  MOVLW  76
04FB6:  MOVLB  1
04FB8:  MOVWF  x93
04FBA:  MOVLB  0
04FBC:  CALL   3DE6
04FC0:  MOVLW  20
04FC2:  MOVLB  1
04FC4:  MOVWF  x93
04FC6:  MOVLB  0
04FC8:  CALL   3DE6
04FCC:  CLRF   19
04FCE:  BTFSC  FF2.7
04FD0:  BSF    19.7
04FD2:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
04FD4:  MOVLW  01
04FD6:  MOVLB  1
04FD8:  MOVWF  xA0
04FDA:  MOVLW  04
04FDC:  MOVWF  xA1
04FDE:  MOVLB  0
04FE0:  CALL   156C
04FE4:  BTFSC  19.7
04FE6:  BSF    FF2.7
.................... printf(lcd_putc, "   Bateria: %3.1wv   ", Vbata); 
04FE8:  MOVLW  40
04FEA:  MOVWF  FF6
04FEC:  MOVLW  05
04FEE:  MOVWF  FF7
04FF0:  MOVLW  0C
04FF2:  MOVLB  1
04FF4:  MOVWF  x90
04FF6:  MOVLB  0
04FF8:  CALL   44F0
04FFC:  MOVLW  03
04FFE:  MOVWF  FE9
05000:  MOVLB  1
05002:  CLRF   x71
05004:  CLRF   x70
05006:  CLRF   x6F
05008:  MOVFF  124,16E
0500C:  MOVLW  01
0500E:  MOVWF  x72
05010:  MOVLB  0
05012:  BRA    4D08
05014:  MOVLW  51
05016:  MOVWF  FF6
05018:  MOVLW  05
0501A:  MOVWF  FF7
0501C:  MOVLW  04
0501E:  MOVLB  1
05020:  MOVWF  x90
05022:  MOVLB  0
05024:  CALL   44F0
05028:  MOVLB  1
.................... } 
....................  
.................... if (Nido == 2) { 
0502A:  MOVF   x6D,W
0502C:  SUBLW  02
0502E:  BTFSS  FD8.2
05030:  BRA    534E
.................... restart_wdt(); 
05032:  CLRWDT
05034:  CLRF   19
05036:  BTFSC  FF2.7
05038:  BSF    19.7
0503A:  BCF    FF2.7
.................... lcd_gotoxy(1,1); 
0503C:  MOVLW  01
0503E:  MOVWF  xA0
05040:  MOVWF  xA1
05042:  MOVLB  0
05044:  CALL   156C
05048:  BTFSC  19.7
0504A:  BSF    FF2.7
.................... printf(lcd_putc, "=Valores de Entrada="); 
0504C:  MOVLW  56
0504E:  MOVWF  FF6
05050:  MOVLW  05
05052:  MOVWF  FF7
05054:  CALL   3E86
05058:  CLRF   19
0505A:  BTFSC  FF2.7
0505C:  BSF    19.7
0505E:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
05060:  MOVLW  01
05062:  MOVLB  1
05064:  MOVWF  xA0
05066:  MOVLW  02
05068:  MOVWF  xA1
0506A:  MOVLB  0
0506C:  CALL   156C
05070:  BTFSC  19.7
05072:  BSF    FF2.7
.................... printf(lcd_putc, "(%02d:%d)%02d:%d %02d:%d %02d:%d", UltIn[1], UltIn[2], UltIn[3], UltIn[4], UltIn[5], UltIn[6], UltIn[7], UltIn[8]); 
05074:  MOVLW  28
05076:  MOVLB  1
05078:  MOVWF  x93
0507A:  MOVLB  0
0507C:  CALL   3DE6
05080:  MOVFF  12C,185
05084:  MOVLW  01
05086:  MOVLB  1
05088:  MOVWF  x86
0508A:  MOVLB  0
0508C:  CALL   462C
05090:  MOVLW  3A
05092:  MOVLB  1
05094:  MOVWF  x93
05096:  MOVLB  0
05098:  CALL   3DE6
0509C:  MOVFF  12D,185
050A0:  MOVLW  18
050A2:  MOVLB  1
050A4:  MOVWF  x86
050A6:  MOVLB  0
050A8:  CALL   4568
050AC:  MOVLW  29
050AE:  MOVLB  1
050B0:  MOVWF  x93
050B2:  MOVLB  0
050B4:  CALL   3DE6
050B8:  MOVFF  12E,185
050BC:  MOVLW  01
050BE:  MOVLB  1
050C0:  MOVWF  x86
050C2:  MOVLB  0
050C4:  CALL   462C
050C8:  MOVLW  3A
050CA:  MOVLB  1
050CC:  MOVWF  x93
050CE:  MOVLB  0
050D0:  CALL   3DE6
050D4:  MOVFF  12F,185
050D8:  MOVLW  18
050DA:  MOVLB  1
050DC:  MOVWF  x86
050DE:  MOVLB  0
050E0:  CALL   4568
050E4:  MOVLW  20
050E6:  MOVLB  1
050E8:  MOVWF  x93
050EA:  MOVLB  0
050EC:  CALL   3DE6
050F0:  MOVFF  130,185
050F4:  MOVLW  01
050F6:  MOVLB  1
050F8:  MOVWF  x86
050FA:  MOVLB  0
050FC:  CALL   462C
05100:  MOVLW  3A
05102:  MOVLB  1
05104:  MOVWF  x93
05106:  MOVLB  0
05108:  CALL   3DE6
0510C:  MOVFF  131,185
05110:  MOVLW  18
05112:  MOVLB  1
05114:  MOVWF  x86
05116:  MOVLB  0
05118:  CALL   4568
0511C:  MOVLW  20
0511E:  MOVLB  1
05120:  MOVWF  x93
05122:  MOVLB  0
05124:  CALL   3DE6
05128:  MOVFF  132,185
0512C:  MOVLW  01
0512E:  MOVLB  1
05130:  MOVWF  x86
05132:  MOVLB  0
05134:  CALL   462C
05138:  MOVLW  3A
0513A:  MOVLB  1
0513C:  MOVWF  x93
0513E:  MOVLB  0
05140:  CALL   3DE6
05144:  MOVFF  133,185
05148:  MOVLW  18
0514A:  MOVLB  1
0514C:  MOVWF  x86
0514E:  MOVLB  0
05150:  CALL   4568
05154:  CLRF   19
05156:  BTFSC  FF2.7
05158:  BSF    19.7
0515A:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0515C:  MOVLW  01
0515E:  MOVLB  1
05160:  MOVWF  xA0
05162:  MOVLW  03
05164:  MOVWF  xA1
05166:  MOVLB  0
05168:  CALL   156C
0516C:  BTFSC  19.7
0516E:  BSF    FF2.7
.................... printf(lcd_putc, " %02d:%d %02d:%d %02d:%d %02d:%d", UltIn[9], UltIn[10], UltIn[11], UltIn[12], UltIn[13], UltIn[14], UltIn[15], UltIn[16]); 
05170:  MOVLW  20
05172:  MOVLB  1
05174:  MOVWF  x93
05176:  MOVLB  0
05178:  CALL   3DE6
0517C:  MOVFF  134,185
05180:  MOVLW  01
05182:  MOVLB  1
05184:  MOVWF  x86
05186:  MOVLB  0
05188:  CALL   462C
0518C:  MOVLW  3A
0518E:  MOVLB  1
05190:  MOVWF  x93
05192:  MOVLB  0
05194:  CALL   3DE6
05198:  MOVFF  135,185
0519C:  MOVLW  18
0519E:  MOVLB  1
051A0:  MOVWF  x86
051A2:  MOVLB  0
051A4:  CALL   4568
051A8:  MOVLW  20
051AA:  MOVLB  1
051AC:  MOVWF  x93
051AE:  MOVLB  0
051B0:  CALL   3DE6
051B4:  MOVFF  136,185
051B8:  MOVLW  01
051BA:  MOVLB  1
051BC:  MOVWF  x86
051BE:  MOVLB  0
051C0:  CALL   462C
051C4:  MOVLW  3A
051C6:  MOVLB  1
051C8:  MOVWF  x93
051CA:  MOVLB  0
051CC:  CALL   3DE6
051D0:  MOVFF  137,185
051D4:  MOVLW  18
051D6:  MOVLB  1
051D8:  MOVWF  x86
051DA:  MOVLB  0
051DC:  CALL   4568
051E0:  MOVLW  20
051E2:  MOVLB  1
051E4:  MOVWF  x93
051E6:  MOVLB  0
051E8:  CALL   3DE6
051EC:  MOVFF  138,185
051F0:  MOVLW  01
051F2:  MOVLB  1
051F4:  MOVWF  x86
051F6:  MOVLB  0
051F8:  CALL   462C
051FC:  MOVLW  3A
051FE:  MOVLB  1
05200:  MOVWF  x93
05202:  MOVLB  0
05204:  CALL   3DE6
05208:  MOVFF  139,185
0520C:  MOVLW  18
0520E:  MOVLB  1
05210:  MOVWF  x86
05212:  MOVLB  0
05214:  CALL   4568
05218:  MOVLW  20
0521A:  MOVLB  1
0521C:  MOVWF  x93
0521E:  MOVLB  0
05220:  CALL   3DE6
05224:  MOVFF  13A,185
05228:  MOVLW  01
0522A:  MOVLB  1
0522C:  MOVWF  x86
0522E:  MOVLB  0
05230:  CALL   462C
05234:  MOVLW  3A
05236:  MOVLB  1
05238:  MOVWF  x93
0523A:  MOVLB  0
0523C:  CALL   3DE6
05240:  MOVFF  13B,185
05244:  MOVLW  18
05246:  MOVLB  1
05248:  MOVWF  x86
0524A:  MOVLB  0
0524C:  CALL   4568
05250:  CLRF   19
05252:  BTFSC  FF2.7
05254:  BSF    19.7
05256:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
05258:  MOVLW  01
0525A:  MOVLB  1
0525C:  MOVWF  xA0
0525E:  MOVLW  04
05260:  MOVWF  xA1
05262:  MOVLB  0
05264:  CALL   156C
05268:  BTFSC  19.7
0526A:  BSF    FF2.7
.................... printf(lcd_putc, " %02d:%d %02d:%d %02d:%d %02d:%d", UltIn[17], UltIn[18], UltIn[19], UltIn[20], UltIn[21], UltIn[22], UltIn[23], UltIn[24]); 
0526C:  MOVLW  20
0526E:  MOVLB  1
05270:  MOVWF  x93
05272:  MOVLB  0
05274:  CALL   3DE6
05278:  MOVFF  13C,185
0527C:  MOVLW  01
0527E:  MOVLB  1
05280:  MOVWF  x86
05282:  MOVLB  0
05284:  CALL   462C
05288:  MOVLW  3A
0528A:  MOVLB  1
0528C:  MOVWF  x93
0528E:  MOVLB  0
05290:  CALL   3DE6
05294:  MOVFF  13D,185
05298:  MOVLW  18
0529A:  MOVLB  1
0529C:  MOVWF  x86
0529E:  MOVLB  0
052A0:  CALL   4568
052A4:  MOVLW  20
052A6:  MOVLB  1
052A8:  MOVWF  x93
052AA:  MOVLB  0
052AC:  CALL   3DE6
052B0:  MOVFF  13E,185
052B4:  MOVLW  01
052B6:  MOVLB  1
052B8:  MOVWF  x86
052BA:  MOVLB  0
052BC:  CALL   462C
052C0:  MOVLW  3A
052C2:  MOVLB  1
052C4:  MOVWF  x93
052C6:  MOVLB  0
052C8:  CALL   3DE6
052CC:  MOVFF  13F,185
052D0:  MOVLW  18
052D2:  MOVLB  1
052D4:  MOVWF  x86
052D6:  MOVLB  0
052D8:  CALL   4568
052DC:  MOVLW  20
052DE:  MOVLB  1
052E0:  MOVWF  x93
052E2:  MOVLB  0
052E4:  CALL   3DE6
052E8:  MOVFF  140,185
052EC:  MOVLW  01
052EE:  MOVLB  1
052F0:  MOVWF  x86
052F2:  MOVLB  0
052F4:  CALL   462C
052F8:  MOVLW  3A
052FA:  MOVLB  1
052FC:  MOVWF  x93
052FE:  MOVLB  0
05300:  CALL   3DE6
05304:  MOVFF  141,185
05308:  MOVLW  18
0530A:  MOVLB  1
0530C:  MOVWF  x86
0530E:  MOVLB  0
05310:  CALL   4568
05314:  MOVLW  20
05316:  MOVLB  1
05318:  MOVWF  x93
0531A:  MOVLB  0
0531C:  CALL   3DE6
05320:  MOVFF  142,185
05324:  MOVLW  01
05326:  MOVLB  1
05328:  MOVWF  x86
0532A:  MOVLB  0
0532C:  CALL   462C
05330:  MOVLW  3A
05332:  MOVLB  1
05334:  MOVWF  x93
05336:  MOVLB  0
05338:  CALL   3DE6
0533C:  MOVFF  143,185
05340:  MOVLW  18
05342:  MOVLB  1
05344:  MOVWF  x86
05346:  MOVLB  0
05348:  CALL   4568
0534C:  MOVLB  1
.................... } 
....................  
.................... if (Nido == 3) { 
0534E:  MOVF   x6D,W
05350:  SUBLW  03
05352:  BTFSS  FD8.2
05354:  BRA    555E
.................... restart_wdt(); 
05356:  CLRWDT
05358:  CLRF   19
0535A:  BTFSC  FF2.7
0535C:  BSF    19.7
0535E:  BCF    FF2.7
.................... lcd_gotoxy(1,1); 
05360:  MOVLW  01
05362:  MOVWF  xA0
05364:  MOVWF  xA1
05366:  MOVLB  0
05368:  CALL   156C
0536C:  BTFSC  19.7
0536E:  BSF    FF2.7
.................... printf(lcd_putc, "== Valores de Bus =="); 
05370:  MOVLW  6C
05372:  MOVWF  FF6
05374:  MOVLW  05
05376:  MOVWF  FF7
05378:  CALL   3E86
0537C:  CLRF   19
0537E:  BTFSC  FF2.7
05380:  BSF    19.7
05382:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
05384:  MOVLW  01
05386:  MOVLB  1
05388:  MOVWF  xA0
0538A:  MOVLW  02
0538C:  MOVWF  xA1
0538E:  MOVLB  0
05390:  CALL   156C
05394:  BTFSC  19.7
05396:  BSF    FF2.7
.................... printf(lcd_putc, "(%03U:%03U)  (%03U:%03U)", UltBus[1], UltBus[2], UltBus[3], UltBus[4]); 
05398:  MOVLW  28
0539A:  MOVLB  1
0539C:  MOVWF  x93
0539E:  MOVLB  0
053A0:  CALL   3DE6
053A4:  MOVFF  145,190
053A8:  MOVLW  03
053AA:  MOVLB  1
053AC:  MOVWF  x91
053AE:  MOVLB  0
053B0:  CALL   46F0
053B4:  MOVLW  3A
053B6:  MOVLB  1
053B8:  MOVWF  x93
053BA:  MOVLB  0
053BC:  CALL   3DE6
053C0:  MOVFF  146,190
053C4:  MOVLW  03
053C6:  MOVLB  1
053C8:  MOVWF  x91
053CA:  MOVLB  0
053CC:  CALL   46F0
053D0:  MOVLW  8C
053D2:  MOVWF  FF6
053D4:  MOVLW  05
053D6:  MOVWF  FF7
053D8:  MOVLW  04
053DA:  MOVLB  1
053DC:  MOVWF  x90
053DE:  MOVLB  0
053E0:  CALL   44F0
053E4:  MOVFF  147,190
053E8:  MOVLW  03
053EA:  MOVLB  1
053EC:  MOVWF  x91
053EE:  MOVLB  0
053F0:  CALL   46F0
053F4:  MOVLW  3A
053F6:  MOVLB  1
053F8:  MOVWF  x93
053FA:  MOVLB  0
053FC:  CALL   3DE6
05400:  MOVFF  148,190
05404:  MOVLW  03
05406:  MOVLB  1
05408:  MOVWF  x91
0540A:  MOVLB  0
0540C:  CALL   46F0
05410:  MOVLW  29
05412:  MOVLB  1
05414:  MOVWF  x93
05416:  MOVLB  0
05418:  CALL   3DE6
0541C:  CLRF   19
0541E:  BTFSC  FF2.7
05420:  BSF    19.7
05422:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
05424:  MOVLW  01
05426:  MOVLB  1
05428:  MOVWF  xA0
0542A:  MOVLW  03
0542C:  MOVWF  xA1
0542E:  MOVLB  0
05430:  CALL   156C
05434:  BTFSC  19.7
05436:  BSF    FF2.7
.................... printf(lcd_putc, "(%03U:%03U)  (%03U:%03U)", UltBus[5], UltBus[6], UltBus[7], UltBus[8]); 
05438:  MOVLW  28
0543A:  MOVLB  1
0543C:  MOVWF  x93
0543E:  MOVLB  0
05440:  CALL   3DE6
05444:  MOVFF  149,190
05448:  MOVLW  03
0544A:  MOVLB  1
0544C:  MOVWF  x91
0544E:  MOVLB  0
05450:  CALL   46F0
05454:  MOVLW  3A
05456:  MOVLB  1
05458:  MOVWF  x93
0545A:  MOVLB  0
0545C:  CALL   3DE6
05460:  MOVFF  14A,190
05464:  MOVLW  03
05466:  MOVLB  1
05468:  MOVWF  x91
0546A:  MOVLB  0
0546C:  CALL   46F0
05470:  MOVLW  A6
05472:  MOVWF  FF6
05474:  MOVLW  05
05476:  MOVWF  FF7
05478:  MOVLW  04
0547A:  MOVLB  1
0547C:  MOVWF  x90
0547E:  MOVLB  0
05480:  CALL   44F0
05484:  MOVFF  14B,190
05488:  MOVLW  03
0548A:  MOVLB  1
0548C:  MOVWF  x91
0548E:  MOVLB  0
05490:  CALL   46F0
05494:  MOVLW  3A
05496:  MOVLB  1
05498:  MOVWF  x93
0549A:  MOVLB  0
0549C:  CALL   3DE6
054A0:  MOVFF  14C,190
054A4:  MOVLW  03
054A6:  MOVLB  1
054A8:  MOVWF  x91
054AA:  MOVLB  0
054AC:  CALL   46F0
054B0:  MOVLW  29
054B2:  MOVLB  1
054B4:  MOVWF  x93
054B6:  MOVLB  0
054B8:  CALL   3DE6
054BC:  CLRF   19
054BE:  BTFSC  FF2.7
054C0:  BSF    19.7
054C2:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
054C4:  MOVLW  01
054C6:  MOVLB  1
054C8:  MOVWF  xA0
054CA:  MOVLW  04
054CC:  MOVWF  xA1
054CE:  MOVLB  0
054D0:  CALL   156C
054D4:  BTFSC  19.7
054D6:  BSF    FF2.7
.................... printf(lcd_putc, "(%03U:%03U)  (%03U:%03U)", UltBus[9], UltBus[10], UltBus[11], UltBus[12]); 
054D8:  MOVLW  28
054DA:  MOVLB  1
054DC:  MOVWF  x93
054DE:  MOVLB  0
054E0:  CALL   3DE6
054E4:  MOVFF  14D,190
054E8:  MOVLW  03
054EA:  MOVLB  1
054EC:  MOVWF  x91
054EE:  MOVLB  0
054F0:  CALL   46F0
054F4:  MOVLW  3A
054F6:  MOVLB  1
054F8:  MOVWF  x93
054FA:  MOVLB  0
054FC:  CALL   3DE6
05500:  MOVFF  14E,190
05504:  MOVLW  03
05506:  MOVLB  1
05508:  MOVWF  x91
0550A:  MOVLB  0
0550C:  CALL   46F0
05510:  MOVLW  C0
05512:  MOVWF  FF6
05514:  MOVLW  05
05516:  MOVWF  FF7
05518:  MOVLW  04
0551A:  MOVLB  1
0551C:  MOVWF  x90
0551E:  MOVLB  0
05520:  CALL   44F0
05524:  MOVFF  14F,190
05528:  MOVLW  03
0552A:  MOVLB  1
0552C:  MOVWF  x91
0552E:  MOVLB  0
05530:  CALL   46F0
05534:  MOVLW  3A
05536:  MOVLB  1
05538:  MOVWF  x93
0553A:  MOVLB  0
0553C:  CALL   3DE6
05540:  MOVFF  150,190
05544:  MOVLW  03
05546:  MOVLB  1
05548:  MOVWF  x91
0554A:  MOVLB  0
0554C:  CALL   46F0
05550:  MOVLW  29
05552:  MOVLB  1
05554:  MOVWF  x93
05556:  MOVLB  0
05558:  CALL   3DE6
0555C:  MOVLB  1
.................... } 
....................  
.................... if (Nido == 4) { 
0555E:  MOVF   x6D,W
05560:  SUBLW  04
05562:  BTFSS  FD8.2
05564:  BRA    5806
.................... restart_wdt(); 
05566:  CLRWDT
05568:  CLRF   19
0556A:  BTFSC  FF2.7
0556C:  BSF    19.7
0556E:  BCF    FF2.7
.................... lcd_gotoxy(1,1); 
05570:  MOVLW  01
05572:  MOVWF  xA0
05574:  MOVWF  xA1
05576:  MOVLB  0
05578:  CALL   156C
0557C:  BTFSC  19.7
0557E:  BSF    FF2.7
.................... printf(lcd_putc, "-%03U-%03U-%03U-%03U-%03U", RawBus[0], RawBus[1], RawBus[2], RawBus[3], RawBus[4]); 
05580:  MOVLW  2D
05582:  MOVLB  1
05584:  MOVWF  x93
05586:  MOVLB  0
05588:  CALL   3DE6
0558C:  MOVFF  154,190
05590:  MOVLW  03
05592:  MOVLB  1
05594:  MOVWF  x91
05596:  MOVLB  0
05598:  CALL   46F0
0559C:  MOVLW  2D
0559E:  MOVLB  1
055A0:  MOVWF  x93
055A2:  MOVLB  0
055A4:  CALL   3DE6
055A8:  MOVFF  155,190
055AC:  MOVLW  03
055AE:  MOVLB  1
055B0:  MOVWF  x91
055B2:  MOVLB  0
055B4:  CALL   46F0
055B8:  MOVLW  2D
055BA:  MOVLB  1
055BC:  MOVWF  x93
055BE:  MOVLB  0
055C0:  CALL   3DE6
055C4:  MOVFF  156,190
055C8:  MOVLW  03
055CA:  MOVLB  1
055CC:  MOVWF  x91
055CE:  MOVLB  0
055D0:  CALL   46F0
055D4:  MOVLW  2D
055D6:  MOVLB  1
055D8:  MOVWF  x93
055DA:  MOVLB  0
055DC:  CALL   3DE6
055E0:  MOVFF  157,190
055E4:  MOVLW  03
055E6:  MOVLB  1
055E8:  MOVWF  x91
055EA:  MOVLB  0
055EC:  CALL   46F0
055F0:  MOVLW  2D
055F2:  MOVLB  1
055F4:  MOVWF  x93
055F6:  MOVLB  0
055F8:  CALL   3DE6
055FC:  MOVFF  158,190
05600:  MOVLW  03
05602:  MOVLB  1
05604:  MOVWF  x91
05606:  MOVLB  0
05608:  CALL   46F0
0560C:  CLRF   19
0560E:  BTFSC  FF2.7
05610:  BSF    19.7
05612:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
05614:  MOVLW  01
05616:  MOVLB  1
05618:  MOVWF  xA0
0561A:  MOVLW  02
0561C:  MOVWF  xA1
0561E:  MOVLB  0
05620:  CALL   156C
05624:  BTFSC  19.7
05626:  BSF    FF2.7
.................... printf(lcd_putc, "-%03U-%03U-%03U-%03U-%03U", RawBus[5], RawBus[6], RawBus[7], RawBus[8], RawBus[9]); 
05628:  MOVLW  2D
0562A:  MOVLB  1
0562C:  MOVWF  x93
0562E:  MOVLB  0
05630:  CALL   3DE6
05634:  MOVFF  159,190
05638:  MOVLW  03
0563A:  MOVLB  1
0563C:  MOVWF  x91
0563E:  MOVLB  0
05640:  CALL   46F0
05644:  MOVLW  2D
05646:  MOVLB  1
05648:  MOVWF  x93
0564A:  MOVLB  0
0564C:  CALL   3DE6
05650:  MOVFF  15A,190
05654:  MOVLW  03
05656:  MOVLB  1
05658:  MOVWF  x91
0565A:  MOVLB  0
0565C:  CALL   46F0
05660:  MOVLW  2D
05662:  MOVLB  1
05664:  MOVWF  x93
05666:  MOVLB  0
05668:  CALL   3DE6
0566C:  MOVFF  15B,190
05670:  MOVLW  03
05672:  MOVLB  1
05674:  MOVWF  x91
05676:  MOVLB  0
05678:  CALL   46F0
0567C:  MOVLW  2D
0567E:  MOVLB  1
05680:  MOVWF  x93
05682:  MOVLB  0
05684:  CALL   3DE6
05688:  MOVFF  15C,190
0568C:  MOVLW  03
0568E:  MOVLB  1
05690:  MOVWF  x91
05692:  MOVLB  0
05694:  CALL   46F0
05698:  MOVLW  2D
0569A:  MOVLB  1
0569C:  MOVWF  x93
0569E:  MOVLB  0
056A0:  CALL   3DE6
056A4:  MOVFF  15D,190
056A8:  MOVLW  03
056AA:  MOVLB  1
056AC:  MOVWF  x91
056AE:  MOVLB  0
056B0:  CALL   46F0
056B4:  CLRF   19
056B6:  BTFSC  FF2.7
056B8:  BSF    19.7
056BA:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
056BC:  MOVLW  01
056BE:  MOVLB  1
056C0:  MOVWF  xA0
056C2:  MOVLW  03
056C4:  MOVWF  xA1
056C6:  MOVLB  0
056C8:  CALL   156C
056CC:  BTFSC  19.7
056CE:  BSF    FF2.7
.................... printf(lcd_putc, "-%03U-%03U-%03U-%03U-%03U", RawBus[10], RawBus[11], RawBus[12], RawBus[13], RawBus[14]); 
056D0:  MOVLW  2D
056D2:  MOVLB  1
056D4:  MOVWF  x93
056D6:  MOVLB  0
056D8:  CALL   3DE6
056DC:  MOVFF  15E,190
056E0:  MOVLW  03
056E2:  MOVLB  1
056E4:  MOVWF  x91
056E6:  MOVLB  0
056E8:  CALL   46F0
056EC:  MOVLW  2D
056EE:  MOVLB  1
056F0:  MOVWF  x93
056F2:  MOVLB  0
056F4:  CALL   3DE6
056F8:  MOVFF  15F,190
056FC:  MOVLW  03
056FE:  MOVLB  1
05700:  MOVWF  x91
05702:  MOVLB  0
05704:  CALL   46F0
05708:  MOVLW  2D
0570A:  MOVLB  1
0570C:  MOVWF  x93
0570E:  MOVLB  0
05710:  CALL   3DE6
05714:  MOVFF  160,190
05718:  MOVLW  03
0571A:  MOVLB  1
0571C:  MOVWF  x91
0571E:  MOVLB  0
05720:  CALL   46F0
05724:  MOVLW  2D
05726:  MOVLB  1
05728:  MOVWF  x93
0572A:  MOVLB  0
0572C:  CALL   3DE6
05730:  MOVFF  161,190
05734:  MOVLW  03
05736:  MOVLB  1
05738:  MOVWF  x91
0573A:  MOVLB  0
0573C:  CALL   46F0
05740:  MOVLW  2D
05742:  MOVLB  1
05744:  MOVWF  x93
05746:  MOVLB  0
05748:  CALL   3DE6
0574C:  MOVFF  162,190
05750:  MOVLW  03
05752:  MOVLB  1
05754:  MOVWF  x91
05756:  MOVLB  0
05758:  CALL   46F0
0575C:  CLRF   19
0575E:  BTFSC  FF2.7
05760:  BSF    19.7
05762:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
05764:  MOVLW  01
05766:  MOVLB  1
05768:  MOVWF  xA0
0576A:  MOVLW  04
0576C:  MOVWF  xA1
0576E:  MOVLB  0
05770:  CALL   156C
05774:  BTFSC  19.7
05776:  BSF    FF2.7
.................... printf(lcd_putc, "-%03U-%03U-%03U-%03U-%03U", RawBus[15], RawBus[16], RawBus[17], RawBus[18], RawBus[19]); 
05778:  MOVLW  2D
0577A:  MOVLB  1
0577C:  MOVWF  x93
0577E:  MOVLB  0
05780:  CALL   3DE6
05784:  MOVFF  163,190
05788:  MOVLW  03
0578A:  MOVLB  1
0578C:  MOVWF  x91
0578E:  MOVLB  0
05790:  CALL   46F0
05794:  MOVLW  2D
05796:  MOVLB  1
05798:  MOVWF  x93
0579A:  MOVLB  0
0579C:  CALL   3DE6
057A0:  MOVFF  164,190
057A4:  MOVLW  03
057A6:  MOVLB  1
057A8:  MOVWF  x91
057AA:  MOVLB  0
057AC:  CALL   46F0
057B0:  MOVLW  2D
057B2:  MOVLB  1
057B4:  MOVWF  x93
057B6:  MOVLB  0
057B8:  CALL   3DE6
057BC:  MOVFF  165,190
057C0:  MOVLW  03
057C2:  MOVLB  1
057C4:  MOVWF  x91
057C6:  MOVLB  0
057C8:  CALL   46F0
057CC:  MOVLW  2D
057CE:  MOVLB  1
057D0:  MOVWF  x93
057D2:  MOVLB  0
057D4:  CALL   3DE6
057D8:  MOVFF  166,190
057DC:  MOVLW  03
057DE:  MOVLB  1
057E0:  MOVWF  x91
057E2:  MOVLB  0
057E4:  CALL   46F0
057E8:  MOVLW  2D
057EA:  MOVLB  1
057EC:  MOVWF  x93
057EE:  MOVLB  0
057F0:  CALL   3DE6
057F4:  MOVFF  167,190
057F8:  MOVLW  03
057FA:  MOVLB  1
057FC:  MOVWF  x91
057FE:  MOVLB  0
05800:  CALL   46F0
05804:  MOVLB  1
.................... } 
....................  
.................... } /// While nido no sea cero 
05806:  GOTO   4E04
.................... } // fn 
0580A:  MOVLB  0
0580C:  GOTO   6A0C (RETURN)
....................  
.................... void Fotocel() { // Configuracion del Umbral de la fotocelda 
....................  
.................... LIMPIARLCD; 
*
0DA70:  MOVLW  D0
0DA72:  MOVWF  FF6
0DA74:  MOVLW  05
0DA76:  MOVWF  FF7
0DA78:  CALL   3E86
.................... restart_wdt(); 
0DA7C:  CLRWDT
.................... int submenu = 0; 
.................... int umbrr; 
0DA7E:  MOVLB  1
0DA80:  CLRF   x6D
.................... umbrr = Umbral; 
0DA82:  MOVFF  48,16E
....................  
.................... while (submenu < 1){ // hasta llenar todo 
0DA86:  MOVF   x6D,F
0DA88:  BTFSS  FD8.2
0DA8A:  BRA    DC0A
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0DA8C:  BSF    F93.3
0DA8E:  BTFSS  F81.3
0DA90:  BRA    DAA4
0DA92:  BSF    F93.2
0DA94:  BTFSS  F81.2
0DA96:  BRA    DAA4
0DA98:  BSF    F93.1
0DA9A:  BTFSS  F81.1
0DA9C:  BRA    DAA4
0DA9E:  BSF    F93.0
0DAA0:  BTFSC  F81.0
0DAA2:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0DAA4:  BTFSC  35.0
0DAA6:  BRA    DAB4
.................... if (input(OOKK) == 0){ // si ok, solo sumo 
0DAA8:  BSF    F93.1
0DAAA:  BTFSC  F81.1
0DAAC:  BRA    DAB4
.................... submenu = 1; 
0DAAE:  MOVLW  01
0DAB0:  MOVWF  x6D
.................... Rebote = true; 
0DAB2:  BSF    35.0
.................... } // si ok 
.................... } 
....................  
.................... if (Rebote == false){ 
0DAB4:  BTFSC  35.0
0DAB6:  BRA    DAC4
.................... if (input(CANCEL) == 0){ // si cancel solo resto o salgo con 10 
0DAB8:  BSF    F93.0
0DABA:  BTFSC  F81.0
0DABC:  BRA    DAC4
.................... submenu = 2; 
0DABE:  MOVLW  02
0DAC0:  MOVWF  x6D
.................... Rebote = true; 
0DAC2:  BSF    35.0
.................... } // si cancel 
.................... } 
....................  
.................... if (Rebote == false){ 
0DAC4:  BTFSC  35.0
0DAC6:  BRA    DADE
.................... if (input(ABAJO) == 0){ // si abajo 
0DAC8:  BSF    F93.2
0DACA:  BTFSC  F81.2
0DACC:  BRA    DADE
.................... Rebote = true; 
0DACE:  BSF    35.0
.................... umbrr = umbrr + 5; 
0DAD0:  MOVLW  05
0DAD2:  ADDWF  x6E,F
.................... if (umbrr > 100) umbrr = 100; 
0DAD4:  MOVF   x6E,W
0DAD6:  SUBLW  64
0DAD8:  BC    DADE
0DADA:  MOVLW  64
0DADC:  MOVWF  x6E
.................... } // si abajo 
.................... } // si rebote 
....................  
.................... if (Rebote == false){ 
0DADE:  BTFSC  35.0
0DAE0:  BRA    DAF6
.................... if (input(ARRIBA) == 0){ // si arriba 
0DAE2:  BSF    F93.3
0DAE4:  BTFSC  F81.3
0DAE6:  BRA    DAF6
.................... Rebote = true; 
0DAE8:  BSF    35.0
.................... umbrr = umbrr - 5; 
0DAEA:  MOVLW  05
0DAEC:  SUBWF  x6E,F
.................... if (umbrr > 100) umbrr = 0; 
0DAEE:  MOVF   x6E,W
0DAF0:  SUBLW  64
0DAF2:  BTFSS  FD8.0
0DAF4:  CLRF   x6E
0DAF6:  CLRF   19
0DAF8:  BTFSC  FF2.7
0DAFA:  BSF    19.7
0DAFC:  BCF    FF2.7
.................... } // si abajo 
.................... } // si rebote 
....................  
.................... lcd_gotoxy(1,1); 
0DAFE:  MOVLW  01
0DB00:  MOVWF  xA0
0DB02:  MOVWF  xA1
0DB04:  MOVLB  0
0DB06:  CALL   156C
0DB0A:  BTFSC  19.7
0DB0C:  BSF    FF2.7
.................... printf(lcd_putc, "= Conf. Fotocelula ="); 
0DB0E:  MOVLW  D2
0DB10:  MOVWF  FF6
0DB12:  MOVLW  05
0DB14:  MOVWF  FF7
0DB16:  CALL   3E86
0DB1A:  CLRF   19
0DB1C:  BTFSC  FF2.7
0DB1E:  BSF    19.7
0DB20:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0DB22:  MOVLW  01
0DB24:  MOVLB  1
0DB26:  MOVWF  xA0
0DB28:  MOVLW  02
0DB2A:  MOVWF  xA1
0DB2C:  MOVLB  0
0DB2E:  CALL   156C
0DB32:  BTFSC  19.7
0DB34:  BSF    FF2.7
.................... printf(lcd_putc, "Seleccione el nivel "); 
0DB36:  MOVLW  E8
0DB38:  MOVWF  FF6
0DB3A:  MOVLW  05
0DB3C:  MOVWF  FF7
0DB3E:  CALL   3E86
0DB42:  CLRF   19
0DB44:  BTFSC  FF2.7
0DB46:  BSF    19.7
0DB48:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0DB4A:  MOVLW  01
0DB4C:  MOVLB  1
0DB4E:  MOVWF  xA0
0DB50:  MOVLW  03
0DB52:  MOVWF  xA1
0DB54:  MOVLB  0
0DB56:  CALL   156C
0DB5A:  BTFSC  19.7
0DB5C:  BSF    FF2.7
.................... printf(lcd_putc, "del umbral de Sol:  "); 
0DB5E:  MOVLW  FE
0DB60:  MOVWF  FF6
0DB62:  MOVLW  05
0DB64:  MOVWF  FF7
0DB66:  CALL   3E86
0DB6A:  CLRF   19
0DB6C:  BTFSC  FF2.7
0DB6E:  BSF    19.7
0DB70:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0DB72:  MOVLW  01
0DB74:  MOVLB  1
0DB76:  MOVWF  xA0
0DB78:  MOVLW  04
0DB7A:  MOVWF  xA1
0DB7C:  MOVLB  0
0DB7E:  CALL   156C
0DB82:  BTFSC  19.7
0DB84:  BSF    FF2.7
.................... //if (submenu == 0){ 
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "      -~%3u%%        ", umbrr); 
0DB86:  BTFSS  49.0
0DB88:  BRA    DBD0
0DB8A:  MOVLW  14
0DB8C:  MOVWF  FF6
0DB8E:  MOVLW  06
0DB90:  MOVWF  FF7
0DB92:  MOVLW  08
0DB94:  MOVLB  1
0DB96:  MOVWF  x90
0DB98:  MOVLB  0
0DB9A:  CALL   44F0
0DB9E:  MOVFF  16E,190
0DBA2:  MOVLW  13
0DBA4:  MOVLB  1
0DBA6:  MOVWF  x91
0DBA8:  MOVLB  0
0DBAA:  CALL   46F0
0DBAE:  MOVLW  25
0DBB0:  MOVLB  1
0DBB2:  MOVWF  x93
0DBB4:  MOVLB  0
0DBB6:  CALL   3DE6
0DBBA:  MOVLW  21
0DBBC:  MOVWF  FF6
0DBBE:  MOVLW  06
0DBC0:  MOVWF  FF7
0DBC2:  MOVLW  08
0DBC4:  MOVLB  1
0DBC6:  MOVWF  x90
0DBC8:  MOVLB  0
0DBCA:  CALL   44F0
.................... else printf(lcd_putc, "      -~   %%        "); 
0DBCE:  BRA    DC04
0DBD0:  MOVLW  2A
0DBD2:  MOVWF  FF6
0DBD4:  MOVLW  06
0DBD6:  MOVWF  FF7
0DBD8:  MOVLW  0B
0DBDA:  MOVLB  1
0DBDC:  MOVWF  x90
0DBDE:  MOVLB  0
0DBE0:  CALL   44F0
0DBE4:  MOVLW  25
0DBE6:  MOVLB  1
0DBE8:  MOVWF  x93
0DBEA:  MOVLB  0
0DBEC:  CALL   3DE6
0DBF0:  MOVLW  37
0DBF2:  MOVWF  FF6
0DBF4:  MOVLW  06
0DBF6:  MOVWF  FF7
0DBF8:  MOVLW  08
0DBFA:  MOVLB  1
0DBFC:  MOVWF  x90
0DBFE:  MOVLB  0
0DC00:  CALL   44F0
.................... //} 
.................... restart_wdt(); 
0DC04:  CLRWDT
.................... } // while 
0DC06:  MOVLB  1
0DC08:  BRA    DA86
....................  
.................... if (submenu == 1) { // salimos con OK 
0DC0A:  DECFSZ x6D,W
0DC0C:  BRA    DC44
.................... Umbral = umbrr; 
0DC0E:  MOVFF  16E,48
.................... write_eeprom(Umbra,Umbral); 
0DC12:  MOVF   FF2,W
0DC14:  MOVWF  00
0DC16:  BCF    FF2.7
0DC18:  CLRF   FAA
0DC1A:  MOVLW  14
0DC1C:  MOVWF  FA9
0DC1E:  MOVFF  48,FA8
0DC22:  BCF    FA6.6
0DC24:  BCF    FA6.7
0DC26:  BSF    FA6.2
0DC28:  MOVLB  F
0DC2A:  MOVLW  55
0DC2C:  MOVWF  FA7
0DC2E:  MOVLW  AA
0DC30:  MOVWF  FA7
0DC32:  BSF    FA6.1
0DC34:  BTFSC  FA6.1
0DC36:  BRA    DC34
0DC38:  BCF    FA6.2
0DC3A:  MOVF   00,W
0DC3C:  IORWF  FF2,F
.................... Menu = 1; 
0DC3E:  MOVLW  01
0DC40:  MOVWF  28
0DC42:  MOVLB  1
.................... } 
.................... if (submenu == 2) { // salimos con CANCEL 
0DC44:  MOVF   x6D,W
0DC46:  SUBLW  02
0DC48:  BNZ   DC4E
.................... //Umbral = umbrr; 
.................... Menu = 63; 
0DC4A:  MOVLW  3F
0DC4C:  MOVWF  28
.................... } 
.................... } // fn 
0DC4E:  MOVLB  0
0DC50:  GOTO   E5A0 (RETURN)
....................  
.................... void ALuces(){ // Que luces perteneces a Auto 1, Auto 2, Auto 3 y Auto 4 en LGrupo[] son bits 4, 5, 6 y 7 
....................  
.................... LIMPIARLCD; 
*
0BCD2:  MOVLW  40
0BCD4:  MOVWF  FF6
0BCD6:  MOVLW  06
0BCD8:  MOVWF  FF7
0BCDA:  CALL   3E86
.................... int submenu = 33; 
.................... int grupo = 0; 
.................... char Gr1[3]; 
.................... char Gr2[3]; 
.................... char Gr3[3]; 
.................... char Gr4[3]; 
0BCDE:  MOVLW  21
0BCE0:  MOVLB  1
0BCE2:  MOVWF  x6D
0BCE4:  CLRF   x6E
....................  
.................... while (submenu < 95){ //  
0BCE6:  MOVF   x6D,W
0BCE8:  SUBLW  5E
0BCEA:  BTFSS  FD8.0
0BCEC:  GOTO   C784
....................  
.................... restart_wdt(); 
0BCF0:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0BCF2:  BSF    F93.3
0BCF4:  BTFSS  F81.3
0BCF6:  BRA    BD0A
0BCF8:  BSF    F93.2
0BCFA:  BTFSS  F81.2
0BCFC:  BRA    BD0A
0BCFE:  BSF    F93.1
0BD00:  BTFSS  F81.1
0BD02:  BRA    BD0A
0BD04:  BSF    F93.0
0BD06:  BTFSC  F81.0
0BD08:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0BD0A:  BTFSC  35.0
0BD0C:  BRA    BD20
.................... if (input(OOKK) == 0){  
0BD0E:  BSF    F93.1
0BD10:  BTFSC  F81.1
0BD12:  BRA    BD20
.................... ++grupo; 
0BD14:  INCF   x6E,F
.................... if (grupo == 5) grupo = 0; 
0BD16:  MOVF   x6E,W
0BD18:  SUBLW  05
0BD1A:  BTFSC  FD8.2
0BD1C:  CLRF   x6E
.................... rebote = true; 
0BD1E:  BSF    35.0
.................... }//si ok 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0BD20:  BTFSC  35.0
0BD22:  BRA    BD3A
.................... if (input(CANCEL) == 0){  
0BD24:  BSF    F93.0
0BD26:  BTFSC  F81.0
0BD28:  BRA    BD3A
.................... --grupo; 
0BD2A:  DECF   x6E,F
.................... if (grupo == 255) { 
0BD2C:  INCFSZ x6E,W
0BD2E:  BRA    BD38
.................... Menu = 53; 
0BD30:  MOVLW  35
0BD32:  MOVWF  28
.................... submenu = 100; 
0BD34:  MOVLW  64
0BD36:  MOVWF  x6D
.................... } 
.................... rebote = true; 
0BD38:  BSF    35.0
.................... }// si cancel 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0BD3A:  BTFSC  35.0
0BD3C:  BRA    BFF4
.................... if (input(ARRIBA) == 0) { // apretamos arriba, entonces resto numero de luz 
0BD3E:  BSF    F93.3
0BD40:  BTFSC  F81.3
0BD42:  BRA    BFF4
....................  
.................... if (grupo == 0) { 
0BD44:  MOVF   x6E,F
0BD46:  BNZ   BD8C
.................... --submenu; 
0BD48:  DECF   x6D,F
.................... if (submenu == 32) submenu = 93; 
0BD4A:  MOVF   x6D,W
0BD4C:  SUBLW  20
0BD4E:  BNZ   BD54
0BD50:  MOVLW  5D
0BD52:  MOVWF  x6D
.................... long puntero; 
.................... puntero = (long) submenu + 200; 
0BD54:  CLRF   x90
0BD56:  MOVLW  C8
0BD58:  ADDWF  x6D,W
0BD5A:  MOVWF  x7B
0BD5C:  MOVLW  00
0BD5E:  ADDWFC x90,W
0BD60:  MOVWF  x7C
.................... LGrupo[submenu] = read_eeprom(puntero); 
0BD62:  CLRF   03
0BD64:  MOVF   x6D,W
0BD66:  ADDLW  AD
0BD68:  MOVWF  FE9
0BD6A:  MOVLW  00
0BD6C:  ADDWFC 03,W
0BD6E:  MOVWF  FEA
0BD70:  MOVFF  FF2,191
0BD74:  BCF    FF2.7
0BD76:  MOVFF  17C,FAA
0BD7A:  MOVFF  17B,FA9
0BD7E:  BCF    FA6.6
0BD80:  BCF    FA6.7
0BD82:  BSF    FA6.0
0BD84:  MOVF   FA8,W
0BD86:  BTFSC  x91.7
0BD88:  BSF    FF2.7
0BD8A:  MOVWF  FEF
.................... } 
....................  
.................... if (grupo == 1) { 
0BD8C:  DECFSZ x6E,W
0BD8E:  BRA    BE24
.................... if (bit_test(LGrupo[submenu],4)) { 
0BD90:  CLRF   03
0BD92:  MOVF   x6D,W
0BD94:  ADDLW  AD
0BD96:  MOVWF  FE9
0BD98:  MOVLW  00
0BD9A:  ADDWFC 03,W
0BD9C:  MOVWF  FEA
0BD9E:  MOVFF  FEF,18F
0BDA2:  BTFSS  x8F.4
0BDA4:  BRA    BDBE
.................... bit_clear(LGrupo[submenu],4); 
0BDA6:  CLRF   03
0BDA8:  MOVF   x6D,W
0BDAA:  ADDLW  AD
0BDAC:  MOVWF  01
0BDAE:  MOVLW  00
0BDB0:  ADDWFC 03,F
0BDB2:  MOVFF  01,FE9
0BDB6:  MOVFF  03,FEA
0BDBA:  BCF    FEF.4
.................... //Gr1= "NO"; 
.................... } else { 
0BDBC:  BRA    BDD4
.................... bit_set(LGrupo[submenu],4); 
0BDBE:  CLRF   03
0BDC0:  MOVF   x6D,W
0BDC2:  ADDLW  AD
0BDC4:  MOVWF  01
0BDC6:  MOVLW  00
0BDC8:  ADDWFC 03,F
0BDCA:  MOVFF  01,FE9
0BDCE:  MOVFF  03,FEA
0BDD2:  BSF    FEF.4
.................... //Gr1= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0BDD4:  CLRF   x90
0BDD6:  MOVLW  C8
0BDD8:  ADDWF  x6D,W
0BDDA:  MOVWF  x7D
0BDDC:  MOVLW  00
0BDDE:  ADDWFC x90,W
0BDE0:  MOVWF  x7E
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0BDE2:  CLRF   03
0BDE4:  MOVF   x6D,W
0BDE6:  ADDLW  AD
0BDE8:  MOVWF  FE9
0BDEA:  MOVLW  00
0BDEC:  ADDWFC 03,W
0BDEE:  MOVWF  FEA
0BDF0:  MOVFF  FEF,18F
0BDF4:  MOVF   FF2,W
0BDF6:  MOVWF  00
0BDF8:  BCF    FF2.7
0BDFA:  MOVFF  17E,FAA
0BDFE:  MOVFF  17D,FA9
0BE02:  MOVFF  18F,FA8
0BE06:  BCF    FA6.6
0BE08:  BCF    FA6.7
0BE0A:  BSF    FA6.2
0BE0C:  MOVLB  F
0BE0E:  MOVLW  55
0BE10:  MOVWF  FA7
0BE12:  MOVLW  AA
0BE14:  MOVWF  FA7
0BE16:  BSF    FA6.1
0BE18:  BTFSC  FA6.1
0BE1A:  BRA    BE18
0BE1C:  BCF    FA6.2
0BE1E:  MOVF   00,W
0BE20:  IORWF  FF2,F
0BE22:  MOVLB  1
.................... } 
....................  
.................... if (grupo == 2) { 
0BE24:  MOVF   x6E,W
0BE26:  SUBLW  02
0BE28:  BNZ   BEBE
.................... if (bit_test(LGrupo[submenu],5)) { 
0BE2A:  CLRF   03
0BE2C:  MOVF   x6D,W
0BE2E:  ADDLW  AD
0BE30:  MOVWF  FE9
0BE32:  MOVLW  00
0BE34:  ADDWFC 03,W
0BE36:  MOVWF  FEA
0BE38:  MOVFF  FEF,18F
0BE3C:  BTFSS  x8F.5
0BE3E:  BRA    BE58
.................... bit_clear(LGrupo[submenu],5); 
0BE40:  CLRF   03
0BE42:  MOVF   x6D,W
0BE44:  ADDLW  AD
0BE46:  MOVWF  01
0BE48:  MOVLW  00
0BE4A:  ADDWFC 03,F
0BE4C:  MOVFF  01,FE9
0BE50:  MOVFF  03,FEA
0BE54:  BCF    FEF.5
.................... //Gr2= "NO"; 
.................... } else { 
0BE56:  BRA    BE6E
.................... bit_set(LGrupo[submenu],5); 
0BE58:  CLRF   03
0BE5A:  MOVF   x6D,W
0BE5C:  ADDLW  AD
0BE5E:  MOVWF  01
0BE60:  MOVLW  00
0BE62:  ADDWFC 03,F
0BE64:  MOVFF  01,FE9
0BE68:  MOVFF  03,FEA
0BE6C:  BSF    FEF.5
.................... //Gr2= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0BE6E:  CLRF   x90
0BE70:  MOVLW  C8
0BE72:  ADDWF  x6D,W
0BE74:  MOVWF  x7F
0BE76:  MOVLW  00
0BE78:  ADDWFC x90,W
0BE7A:  MOVWF  x80
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0BE7C:  CLRF   03
0BE7E:  MOVF   x6D,W
0BE80:  ADDLW  AD
0BE82:  MOVWF  FE9
0BE84:  MOVLW  00
0BE86:  ADDWFC 03,W
0BE88:  MOVWF  FEA
0BE8A:  MOVFF  FEF,18F
0BE8E:  MOVF   FF2,W
0BE90:  MOVWF  00
0BE92:  BCF    FF2.7
0BE94:  MOVFF  180,FAA
0BE98:  MOVFF  17F,FA9
0BE9C:  MOVFF  18F,FA8
0BEA0:  BCF    FA6.6
0BEA2:  BCF    FA6.7
0BEA4:  BSF    FA6.2
0BEA6:  MOVLB  F
0BEA8:  MOVLW  55
0BEAA:  MOVWF  FA7
0BEAC:  MOVLW  AA
0BEAE:  MOVWF  FA7
0BEB0:  BSF    FA6.1
0BEB2:  BTFSC  FA6.1
0BEB4:  BRA    BEB2
0BEB6:  BCF    FA6.2
0BEB8:  MOVF   00,W
0BEBA:  IORWF  FF2,F
0BEBC:  MOVLB  1
.................... } 
....................  
.................... if (grupo == 3) { 
0BEBE:  MOVF   x6E,W
0BEC0:  SUBLW  03
0BEC2:  BNZ   BF58
.................... if (bit_test(LGrupo[submenu],6)) { 
0BEC4:  CLRF   03
0BEC6:  MOVF   x6D,W
0BEC8:  ADDLW  AD
0BECA:  MOVWF  FE9
0BECC:  MOVLW  00
0BECE:  ADDWFC 03,W
0BED0:  MOVWF  FEA
0BED2:  MOVFF  FEF,18F
0BED6:  BTFSS  x8F.6
0BED8:  BRA    BEF2
.................... bit_clear(LGrupo[submenu],6); 
0BEDA:  CLRF   03
0BEDC:  MOVF   x6D,W
0BEDE:  ADDLW  AD
0BEE0:  MOVWF  01
0BEE2:  MOVLW  00
0BEE4:  ADDWFC 03,F
0BEE6:  MOVFF  01,FE9
0BEEA:  MOVFF  03,FEA
0BEEE:  BCF    FEF.6
.................... //Gr2= "NO"; 
.................... } else { 
0BEF0:  BRA    BF08
.................... bit_set(LGrupo[submenu],6); 
0BEF2:  CLRF   03
0BEF4:  MOVF   x6D,W
0BEF6:  ADDLW  AD
0BEF8:  MOVWF  01
0BEFA:  MOVLW  00
0BEFC:  ADDWFC 03,F
0BEFE:  MOVFF  01,FE9
0BF02:  MOVFF  03,FEA
0BF06:  BSF    FEF.6
.................... //Gr2= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0BF08:  CLRF   x90
0BF0A:  MOVLW  C8
0BF0C:  ADDWF  x6D,W
0BF0E:  MOVWF  x81
0BF10:  MOVLW  00
0BF12:  ADDWFC x90,W
0BF14:  MOVWF  x82
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0BF16:  CLRF   03
0BF18:  MOVF   x6D,W
0BF1A:  ADDLW  AD
0BF1C:  MOVWF  FE9
0BF1E:  MOVLW  00
0BF20:  ADDWFC 03,W
0BF22:  MOVWF  FEA
0BF24:  MOVFF  FEF,18F
0BF28:  MOVF   FF2,W
0BF2A:  MOVWF  00
0BF2C:  BCF    FF2.7
0BF2E:  MOVFF  182,FAA
0BF32:  MOVFF  181,FA9
0BF36:  MOVFF  18F,FA8
0BF3A:  BCF    FA6.6
0BF3C:  BCF    FA6.7
0BF3E:  BSF    FA6.2
0BF40:  MOVLB  F
0BF42:  MOVLW  55
0BF44:  MOVWF  FA7
0BF46:  MOVLW  AA
0BF48:  MOVWF  FA7
0BF4A:  BSF    FA6.1
0BF4C:  BTFSC  FA6.1
0BF4E:  BRA    BF4C
0BF50:  BCF    FA6.2
0BF52:  MOVF   00,W
0BF54:  IORWF  FF2,F
0BF56:  MOVLB  1
.................... } 
....................  
.................... if (grupo == 4) { 
0BF58:  MOVF   x6E,W
0BF5A:  SUBLW  04
0BF5C:  BNZ   BFF2
.................... if (bit_test(LGrupo[submenu],7)) { 
0BF5E:  CLRF   03
0BF60:  MOVF   x6D,W
0BF62:  ADDLW  AD
0BF64:  MOVWF  FE9
0BF66:  MOVLW  00
0BF68:  ADDWFC 03,W
0BF6A:  MOVWF  FEA
0BF6C:  MOVFF  FEF,18F
0BF70:  BTFSS  x8F.7
0BF72:  BRA    BF8C
.................... bit_clear(LGrupo[submenu],7); 
0BF74:  CLRF   03
0BF76:  MOVF   x6D,W
0BF78:  ADDLW  AD
0BF7A:  MOVWF  01
0BF7C:  MOVLW  00
0BF7E:  ADDWFC 03,F
0BF80:  MOVFF  01,FE9
0BF84:  MOVFF  03,FEA
0BF88:  BCF    FEF.7
.................... //Gr2= "NO"; 
.................... } else { 
0BF8A:  BRA    BFA2
.................... bit_set(LGrupo[submenu],7); 
0BF8C:  CLRF   03
0BF8E:  MOVF   x6D,W
0BF90:  ADDLW  AD
0BF92:  MOVWF  01
0BF94:  MOVLW  00
0BF96:  ADDWFC 03,F
0BF98:  MOVFF  01,FE9
0BF9C:  MOVFF  03,FEA
0BFA0:  BSF    FEF.7
.................... //Gr2= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0BFA2:  CLRF   x90
0BFA4:  MOVLW  C8
0BFA6:  ADDWF  x6D,W
0BFA8:  MOVWF  x83
0BFAA:  MOVLW  00
0BFAC:  ADDWFC x90,W
0BFAE:  MOVWF  x84
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0BFB0:  CLRF   03
0BFB2:  MOVF   x6D,W
0BFB4:  ADDLW  AD
0BFB6:  MOVWF  FE9
0BFB8:  MOVLW  00
0BFBA:  ADDWFC 03,W
0BFBC:  MOVWF  FEA
0BFBE:  MOVFF  FEF,18F
0BFC2:  MOVF   FF2,W
0BFC4:  MOVWF  00
0BFC6:  BCF    FF2.7
0BFC8:  MOVFF  184,FAA
0BFCC:  MOVFF  183,FA9
0BFD0:  MOVFF  18F,FA8
0BFD4:  BCF    FA6.6
0BFD6:  BCF    FA6.7
0BFD8:  BSF    FA6.2
0BFDA:  MOVLB  F
0BFDC:  MOVLW  55
0BFDE:  MOVWF  FA7
0BFE0:  MOVLW  AA
0BFE2:  MOVWF  FA7
0BFE4:  BSF    FA6.1
0BFE6:  BTFSC  FA6.1
0BFE8:  BRA    BFE6
0BFEA:  BCF    FA6.2
0BFEC:  MOVF   00,W
0BFEE:  IORWF  FF2,F
0BFF0:  MOVLB  1
.................... } 
....................  
.................... rebote = true; 
0BFF2:  BSF    35.0
.................... } // si arriba 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0BFF4:  BTFSC  35.0
0BFF6:  BRA    C2AE
.................... if (input(ABAJO) == 0) { // apretamos arriba, entonces resto numero de luz 
0BFF8:  BSF    F93.2
0BFFA:  BTFSC  F81.2
0BFFC:  BRA    C2AE
....................  
.................... if (grupo == 0) { 
0BFFE:  MOVF   x6E,F
0C000:  BNZ   C046
.................... ++submenu; 
0C002:  INCF   x6D,F
.................... if (submenu == 94) submenu = 33; 
0C004:  MOVF   x6D,W
0C006:  SUBLW  5E
0C008:  BNZ   C00E
0C00A:  MOVLW  21
0C00C:  MOVWF  x6D
.................... long puntero; 
.................... puntero = (long) submenu + 200; 
0C00E:  CLRF   x90
0C010:  MOVLW  C8
0C012:  ADDWF  x6D,W
0C014:  MOVWF  x85
0C016:  MOVLW  00
0C018:  ADDWFC x90,W
0C01A:  MOVWF  x86
.................... LGrupo[submenu] = read_eeprom(puntero); 
0C01C:  CLRF   03
0C01E:  MOVF   x6D,W
0C020:  ADDLW  AD
0C022:  MOVWF  FE9
0C024:  MOVLW  00
0C026:  ADDWFC 03,W
0C028:  MOVWF  FEA
0C02A:  MOVFF  FF2,191
0C02E:  BCF    FF2.7
0C030:  MOVFF  186,FAA
0C034:  MOVFF  185,FA9
0C038:  BCF    FA6.6
0C03A:  BCF    FA6.7
0C03C:  BSF    FA6.0
0C03E:  MOVF   FA8,W
0C040:  BTFSC  x91.7
0C042:  BSF    FF2.7
0C044:  MOVWF  FEF
.................... } 
....................  
.................... if (grupo == 1) { 
0C046:  DECFSZ x6E,W
0C048:  BRA    C0DE
.................... if (bit_test(LGrupo[submenu],4)) { 
0C04A:  CLRF   03
0C04C:  MOVF   x6D,W
0C04E:  ADDLW  AD
0C050:  MOVWF  FE9
0C052:  MOVLW  00
0C054:  ADDWFC 03,W
0C056:  MOVWF  FEA
0C058:  MOVFF  FEF,18F
0C05C:  BTFSS  x8F.4
0C05E:  BRA    C078
.................... bit_clear(LGrupo[submenu],4); 
0C060:  CLRF   03
0C062:  MOVF   x6D,W
0C064:  ADDLW  AD
0C066:  MOVWF  01
0C068:  MOVLW  00
0C06A:  ADDWFC 03,F
0C06C:  MOVFF  01,FE9
0C070:  MOVFF  03,FEA
0C074:  BCF    FEF.4
.................... //Gr1= "NO"; 
.................... } else { 
0C076:  BRA    C08E
.................... bit_set(LGrupo[submenu],4); 
0C078:  CLRF   03
0C07A:  MOVF   x6D,W
0C07C:  ADDLW  AD
0C07E:  MOVWF  01
0C080:  MOVLW  00
0C082:  ADDWFC 03,F
0C084:  MOVFF  01,FE9
0C088:  MOVFF  03,FEA
0C08C:  BSF    FEF.4
.................... //Gr1= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0C08E:  CLRF   x90
0C090:  MOVLW  C8
0C092:  ADDWF  x6D,W
0C094:  MOVWF  x87
0C096:  MOVLW  00
0C098:  ADDWFC x90,W
0C09A:  MOVWF  x88
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0C09C:  CLRF   03
0C09E:  MOVF   x6D,W
0C0A0:  ADDLW  AD
0C0A2:  MOVWF  FE9
0C0A4:  MOVLW  00
0C0A6:  ADDWFC 03,W
0C0A8:  MOVWF  FEA
0C0AA:  MOVFF  FEF,18F
0C0AE:  MOVF   FF2,W
0C0B0:  MOVWF  00
0C0B2:  BCF    FF2.7
0C0B4:  MOVFF  188,FAA
0C0B8:  MOVFF  187,FA9
0C0BC:  MOVFF  18F,FA8
0C0C0:  BCF    FA6.6
0C0C2:  BCF    FA6.7
0C0C4:  BSF    FA6.2
0C0C6:  MOVLB  F
0C0C8:  MOVLW  55
0C0CA:  MOVWF  FA7
0C0CC:  MOVLW  AA
0C0CE:  MOVWF  FA7
0C0D0:  BSF    FA6.1
0C0D2:  BTFSC  FA6.1
0C0D4:  BRA    C0D2
0C0D6:  BCF    FA6.2
0C0D8:  MOVF   00,W
0C0DA:  IORWF  FF2,F
0C0DC:  MOVLB  1
.................... } 
....................  
.................... if (grupo == 2) { 
0C0DE:  MOVF   x6E,W
0C0E0:  SUBLW  02
0C0E2:  BNZ   C178
.................... if (bit_test(LGrupo[submenu],5)) { 
0C0E4:  CLRF   03
0C0E6:  MOVF   x6D,W
0C0E8:  ADDLW  AD
0C0EA:  MOVWF  FE9
0C0EC:  MOVLW  00
0C0EE:  ADDWFC 03,W
0C0F0:  MOVWF  FEA
0C0F2:  MOVFF  FEF,18F
0C0F6:  BTFSS  x8F.5
0C0F8:  BRA    C112
.................... bit_clear(LGrupo[submenu],5); 
0C0FA:  CLRF   03
0C0FC:  MOVF   x6D,W
0C0FE:  ADDLW  AD
0C100:  MOVWF  01
0C102:  MOVLW  00
0C104:  ADDWFC 03,F
0C106:  MOVFF  01,FE9
0C10A:  MOVFF  03,FEA
0C10E:  BCF    FEF.5
.................... //Gr2= "NO"; 
.................... } else { 
0C110:  BRA    C128
.................... bit_set(LGrupo[submenu],5); 
0C112:  CLRF   03
0C114:  MOVF   x6D,W
0C116:  ADDLW  AD
0C118:  MOVWF  01
0C11A:  MOVLW  00
0C11C:  ADDWFC 03,F
0C11E:  MOVFF  01,FE9
0C122:  MOVFF  03,FEA
0C126:  BSF    FEF.5
.................... //Gr2= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0C128:  CLRF   x90
0C12A:  MOVLW  C8
0C12C:  ADDWF  x6D,W
0C12E:  MOVWF  x89
0C130:  MOVLW  00
0C132:  ADDWFC x90,W
0C134:  MOVWF  x8A
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0C136:  CLRF   03
0C138:  MOVF   x6D,W
0C13A:  ADDLW  AD
0C13C:  MOVWF  FE9
0C13E:  MOVLW  00
0C140:  ADDWFC 03,W
0C142:  MOVWF  FEA
0C144:  MOVFF  FEF,18F
0C148:  MOVF   FF2,W
0C14A:  MOVWF  00
0C14C:  BCF    FF2.7
0C14E:  MOVFF  18A,FAA
0C152:  MOVFF  189,FA9
0C156:  MOVFF  18F,FA8
0C15A:  BCF    FA6.6
0C15C:  BCF    FA6.7
0C15E:  BSF    FA6.2
0C160:  MOVLB  F
0C162:  MOVLW  55
0C164:  MOVWF  FA7
0C166:  MOVLW  AA
0C168:  MOVWF  FA7
0C16A:  BSF    FA6.1
0C16C:  BTFSC  FA6.1
0C16E:  BRA    C16C
0C170:  BCF    FA6.2
0C172:  MOVF   00,W
0C174:  IORWF  FF2,F
0C176:  MOVLB  1
.................... } 
....................  
.................... if (grupo == 3) { 
0C178:  MOVF   x6E,W
0C17A:  SUBLW  03
0C17C:  BNZ   C212
.................... if (bit_test(LGrupo[submenu],6)) { 
0C17E:  CLRF   03
0C180:  MOVF   x6D,W
0C182:  ADDLW  AD
0C184:  MOVWF  FE9
0C186:  MOVLW  00
0C188:  ADDWFC 03,W
0C18A:  MOVWF  FEA
0C18C:  MOVFF  FEF,18F
0C190:  BTFSS  x8F.6
0C192:  BRA    C1AC
.................... bit_clear(LGrupo[submenu],6); 
0C194:  CLRF   03
0C196:  MOVF   x6D,W
0C198:  ADDLW  AD
0C19A:  MOVWF  01
0C19C:  MOVLW  00
0C19E:  ADDWFC 03,F
0C1A0:  MOVFF  01,FE9
0C1A4:  MOVFF  03,FEA
0C1A8:  BCF    FEF.6
.................... //Gr2= "NO"; 
.................... } else { 
0C1AA:  BRA    C1C2
.................... bit_set(LGrupo[submenu],6); 
0C1AC:  CLRF   03
0C1AE:  MOVF   x6D,W
0C1B0:  ADDLW  AD
0C1B2:  MOVWF  01
0C1B4:  MOVLW  00
0C1B6:  ADDWFC 03,F
0C1B8:  MOVFF  01,FE9
0C1BC:  MOVFF  03,FEA
0C1C0:  BSF    FEF.6
.................... //Gr2= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0C1C2:  CLRF   x90
0C1C4:  MOVLW  C8
0C1C6:  ADDWF  x6D,W
0C1C8:  MOVWF  x8B
0C1CA:  MOVLW  00
0C1CC:  ADDWFC x90,W
0C1CE:  MOVWF  x8C
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0C1D0:  CLRF   03
0C1D2:  MOVF   x6D,W
0C1D4:  ADDLW  AD
0C1D6:  MOVWF  FE9
0C1D8:  MOVLW  00
0C1DA:  ADDWFC 03,W
0C1DC:  MOVWF  FEA
0C1DE:  MOVFF  FEF,18F
0C1E2:  MOVF   FF2,W
0C1E4:  MOVWF  00
0C1E6:  BCF    FF2.7
0C1E8:  MOVFF  18C,FAA
0C1EC:  MOVFF  18B,FA9
0C1F0:  MOVFF  18F,FA8
0C1F4:  BCF    FA6.6
0C1F6:  BCF    FA6.7
0C1F8:  BSF    FA6.2
0C1FA:  MOVLB  F
0C1FC:  MOVLW  55
0C1FE:  MOVWF  FA7
0C200:  MOVLW  AA
0C202:  MOVWF  FA7
0C204:  BSF    FA6.1
0C206:  BTFSC  FA6.1
0C208:  BRA    C206
0C20A:  BCF    FA6.2
0C20C:  MOVF   00,W
0C20E:  IORWF  FF2,F
0C210:  MOVLB  1
.................... } 
....................  
.................... if (grupo == 4) { 
0C212:  MOVF   x6E,W
0C214:  SUBLW  04
0C216:  BNZ   C2AC
.................... if (bit_test(LGrupo[submenu],7)) { 
0C218:  CLRF   03
0C21A:  MOVF   x6D,W
0C21C:  ADDLW  AD
0C21E:  MOVWF  FE9
0C220:  MOVLW  00
0C222:  ADDWFC 03,W
0C224:  MOVWF  FEA
0C226:  MOVFF  FEF,18F
0C22A:  BTFSS  x8F.7
0C22C:  BRA    C246
.................... bit_clear(LGrupo[submenu],7); 
0C22E:  CLRF   03
0C230:  MOVF   x6D,W
0C232:  ADDLW  AD
0C234:  MOVWF  01
0C236:  MOVLW  00
0C238:  ADDWFC 03,F
0C23A:  MOVFF  01,FE9
0C23E:  MOVFF  03,FEA
0C242:  BCF    FEF.7
.................... //Gr2= "NO"; 
.................... } else { 
0C244:  BRA    C25C
.................... bit_set(LGrupo[submenu],7); 
0C246:  CLRF   03
0C248:  MOVF   x6D,W
0C24A:  ADDLW  AD
0C24C:  MOVWF  01
0C24E:  MOVLW  00
0C250:  ADDWFC 03,F
0C252:  MOVFF  01,FE9
0C256:  MOVFF  03,FEA
0C25A:  BSF    FEF.7
.................... //Gr2= "SI"; 
.................... } 
.................... long puntero; 
.................... puntero = (long) submenu+200; 
0C25C:  CLRF   x90
0C25E:  MOVLW  C8
0C260:  ADDWF  x6D,W
0C262:  MOVWF  x8D
0C264:  MOVLW  00
0C266:  ADDWFC x90,W
0C268:  MOVWF  x8E
.................... //Defini(); 
.................... write_eeprom(puntero,LGrupo[submenu]); 
0C26A:  CLRF   03
0C26C:  MOVF   x6D,W
0C26E:  ADDLW  AD
0C270:  MOVWF  FE9
0C272:  MOVLW  00
0C274:  ADDWFC 03,W
0C276:  MOVWF  FEA
0C278:  MOVFF  FEF,18F
0C27C:  MOVF   FF2,W
0C27E:  MOVWF  00
0C280:  BCF    FF2.7
0C282:  MOVFF  18E,FAA
0C286:  MOVFF  18D,FA9
0C28A:  MOVFF  18F,FA8
0C28E:  BCF    FA6.6
0C290:  BCF    FA6.7
0C292:  BSF    FA6.2
0C294:  MOVLB  F
0C296:  MOVLW  55
0C298:  MOVWF  FA7
0C29A:  MOVLW  AA
0C29C:  MOVWF  FA7
0C29E:  BSF    FA6.1
0C2A0:  BTFSC  FA6.1
0C2A2:  BRA    C2A0
0C2A4:  BCF    FA6.2
0C2A6:  MOVF   00,W
0C2A8:  IORWF  FF2,F
0C2AA:  MOVLB  1
.................... } 
....................  
.................... rebote = true; 
0C2AC:  BSF    35.0
.................... } // si arriba 
.................... }//rebote 
....................  
.................... /////////////////////// LCD /////////////////////// 
.................... if (bit_test(LGrupo[submenu],4)) Gr1 = "SI"; 
0C2AE:  CLRF   03
0C2B0:  MOVF   x6D,W
0C2B2:  ADDLW  AD
0C2B4:  MOVWF  FE9
0C2B6:  MOVLW  00
0C2B8:  ADDWFC 03,W
0C2BA:  MOVWF  FEA
0C2BC:  MOVFF  FEF,18F
0C2C0:  BTFSS  x8F.4
0C2C2:  BRA    C2E4
0C2C4:  MOVLW  01
0C2C6:  MOVWF  FEA
0C2C8:  MOVLW  6F
0C2CA:  MOVWF  FE9
0C2CC:  MOVLW  00
0C2CE:  MOVLB  0
0C2D0:  CALL   018E
0C2D4:  TBLRD*-
0C2D6:  TBLRD*+
0C2D8:  MOVF   FF5,W
0C2DA:  MOVWF  FEE
0C2DC:  IORLW  00
0C2DE:  BNZ   C2D6
.................... else Gr1 = "NO"; 
0C2E0:  BRA    C300
0C2E2:  MOVLB  1
0C2E4:  MOVLW  01
0C2E6:  MOVWF  FEA
0C2E8:  MOVLW  6F
0C2EA:  MOVWF  FE9
0C2EC:  MOVLW  00
0C2EE:  MOVLB  0
0C2F0:  CALL   01A2
0C2F4:  TBLRD*-
0C2F6:  TBLRD*+
0C2F8:  MOVF   FF5,W
0C2FA:  MOVWF  FEE
0C2FC:  IORLW  00
0C2FE:  BNZ   C2F6
.................... if (bit_test(LGrupo[submenu],5)) Gr2 = "SI"; 
0C300:  CLRF   03
0C302:  MOVLB  1
0C304:  MOVF   x6D,W
0C306:  ADDLW  AD
0C308:  MOVWF  FE9
0C30A:  MOVLW  00
0C30C:  ADDWFC 03,W
0C30E:  MOVWF  FEA
0C310:  MOVFF  FEF,18F
0C314:  BTFSS  x8F.5
0C316:  BRA    C338
0C318:  MOVLW  01
0C31A:  MOVWF  FEA
0C31C:  MOVLW  72
0C31E:  MOVWF  FE9
0C320:  MOVLW  00
0C322:  MOVLB  0
0C324:  CALL   018E
0C328:  TBLRD*-
0C32A:  TBLRD*+
0C32C:  MOVF   FF5,W
0C32E:  MOVWF  FEE
0C330:  IORLW  00
0C332:  BNZ   C32A
.................... else Gr2 = "NO"; 
0C334:  BRA    C354
0C336:  MOVLB  1
0C338:  MOVLW  01
0C33A:  MOVWF  FEA
0C33C:  MOVLW  72
0C33E:  MOVWF  FE9
0C340:  MOVLW  00
0C342:  MOVLB  0
0C344:  CALL   01A2
0C348:  TBLRD*-
0C34A:  TBLRD*+
0C34C:  MOVF   FF5,W
0C34E:  MOVWF  FEE
0C350:  IORLW  00
0C352:  BNZ   C34A
.................... if (bit_test(LGrupo[submenu],6)) Gr3 = "SI"; 
0C354:  CLRF   03
0C356:  MOVLB  1
0C358:  MOVF   x6D,W
0C35A:  ADDLW  AD
0C35C:  MOVWF  FE9
0C35E:  MOVLW  00
0C360:  ADDWFC 03,W
0C362:  MOVWF  FEA
0C364:  MOVFF  FEF,18F
0C368:  BTFSS  x8F.6
0C36A:  BRA    C38C
0C36C:  MOVLW  01
0C36E:  MOVWF  FEA
0C370:  MOVLW  75
0C372:  MOVWF  FE9
0C374:  MOVLW  00
0C376:  MOVLB  0
0C378:  CALL   018E
0C37C:  TBLRD*-
0C37E:  TBLRD*+
0C380:  MOVF   FF5,W
0C382:  MOVWF  FEE
0C384:  IORLW  00
0C386:  BNZ   C37E
.................... else Gr3 = "NO"; 
0C388:  BRA    C3A8
0C38A:  MOVLB  1
0C38C:  MOVLW  01
0C38E:  MOVWF  FEA
0C390:  MOVLW  75
0C392:  MOVWF  FE9
0C394:  MOVLW  00
0C396:  MOVLB  0
0C398:  CALL   01A2
0C39C:  TBLRD*-
0C39E:  TBLRD*+
0C3A0:  MOVF   FF5,W
0C3A2:  MOVWF  FEE
0C3A4:  IORLW  00
0C3A6:  BNZ   C39E
.................... if (bit_test(LGrupo[submenu],7)) Gr4 = "SI"; 
0C3A8:  CLRF   03
0C3AA:  MOVLB  1
0C3AC:  MOVF   x6D,W
0C3AE:  ADDLW  AD
0C3B0:  MOVWF  FE9
0C3B2:  MOVLW  00
0C3B4:  ADDWFC 03,W
0C3B6:  MOVWF  FEA
0C3B8:  MOVFF  FEF,18F
0C3BC:  BTFSS  x8F.7
0C3BE:  BRA    C3E0
0C3C0:  MOVLW  01
0C3C2:  MOVWF  FEA
0C3C4:  MOVLW  78
0C3C6:  MOVWF  FE9
0C3C8:  MOVLW  00
0C3CA:  MOVLB  0
0C3CC:  CALL   018E
0C3D0:  TBLRD*-
0C3D2:  TBLRD*+
0C3D4:  MOVF   FF5,W
0C3D6:  MOVWF  FEE
0C3D8:  IORLW  00
0C3DA:  BNZ   C3D2
.................... else Gr4 = "NO"; 
0C3DC:  BRA    C3FC
0C3DE:  MOVLB  1
0C3E0:  MOVLW  01
0C3E2:  MOVWF  FEA
0C3E4:  MOVLW  78
0C3E6:  MOVWF  FE9
0C3E8:  MOVLW  00
0C3EA:  MOVLB  0
0C3EC:  CALL   01A2
0C3F0:  TBLRD*-
0C3F2:  TBLRD*+
0C3F4:  MOVF   FF5,W
0C3F6:  MOVWF  FEE
0C3F8:  IORLW  00
0C3FA:  BNZ   C3F2
0C3FC:  CLRF   19
0C3FE:  BTFSC  FF2.7
0C400:  BSF    19.7
0C402:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,1); 
0C404:  MOVLW  01
0C406:  MOVLB  1
0C408:  MOVWF  xA0
0C40A:  MOVWF  xA1
0C40C:  MOVLB  0
0C40E:  CALL   156C
0C412:  BTFSC  19.7
0C414:  BSF    FF2.7
.................... printf(lcd_putc, "= Luces Automatic. ="); 
0C416:  MOVLW  42
0C418:  MOVWF  FF6
0C41A:  MOVLW  06
0C41C:  MOVWF  FF7
0C41E:  CALL   3E86
0C422:  CLRF   19
0C424:  BTFSC  FF2.7
0C426:  BSF    19.7
0C428:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,2); 
0C42A:  MOVLW  01
0C42C:  MOVLB  1
0C42E:  MOVWF  xA0
0C430:  MOVLW  02
0C432:  MOVWF  xA1
0C434:  MOVLB  0
0C436:  CALL   156C
0C43A:  BTFSC  19.7
0C43C:  BSF    FF2.7
.................... if (grupo == 0){ // si grupo 0 
0C43E:  MOVLB  1
0C440:  MOVF   x6E,F
0C442:  BNZ   C49A
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Luz #%02u pertenece a:",(submenu-32)); 
0C444:  BTFSS  49.0
0C446:  BRA    C488
0C448:  MOVLW  20
0C44A:  SUBWF  x6D,W
0C44C:  MOVWF  x8F
0C44E:  MOVLW  58
0C450:  MOVWF  FF6
0C452:  MOVLW  06
0C454:  MOVWF  FF7
0C456:  MOVLW  05
0C458:  MOVWF  x90
0C45A:  MOVLB  0
0C45C:  CALL   44F0
0C460:  MOVFF  18F,190
0C464:  MOVLW  01
0C466:  MOVLB  1
0C468:  MOVWF  x91
0C46A:  MOVLB  0
0C46C:  CALL   46F0
0C470:  MOVLW  61
0C472:  MOVWF  FF6
0C474:  MOVLW  06
0C476:  MOVWF  FF7
0C478:  MOVLW  0D
0C47A:  MOVLB  1
0C47C:  MOVWF  x90
0C47E:  MOVLB  0
0C480:  CALL   44F0
.................... else printf(lcd_putc, "Luz     pertenece a:"); 
0C484:  BRA    C496
0C486:  MOVLB  1
0C488:  MOVLW  70
0C48A:  MOVWF  FF6
0C48C:  MOVLW  06
0C48E:  MOVWF  FF7
0C490:  MOVLB  0
0C492:  CALL   3E86
.................... } else printf(lcd_putc, "Luz #%02u pertenece a:",(submenu-32)); 
0C496:  BRA    C4D6
0C498:  MOVLB  1
0C49A:  MOVLW  20
0C49C:  SUBWF  x6D,W
0C49E:  MOVWF  x8F
0C4A0:  MOVLW  86
0C4A2:  MOVWF  FF6
0C4A4:  MOVLW  06
0C4A6:  MOVWF  FF7
0C4A8:  MOVLW  05
0C4AA:  MOVWF  x90
0C4AC:  MOVLB  0
0C4AE:  CALL   44F0
0C4B2:  MOVFF  18F,190
0C4B6:  MOVLW  01
0C4B8:  MOVLB  1
0C4BA:  MOVWF  x91
0C4BC:  MOVLB  0
0C4BE:  CALL   46F0
0C4C2:  MOVLW  8F
0C4C4:  MOVWF  FF6
0C4C6:  MOVLW  06
0C4C8:  MOVWF  FF7
0C4CA:  MOVLW  0D
0C4CC:  MOVLB  1
0C4CE:  MOVWF  x90
0C4D0:  MOVLB  0
0C4D2:  CALL   44F0
0C4D6:  CLRF   19
0C4D8:  BTFSC  FF2.7
0C4DA:  BSF    19.7
0C4DC:  BCF    FF2.7
....................  
....................  
.................... lcd_gotoxy(1,3); 
0C4DE:  MOVLW  01
0C4E0:  MOVLB  1
0C4E2:  MOVWF  xA0
0C4E4:  MOVLW  03
0C4E6:  MOVWF  xA1
0C4E8:  MOVLB  0
0C4EA:  CALL   156C
0C4EE:  BTFSC  19.7
0C4F0:  BSF    FF2.7
.................... if (grupo == 1){ // si grupo 1 
0C4F2:  MOVLB  1
0C4F4:  DECFSZ x6E,W
0C4F6:  BRA    C548
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "GA1: -%s- ",Gr1); 
0C4F8:  BTFSS  49.0
0C4FA:  BRA    C536
0C4FC:  MOVLW  9E
0C4FE:  MOVWF  FF6
0C500:  MOVLW  06
0C502:  MOVWF  FF7
0C504:  MOVLW  06
0C506:  MOVWF  x90
0C508:  MOVLB  0
0C50A:  CALL   44F0
0C50E:  MOVLW  01
0C510:  MOVWF  FEA
0C512:  MOVLW  6F
0C514:  MOVWF  FE9
0C516:  CALL   4518
0C51A:  MOVLW  2D
0C51C:  MOVLB  1
0C51E:  MOVWF  x93
0C520:  MOVLB  0
0C522:  CALL   3DE6
0C526:  MOVLW  20
0C528:  MOVLB  1
0C52A:  MOVWF  x93
0C52C:  MOVLB  0
0C52E:  CALL   3DE6
.................... else printf(lcd_putc, "GA1: -  - "); 
0C532:  BRA    C544
0C534:  MOVLB  1
0C536:  MOVLW  AA
0C538:  MOVWF  FF6
0C53A:  MOVLW  06
0C53C:  MOVWF  FF7
0C53E:  MOVLB  0
0C540:  CALL   3E86
.................... } else printf(lcd_putc, "GA1: -%s- ",Gr1); 
0C544:  BRA    C57E
0C546:  MOVLB  1
0C548:  MOVLW  B6
0C54A:  MOVWF  FF6
0C54C:  MOVLW  06
0C54E:  MOVWF  FF7
0C550:  MOVLW  06
0C552:  MOVWF  x90
0C554:  MOVLB  0
0C556:  CALL   44F0
0C55A:  MOVLW  01
0C55C:  MOVWF  FEA
0C55E:  MOVLW  6F
0C560:  MOVWF  FE9
0C562:  CALL   4518
0C566:  MOVLW  2D
0C568:  MOVLB  1
0C56A:  MOVWF  x93
0C56C:  MOVLB  0
0C56E:  CALL   3DE6
0C572:  MOVLW  20
0C574:  MOVLB  1
0C576:  MOVWF  x93
0C578:  MOVLB  0
0C57A:  CALL   3DE6
0C57E:  CLRF   19
0C580:  BTFSC  FF2.7
0C582:  BSF    19.7
0C584:  BCF    FF2.7
....................  
.................... lcd_gotoxy(11,3); 
0C586:  MOVLW  0B
0C588:  MOVLB  1
0C58A:  MOVWF  xA0
0C58C:  MOVLW  03
0C58E:  MOVWF  xA1
0C590:  MOVLB  0
0C592:  CALL   156C
0C596:  BTFSC  19.7
0C598:  BSF    FF2.7
.................... if (grupo == 2){ // si grupo 2 
0C59A:  MOVLB  1
0C59C:  MOVF   x6E,W
0C59E:  SUBLW  02
0C5A0:  BNZ   C5F2
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "GA2: -%s- ",Gr2); 
0C5A2:  BTFSS  49.0
0C5A4:  BRA    C5E0
0C5A6:  MOVLW  C2
0C5A8:  MOVWF  FF6
0C5AA:  MOVLW  06
0C5AC:  MOVWF  FF7
0C5AE:  MOVLW  06
0C5B0:  MOVWF  x90
0C5B2:  MOVLB  0
0C5B4:  CALL   44F0
0C5B8:  MOVLW  01
0C5BA:  MOVWF  FEA
0C5BC:  MOVLW  72
0C5BE:  MOVWF  FE9
0C5C0:  CALL   4518
0C5C4:  MOVLW  2D
0C5C6:  MOVLB  1
0C5C8:  MOVWF  x93
0C5CA:  MOVLB  0
0C5CC:  CALL   3DE6
0C5D0:  MOVLW  20
0C5D2:  MOVLB  1
0C5D4:  MOVWF  x93
0C5D6:  MOVLB  0
0C5D8:  CALL   3DE6
.................... else printf(lcd_putc, "GA2: -  - "); 
0C5DC:  BRA    C5EE
0C5DE:  MOVLB  1
0C5E0:  MOVLW  CE
0C5E2:  MOVWF  FF6
0C5E4:  MOVLW  06
0C5E6:  MOVWF  FF7
0C5E8:  MOVLB  0
0C5EA:  CALL   3E86
.................... } else printf(lcd_putc, "GA2: -%s- ",Gr2); 
0C5EE:  BRA    C628
0C5F0:  MOVLB  1
0C5F2:  MOVLW  DA
0C5F4:  MOVWF  FF6
0C5F6:  MOVLW  06
0C5F8:  MOVWF  FF7
0C5FA:  MOVLW  06
0C5FC:  MOVWF  x90
0C5FE:  MOVLB  0
0C600:  CALL   44F0
0C604:  MOVLW  01
0C606:  MOVWF  FEA
0C608:  MOVLW  72
0C60A:  MOVWF  FE9
0C60C:  CALL   4518
0C610:  MOVLW  2D
0C612:  MOVLB  1
0C614:  MOVWF  x93
0C616:  MOVLB  0
0C618:  CALL   3DE6
0C61C:  MOVLW  20
0C61E:  MOVLB  1
0C620:  MOVWF  x93
0C622:  MOVLB  0
0C624:  CALL   3DE6
0C628:  CLRF   19
0C62A:  BTFSC  FF2.7
0C62C:  BSF    19.7
0C62E:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,4); 
0C630:  MOVLW  01
0C632:  MOVLB  1
0C634:  MOVWF  xA0
0C636:  MOVLW  04
0C638:  MOVWF  xA1
0C63A:  MOVLB  0
0C63C:  CALL   156C
0C640:  BTFSC  19.7
0C642:  BSF    FF2.7
.................... if (grupo == 3){ // si grupo 3 
0C644:  MOVLB  1
0C646:  MOVF   x6E,W
0C648:  SUBLW  03
0C64A:  BNZ   C69C
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "GA3: -%s- ",Gr3); 
0C64C:  BTFSS  49.0
0C64E:  BRA    C68A
0C650:  MOVLW  E6
0C652:  MOVWF  FF6
0C654:  MOVLW  06
0C656:  MOVWF  FF7
0C658:  MOVLW  06
0C65A:  MOVWF  x90
0C65C:  MOVLB  0
0C65E:  CALL   44F0
0C662:  MOVLW  01
0C664:  MOVWF  FEA
0C666:  MOVLW  75
0C668:  MOVWF  FE9
0C66A:  CALL   4518
0C66E:  MOVLW  2D
0C670:  MOVLB  1
0C672:  MOVWF  x93
0C674:  MOVLB  0
0C676:  CALL   3DE6
0C67A:  MOVLW  20
0C67C:  MOVLB  1
0C67E:  MOVWF  x93
0C680:  MOVLB  0
0C682:  CALL   3DE6
.................... else printf(lcd_putc, "GA3: -  - "); 
0C686:  BRA    C698
0C688:  MOVLB  1
0C68A:  MOVLW  F2
0C68C:  MOVWF  FF6
0C68E:  MOVLW  06
0C690:  MOVWF  FF7
0C692:  MOVLB  0
0C694:  CALL   3E86
.................... } else printf(lcd_putc, "GA3: -%s- ",Gr3); 
0C698:  BRA    C6D2
0C69A:  MOVLB  1
0C69C:  MOVLW  FE
0C69E:  MOVWF  FF6
0C6A0:  MOVLW  06
0C6A2:  MOVWF  FF7
0C6A4:  MOVLW  06
0C6A6:  MOVWF  x90
0C6A8:  MOVLB  0
0C6AA:  CALL   44F0
0C6AE:  MOVLW  01
0C6B0:  MOVWF  FEA
0C6B2:  MOVLW  75
0C6B4:  MOVWF  FE9
0C6B6:  CALL   4518
0C6BA:  MOVLW  2D
0C6BC:  MOVLB  1
0C6BE:  MOVWF  x93
0C6C0:  MOVLB  0
0C6C2:  CALL   3DE6
0C6C6:  MOVLW  20
0C6C8:  MOVLB  1
0C6CA:  MOVWF  x93
0C6CC:  MOVLB  0
0C6CE:  CALL   3DE6
0C6D2:  CLRF   19
0C6D4:  BTFSC  FF2.7
0C6D6:  BSF    19.7
0C6D8:  BCF    FF2.7
....................  
.................... lcd_gotoxy(11,4); 
0C6DA:  MOVLW  0B
0C6DC:  MOVLB  1
0C6DE:  MOVWF  xA0
0C6E0:  MOVLW  04
0C6E2:  MOVWF  xA1
0C6E4:  MOVLB  0
0C6E6:  CALL   156C
0C6EA:  BTFSC  19.7
0C6EC:  BSF    FF2.7
.................... if (grupo == 4){ // si grupo 4 
0C6EE:  MOVLB  1
0C6F0:  MOVF   x6E,W
0C6F2:  SUBLW  04
0C6F4:  BNZ   C746
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "GA4: -%s- ",Gr4); 
0C6F6:  BTFSS  49.0
0C6F8:  BRA    C734
0C6FA:  MOVLW  0A
0C6FC:  MOVWF  FF6
0C6FE:  MOVLW  07
0C700:  MOVWF  FF7
0C702:  MOVLW  06
0C704:  MOVWF  x90
0C706:  MOVLB  0
0C708:  CALL   44F0
0C70C:  MOVLW  01
0C70E:  MOVWF  FEA
0C710:  MOVLW  78
0C712:  MOVWF  FE9
0C714:  CALL   4518
0C718:  MOVLW  2D
0C71A:  MOVLB  1
0C71C:  MOVWF  x93
0C71E:  MOVLB  0
0C720:  CALL   3DE6
0C724:  MOVLW  20
0C726:  MOVLB  1
0C728:  MOVWF  x93
0C72A:  MOVLB  0
0C72C:  CALL   3DE6
.................... else printf(lcd_putc, "GA4: -  - "); 
0C730:  BRA    C742
0C732:  MOVLB  1
0C734:  MOVLW  16
0C736:  MOVWF  FF6
0C738:  MOVLW  07
0C73A:  MOVWF  FF7
0C73C:  MOVLB  0
0C73E:  CALL   3E86
.................... } else printf(lcd_putc, "GA4: -%s- ",Gr4); 
0C742:  BRA    C77C
0C744:  MOVLB  1
0C746:  MOVLW  22
0C748:  MOVWF  FF6
0C74A:  MOVLW  07
0C74C:  MOVWF  FF7
0C74E:  MOVLW  06
0C750:  MOVWF  x90
0C752:  MOVLB  0
0C754:  CALL   44F0
0C758:  MOVLW  01
0C75A:  MOVWF  FEA
0C75C:  MOVLW  78
0C75E:  MOVWF  FE9
0C760:  CALL   4518
0C764:  MOVLW  2D
0C766:  MOVLB  1
0C768:  MOVWF  x93
0C76A:  MOVLB  0
0C76C:  CALL   3DE6
0C770:  MOVLW  20
0C772:  MOVLB  1
0C774:  MOVWF  x93
0C776:  MOVLB  0
0C778:  CALL   3DE6
....................  
.................... restart_wdt(); 
0C77C:  CLRWDT
....................  
.................... } // while 
0C77E:  MOVLB  1
0C780:  GOTO   BCE6
.................... } // fn 
0C784:  MOVLB  0
0C786:  GOTO   E582 (RETURN)
....................  
....................  
.................... void AHs(){  // horario de los grupos automaticos 
....................  
.................... LIMPIARLCD; 
*
0B456:  MOVLW  2E
0B458:  MOVWF  FF6
0B45A:  MOVLW  07
0B45C:  MOVWF  FF7
0B45E:  CALL   3E86
.................... int submenu = 1; 
.................... int grupo = 1; 
0B462:  MOVLW  01
0B464:  MOVLB  1
0B466:  MOVWF  x6D
0B468:  MOVWF  x6E
.................... //GOn[1] = GOn[2] = GOn[3] = GOn[4] = 0; 
.................... //GOff[1] = GOff[2] = GOff[3] = GOff[4] = 0; 
....................  
.................... while (submenu < 5){ //  
0B46A:  MOVF   x6D,W
0B46C:  SUBLW  04
0B46E:  BTFSS  FD8.0
0B470:  GOTO   BCCC
....................  
.................... restart_wdt(); 
0B474:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0B476:  BSF    F93.3
0B478:  BTFSS  F81.3
0B47A:  BRA    B48E
0B47C:  BSF    F93.2
0B47E:  BTFSS  F81.2
0B480:  BRA    B48E
0B482:  BSF    F93.1
0B484:  BTFSS  F81.1
0B486:  BRA    B48E
0B488:  BSF    F93.0
0B48A:  BTFSC  F81.0
0B48C:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0B48E:  BTFSC  35.0
0B490:  BRA    B4A6
.................... if (input(OOKK) == 0){  
0B492:  BSF    F93.1
0B494:  BTFSC  F81.1
0B496:  BRA    B4A6
.................... ++submenu; 
0B498:  INCF   x6D,F
.................... if (submenu == 4) submenu = 1; 
0B49A:  MOVF   x6D,W
0B49C:  SUBLW  04
0B49E:  BNZ   B4A4
0B4A0:  MOVLW  01
0B4A2:  MOVWF  x6D
.................... rebote = true; 
0B4A4:  BSF    35.0
.................... }//si ok 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0B4A6:  BTFSC  35.0
0B4A8:  BRA    B4C0
.................... if (input(CANCEL) == 0){  
0B4AA:  BSF    F93.0
0B4AC:  BTFSC  F81.0
0B4AE:  BRA    B4C0
.................... --submenu; 
0B4B0:  DECF   x6D,F
.................... if (submenu == 0){  
0B4B2:  MOVF   x6D,F
0B4B4:  BNZ   B4BE
.................... Menu = 52; 
0B4B6:  MOVLW  34
0B4B8:  MOVWF  28
.................... submenu = 100; 
0B4BA:  MOVLW  64
0B4BC:  MOVWF  x6D
.................... } 
.................... rebote = true; 
0B4BE:  BSF    35.0
.................... }//si ok 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0B4C0:  BTFSC  35.0
0B4C2:  BRA    B60E
.................... if (input(ARRIBA) == 0) { // apretamos arriba 
0B4C4:  BSF    F93.3
0B4C6:  BTFSC  F81.3
0B4C8:  BRA    B60E
....................  
....................    if (submenu == 1) { // elegir grupo 
0B4CA:  DECFSZ x6D,W
0B4CC:  BRA    B4D8
....................       --grupo; 
0B4CE:  DECF   x6E,F
....................       if (grupo == 0) grupo = 1; 
0B4D0:  MOVF   x6E,F
0B4D2:  BNZ   B4D8
0B4D4:  MOVLW  01
0B4D6:  MOVWF  x6E
....................    }  
....................     
....................    if (submenu == 2) { // hora de ON 
0B4D8:  MOVF   x6D,W
0B4DA:  SUBLW  02
0B4DC:  BNZ   B572
....................      --GOn[grupo]; 
0B4DE:  CLRF   03
0B4E0:  MOVF   x6E,W
0B4E2:  ADDLW  15
0B4E4:  MOVWF  FE9
0B4E6:  MOVLW  01
0B4E8:  ADDWFC 03,W
0B4EA:  MOVWF  FEA
0B4EC:  DECF   FEF,F
....................      if (GOn[grupo] > 49) GOn[grupo] = 49; 
0B4EE:  CLRF   03
0B4F0:  MOVF   x6E,W
0B4F2:  ADDLW  15
0B4F4:  MOVWF  FE9
0B4F6:  MOVLW  01
0B4F8:  ADDWFC 03,W
0B4FA:  MOVWF  FEA
0B4FC:  MOVF   FEF,W
0B4FE:  SUBLW  31
0B500:  BC    B514
0B502:  CLRF   03
0B504:  MOVF   x6E,W
0B506:  ADDLW  15
0B508:  MOVWF  FE9
0B50A:  MOVLW  01
0B50C:  ADDWFC 03,W
0B50E:  MOVWF  FEA
0B510:  MOVLW  31
0B512:  MOVWF  FEF
....................      write_eeprom(7+grupo,GOn[grupo]); 
0B514:  MOVLW  07
0B516:  ADDWF  x6E,W
0B518:  MOVWF  x6F
0B51A:  CLRF   03
0B51C:  MOVF   x6E,W
0B51E:  ADDLW  15
0B520:  MOVWF  FE9
0B522:  MOVLW  01
0B524:  ADDWFC 03,W
0B526:  MOVWF  FEA
0B528:  MOVFF  FEF,170
0B52C:  MOVF   FF2,W
0B52E:  MOVWF  00
0B530:  BCF    FF2.7
0B532:  CLRF   FAA
0B534:  MOVFF  16F,FA9
0B538:  MOVFF  170,FA8
0B53C:  BCF    FA6.6
0B53E:  BCF    FA6.7
0B540:  BSF    FA6.2
0B542:  MOVLB  F
0B544:  MOVLW  55
0B546:  MOVWF  FA7
0B548:  MOVLW  AA
0B54A:  MOVWF  FA7
0B54C:  BSF    FA6.1
0B54E:  BTFSC  FA6.1
0B550:  BRA    B54E
0B552:  BCF    FA6.2
0B554:  MOVF   00,W
0B556:  IORWF  FF2,F
0B558:  CLRF   19
0B55A:  BTFSC  FF2.7
0B55C:  BSF    19.7
0B55E:  BCF    FF2.7
....................      delay_ms(2); 
0B560:  MOVLW  02
0B562:  MOVLB  1
0B564:  MOVWF  xA8
0B566:  MOVLB  0
0B568:  CALL   1456
0B56C:  BTFSC  19.7
0B56E:  BSF    FF2.7
0B570:  MOVLB  1
....................    } 
....................     
....................    if (submenu == 3) { // hora de OFF 
0B572:  MOVF   x6D,W
0B574:  SUBLW  03
0B576:  BNZ   B60C
....................      --GOff[grupo]; 
0B578:  CLRF   03
0B57A:  MOVF   x6E,W
0B57C:  ADDLW  1A
0B57E:  MOVWF  FE9
0B580:  MOVLW  01
0B582:  ADDWFC 03,W
0B584:  MOVWF  FEA
0B586:  DECF   FEF,F
....................      if (GOff[grupo] > 49) GOff[grupo] = 49; 
0B588:  CLRF   03
0B58A:  MOVF   x6E,W
0B58C:  ADDLW  1A
0B58E:  MOVWF  FE9
0B590:  MOVLW  01
0B592:  ADDWFC 03,W
0B594:  MOVWF  FEA
0B596:  MOVF   FEF,W
0B598:  SUBLW  31
0B59A:  BC    B5AE
0B59C:  CLRF   03
0B59E:  MOVF   x6E,W
0B5A0:  ADDLW  1A
0B5A2:  MOVWF  FE9
0B5A4:  MOVLW  01
0B5A6:  ADDWFC 03,W
0B5A8:  MOVWF  FEA
0B5AA:  MOVLW  31
0B5AC:  MOVWF  FEF
....................      write_eeprom(11+grupo,GOff[grupo]); 
0B5AE:  MOVLW  0B
0B5B0:  ADDWF  x6E,W
0B5B2:  MOVWF  x6F
0B5B4:  CLRF   03
0B5B6:  MOVF   x6E,W
0B5B8:  ADDLW  1A
0B5BA:  MOVWF  FE9
0B5BC:  MOVLW  01
0B5BE:  ADDWFC 03,W
0B5C0:  MOVWF  FEA
0B5C2:  MOVFF  FEF,170
0B5C6:  MOVF   FF2,W
0B5C8:  MOVWF  00
0B5CA:  BCF    FF2.7
0B5CC:  CLRF   FAA
0B5CE:  MOVFF  16F,FA9
0B5D2:  MOVFF  170,FA8
0B5D6:  BCF    FA6.6
0B5D8:  BCF    FA6.7
0B5DA:  BSF    FA6.2
0B5DC:  MOVLB  F
0B5DE:  MOVLW  55
0B5E0:  MOVWF  FA7
0B5E2:  MOVLW  AA
0B5E4:  MOVWF  FA7
0B5E6:  BSF    FA6.1
0B5E8:  BTFSC  FA6.1
0B5EA:  BRA    B5E8
0B5EC:  BCF    FA6.2
0B5EE:  MOVF   00,W
0B5F0:  IORWF  FF2,F
0B5F2:  CLRF   19
0B5F4:  BTFSC  FF2.7
0B5F6:  BSF    19.7
0B5F8:  BCF    FF2.7
....................      delay_ms(2); 
0B5FA:  MOVLW  02
0B5FC:  MOVLB  1
0B5FE:  MOVWF  xA8
0B600:  MOVLB  0
0B602:  CALL   1456
0B606:  BTFSC  19.7
0B608:  BSF    FF2.7
0B60A:  MOVLB  1
....................    } 
.................... rebote = true; 
0B60C:  BSF    35.0
.................... } // si arriba 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0B60E:  BTFSC  35.0
0B610:  BRA    B75A
.................... if (input(ABAJO) == 0) { // apretamos arriba 
0B612:  BSF    F93.2
0B614:  BTFSC  F81.2
0B616:  BRA    B75A
....................  
....................    if (submenu == 1) { // elegir grupo 
0B618:  DECFSZ x6D,W
0B61A:  BRA    B628
....................       ++grupo; 
0B61C:  INCF   x6E,F
....................       if (grupo == 5) grupo = 4; 
0B61E:  MOVF   x6E,W
0B620:  SUBLW  05
0B622:  BNZ   B628
0B624:  MOVLW  04
0B626:  MOVWF  x6E
....................    }  
....................     
....................    if (submenu == 2) { // hora de ON 
0B628:  MOVF   x6D,W
0B62A:  SUBLW  02
0B62C:  BNZ   B6C0
....................      ++GOn[grupo]; 
0B62E:  CLRF   03
0B630:  MOVF   x6E,W
0B632:  ADDLW  15
0B634:  MOVWF  FE9
0B636:  MOVLW  01
0B638:  ADDWFC 03,W
0B63A:  MOVWF  FEA
0B63C:  INCF   FEF,F
....................      if (GOn[grupo] > 49) GOn[grupo] = 0; 
0B63E:  CLRF   03
0B640:  MOVF   x6E,W
0B642:  ADDLW  15
0B644:  MOVWF  FE9
0B646:  MOVLW  01
0B648:  ADDWFC 03,W
0B64A:  MOVWF  FEA
0B64C:  MOVF   FEF,W
0B64E:  SUBLW  31
0B650:  BC    B662
0B652:  CLRF   03
0B654:  MOVF   x6E,W
0B656:  ADDLW  15
0B658:  MOVWF  FE9
0B65A:  MOVLW  01
0B65C:  ADDWFC 03,W
0B65E:  MOVWF  FEA
0B660:  CLRF   FEF
....................      write_eeprom(7+grupo,GOn[grupo]); 
0B662:  MOVLW  07
0B664:  ADDWF  x6E,W
0B666:  MOVWF  x6F
0B668:  CLRF   03
0B66A:  MOVF   x6E,W
0B66C:  ADDLW  15
0B66E:  MOVWF  FE9
0B670:  MOVLW  01
0B672:  ADDWFC 03,W
0B674:  MOVWF  FEA
0B676:  MOVFF  FEF,170
0B67A:  MOVF   FF2,W
0B67C:  MOVWF  00
0B67E:  BCF    FF2.7
0B680:  CLRF   FAA
0B682:  MOVFF  16F,FA9
0B686:  MOVFF  170,FA8
0B68A:  BCF    FA6.6
0B68C:  BCF    FA6.7
0B68E:  BSF    FA6.2
0B690:  MOVLB  F
0B692:  MOVLW  55
0B694:  MOVWF  FA7
0B696:  MOVLW  AA
0B698:  MOVWF  FA7
0B69A:  BSF    FA6.1
0B69C:  BTFSC  FA6.1
0B69E:  BRA    B69C
0B6A0:  BCF    FA6.2
0B6A2:  MOVF   00,W
0B6A4:  IORWF  FF2,F
0B6A6:  CLRF   19
0B6A8:  BTFSC  FF2.7
0B6AA:  BSF    19.7
0B6AC:  BCF    FF2.7
....................      delay_ms(2); 
0B6AE:  MOVLW  02
0B6B0:  MOVLB  1
0B6B2:  MOVWF  xA8
0B6B4:  MOVLB  0
0B6B6:  CALL   1456
0B6BA:  BTFSC  19.7
0B6BC:  BSF    FF2.7
0B6BE:  MOVLB  1
....................    } 
....................     
....................    if (submenu == 3) { // hora de OFF 
0B6C0:  MOVF   x6D,W
0B6C2:  SUBLW  03
0B6C4:  BNZ   B758
....................      ++GOff[grupo]; 
0B6C6:  CLRF   03
0B6C8:  MOVF   x6E,W
0B6CA:  ADDLW  1A
0B6CC:  MOVWF  FE9
0B6CE:  MOVLW  01
0B6D0:  ADDWFC 03,W
0B6D2:  MOVWF  FEA
0B6D4:  INCF   FEF,F
....................      if (GOff[grupo] > 49) GOff[grupo] = 0; 
0B6D6:  CLRF   03
0B6D8:  MOVF   x6E,W
0B6DA:  ADDLW  1A
0B6DC:  MOVWF  FE9
0B6DE:  MOVLW  01
0B6E0:  ADDWFC 03,W
0B6E2:  MOVWF  FEA
0B6E4:  MOVF   FEF,W
0B6E6:  SUBLW  31
0B6E8:  BC    B6FA
0B6EA:  CLRF   03
0B6EC:  MOVF   x6E,W
0B6EE:  ADDLW  1A
0B6F0:  MOVWF  FE9
0B6F2:  MOVLW  01
0B6F4:  ADDWFC 03,W
0B6F6:  MOVWF  FEA
0B6F8:  CLRF   FEF
....................      write_eeprom(11+grupo,GOff[grupo]); 
0B6FA:  MOVLW  0B
0B6FC:  ADDWF  x6E,W
0B6FE:  MOVWF  x6F
0B700:  CLRF   03
0B702:  MOVF   x6E,W
0B704:  ADDLW  1A
0B706:  MOVWF  FE9
0B708:  MOVLW  01
0B70A:  ADDWFC 03,W
0B70C:  MOVWF  FEA
0B70E:  MOVFF  FEF,170
0B712:  MOVF   FF2,W
0B714:  MOVWF  00
0B716:  BCF    FF2.7
0B718:  CLRF   FAA
0B71A:  MOVFF  16F,FA9
0B71E:  MOVFF  170,FA8
0B722:  BCF    FA6.6
0B724:  BCF    FA6.7
0B726:  BSF    FA6.2
0B728:  MOVLB  F
0B72A:  MOVLW  55
0B72C:  MOVWF  FA7
0B72E:  MOVLW  AA
0B730:  MOVWF  FA7
0B732:  BSF    FA6.1
0B734:  BTFSC  FA6.1
0B736:  BRA    B734
0B738:  BCF    FA6.2
0B73A:  MOVF   00,W
0B73C:  IORWF  FF2,F
0B73E:  CLRF   19
0B740:  BTFSC  FF2.7
0B742:  BSF    19.7
0B744:  BCF    FF2.7
....................      delay_ms(2); 
0B746:  MOVLW  02
0B748:  MOVLB  1
0B74A:  MOVWF  xA8
0B74C:  MOVLB  0
0B74E:  CALL   1456
0B752:  BTFSC  19.7
0B754:  BSF    FF2.7
0B756:  MOVLB  1
....................    } 
.................... rebote = true; 
0B758:  BSF    35.0
0B75A:  CLRF   19
0B75C:  BTFSC  FF2.7
0B75E:  BSF    19.7
0B760:  BCF    FF2.7
.................... } // si abajo 
.................... }//rebote 
....................  
....................  
.................... /////////////////////// LCD /////////////////////// 
.................... lcd_gotoxy(1,1); 
0B762:  MOVLW  01
0B764:  MOVWF  xA0
0B766:  MOVWF  xA1
0B768:  MOVLB  0
0B76A:  CALL   156C
0B76E:  BTFSC  19.7
0B770:  BSF    FF2.7
.................... printf(lcd_putc, "=====  Horario ====="); 
0B772:  MOVLW  30
0B774:  MOVWF  FF6
0B776:  MOVLW  07
0B778:  MOVWF  FF7
0B77A:  CALL   3E86
0B77E:  CLRF   19
0B780:  BTFSC  FF2.7
0B782:  BSF    19.7
0B784:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0B786:  MOVLW  01
0B788:  MOVLB  1
0B78A:  MOVWF  xA0
0B78C:  MOVLW  02
0B78E:  MOVWF  xA1
0B790:  MOVLB  0
0B792:  CALL   156C
0B796:  BTFSC  19.7
0B798:  BSF    FF2.7
.................... if (submenu == 1) { // estamos en grupo 
0B79A:  MOVLB  1
0B79C:  DECFSZ x6D,W
0B79E:  BRA    B850
.................... if (grupo == 1){ // si grupo 1 
0B7A0:  DECFSZ x6E,W
0B7A2:  BRA    B7CA
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (1)  "); 
0B7A4:  BTFSS  49.0
0B7A6:  BRA    B7BA
0B7A8:  MOVLW  46
0B7AA:  MOVWF  FF6
0B7AC:  MOVLW  07
0B7AE:  MOVWF  FF7
0B7B0:  MOVLB  0
0B7B2:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B7B6:  BRA    B7C8
0B7B8:  MOVLB  1
0B7BA:  MOVLW  5C
0B7BC:  MOVWF  FF6
0B7BE:  MOVLW  07
0B7C0:  MOVWF  FF7
0B7C2:  MOVLB  0
0B7C4:  CALL   3E86
0B7C8:  MOVLB  1
.................... } // si el grupo es 1 
.................... if (grupo == 2){ // si grupo 2 
0B7CA:  MOVF   x6E,W
0B7CC:  SUBLW  02
0B7CE:  BNZ   B7F6
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (2)  "); 
0B7D0:  BTFSS  49.0
0B7D2:  BRA    B7E6
0B7D4:  MOVLW  72
0B7D6:  MOVWF  FF6
0B7D8:  MOVLW  07
0B7DA:  MOVWF  FF7
0B7DC:  MOVLB  0
0B7DE:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B7E2:  BRA    B7F4
0B7E4:  MOVLB  1
0B7E6:  MOVLW  88
0B7E8:  MOVWF  FF6
0B7EA:  MOVLW  07
0B7EC:  MOVWF  FF7
0B7EE:  MOVLB  0
0B7F0:  CALL   3E86
0B7F4:  MOVLB  1
.................... } // si el grupo es 2 
.................... if (grupo == 3){ // si grupo 3 
0B7F6:  MOVF   x6E,W
0B7F8:  SUBLW  03
0B7FA:  BNZ   B822
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (3)  "); 
0B7FC:  BTFSS  49.0
0B7FE:  BRA    B812
0B800:  MOVLW  9E
0B802:  MOVWF  FF6
0B804:  MOVLW  07
0B806:  MOVWF  FF7
0B808:  MOVLB  0
0B80A:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B80E:  BRA    B820
0B810:  MOVLB  1
0B812:  MOVLW  B4
0B814:  MOVWF  FF6
0B816:  MOVLW  07
0B818:  MOVWF  FF7
0B81A:  MOVLB  0
0B81C:  CALL   3E86
0B820:  MOVLB  1
.................... } // si el grupo es 3 
.................... if (grupo == 4){ // si grupo 4 
0B822:  MOVF   x6E,W
0B824:  SUBLW  04
0B826:  BNZ   B84E
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (4)  "); 
0B828:  BTFSS  49.0
0B82A:  BRA    B83E
0B82C:  MOVLW  CA
0B82E:  MOVWF  FF6
0B830:  MOVLW  07
0B832:  MOVWF  FF7
0B834:  MOVLB  0
0B836:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B83A:  BRA    B84C
0B83C:  MOVLB  1
0B83E:  MOVLW  E0
0B840:  MOVWF  FF6
0B842:  MOVLW  07
0B844:  MOVWF  FF7
0B846:  MOVLB  0
0B848:  CALL   3E86
0B84C:  MOVLB  1
.................... } // si el grupo es 4 
.................... } // grupo 
.................... else { 
0B84E:  BRA    B8A6
.................... if (grupo == 1) printf(lcd_putc, "  Grupo:  AUTO (1)  "); 
0B850:  DECFSZ x6E,W
0B852:  BRA    B864
0B854:  MOVLW  F6
0B856:  MOVWF  FF6
0B858:  MOVLW  07
0B85A:  MOVWF  FF7
0B85C:  MOVLB  0
0B85E:  CALL   3E86
0B862:  MOVLB  1
.................... if (grupo == 2) printf(lcd_putc, "  Grupo:  AUTO (2)  "); 
0B864:  MOVF   x6E,W
0B866:  SUBLW  02
0B868:  BNZ   B87A
0B86A:  MOVLW  0C
0B86C:  MOVWF  FF6
0B86E:  MOVLW  08
0B870:  MOVWF  FF7
0B872:  MOVLB  0
0B874:  CALL   3E86
0B878:  MOVLB  1
.................... if (grupo == 3) printf(lcd_putc, "  Grupo:  AUTO (3)  "); 
0B87A:  MOVF   x6E,W
0B87C:  SUBLW  03
0B87E:  BNZ   B890
0B880:  MOVLW  22
0B882:  MOVWF  FF6
0B884:  MOVLW  08
0B886:  MOVWF  FF7
0B888:  MOVLB  0
0B88A:  CALL   3E86
0B88E:  MOVLB  1
.................... if (grupo == 4) printf(lcd_putc, "  Grupo:  AUTO (4)  "); 
0B890:  MOVF   x6E,W
0B892:  SUBLW  04
0B894:  BNZ   B8A6
0B896:  MOVLW  38
0B898:  MOVWF  FF6
0B89A:  MOVLW  08
0B89C:  MOVWF  FF7
0B89E:  MOVLB  0
0B8A0:  CALL   3E86
0B8A4:  MOVLB  1
0B8A6:  CLRF   19
0B8A8:  BTFSC  FF2.7
0B8AA:  BSF    19.7
0B8AC:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(1,3); 
0B8AE:  MOVLW  01
0B8B0:  MOVWF  xA0
0B8B2:  MOVLW  03
0B8B4:  MOVWF  xA1
0B8B6:  MOVLB  0
0B8B8:  CALL   156C
0B8BC:  BTFSC  19.7
0B8BE:  BSF    FF2.7
.................... if (submenu == 2) { // Configurando el horario de encendido 
0B8C0:  MOVLB  1
0B8C2:  MOVF   x6D,W
0B8C4:  SUBLW  02
0B8C6:  BTFSS  FD8.2
0B8C8:  BRA    B9CC
.................... if (bit_test(tiempo1,0)) { 
0B8CA:  BTFSS  49.0
0B8CC:  BRA    B9BA
.................... if (GOn[grupo] == 48) printf(lcd_putc, " Encendido: Fotocel "); 
0B8CE:  CLRF   03
0B8D0:  MOVF   x6E,W
0B8D2:  ADDLW  15
0B8D4:  MOVWF  FE9
0B8D6:  MOVLW  01
0B8D8:  ADDWFC 03,W
0B8DA:  MOVWF  FEA
0B8DC:  MOVF   FEF,W
0B8DE:  SUBLW  30
0B8E0:  BNZ   B8F2
0B8E2:  MOVLW  4E
0B8E4:  MOVWF  FF6
0B8E6:  MOVLW  08
0B8E8:  MOVWF  FF7
0B8EA:  MOVLB  0
0B8EC:  CALL   3E86
0B8F0:  MOVLB  1
.................... if (GOn[grupo] == 49) printf(lcd_putc, " Encendido: ---     "); 
0B8F2:  CLRF   03
0B8F4:  MOVF   x6E,W
0B8F6:  ADDLW  15
0B8F8:  MOVWF  FE9
0B8FA:  MOVLW  01
0B8FC:  ADDWFC 03,W
0B8FE:  MOVWF  FEA
0B900:  MOVF   FEF,W
0B902:  SUBLW  31
0B904:  BNZ   B916
0B906:  MOVLW  64
0B908:  MOVWF  FF6
0B90A:  MOVLW  08
0B90C:  MOVWF  FF7
0B90E:  MOVLB  0
0B910:  CALL   3E86
0B914:  MOVLB  1
.................... if ((GOn[grupo] >= 0) && (GOn[grupo] <= 47)) printf(lcd_putc, " Encendido: %02u:%02uhs   ",(GOn[grupo]/2),(GOn[grupo]%2)*30); 
0B916:  CLRF   03
0B918:  MOVF   x6E,W
0B91A:  ADDLW  15
0B91C:  MOVWF  FE9
0B91E:  MOVLW  01
0B920:  ADDWFC 03,W
0B922:  MOVWF  FEA
0B924:  CLRF   03
0B926:  MOVF   x6E,W
0B928:  ADDLW  15
0B92A:  MOVWF  FE9
0B92C:  MOVLW  01
0B92E:  ADDWFC 03,W
0B930:  MOVWF  FEA
0B932:  MOVF   FEF,W
0B934:  SUBLW  2F
0B936:  BNC   B9B8
0B938:  CLRF   03
0B93A:  MOVF   x6E,W
0B93C:  ADDLW  15
0B93E:  MOVWF  FE9
0B940:  MOVLW  01
0B942:  ADDWFC 03,W
0B944:  MOVWF  FEA
0B946:  BCF    FD8.0
0B948:  RRCF   FEF,W
0B94A:  MOVWF  x6F
0B94C:  CLRF   03
0B94E:  MOVF   x6E,W
0B950:  ADDLW  15
0B952:  MOVWF  FE9
0B954:  MOVLW  01
0B956:  ADDWFC 03,W
0B958:  MOVWF  FEA
0B95A:  MOVF   FEF,W
0B95C:  ANDLW  01
0B95E:  MULLW  1E
0B960:  MOVFF  FF3,170
0B964:  MOVLW  7A
0B966:  MOVWF  FF6
0B968:  MOVLW  08
0B96A:  MOVWF  FF7
0B96C:  MOVLW  0C
0B96E:  MOVWF  x90
0B970:  MOVLB  0
0B972:  CALL   44F0
0B976:  MOVFF  16F,190
0B97A:  MOVLW  01
0B97C:  MOVLB  1
0B97E:  MOVWF  x91
0B980:  MOVLB  0
0B982:  CALL   46F0
0B986:  MOVLW  3A
0B988:  MOVLB  1
0B98A:  MOVWF  x93
0B98C:  MOVLB  0
0B98E:  CALL   3DE6
0B992:  MOVFF  170,190
0B996:  MOVLW  01
0B998:  MOVLB  1
0B99A:  MOVWF  x91
0B99C:  MOVLB  0
0B99E:  CALL   46F0
0B9A2:  MOVLW  8F
0B9A4:  MOVWF  FF6
0B9A6:  MOVLW  08
0B9A8:  MOVWF  FF7
0B9AA:  MOVLW  05
0B9AC:  MOVLB  1
0B9AE:  MOVWF  x90
0B9B0:  MOVLB  0
0B9B2:  CALL   44F0
0B9B6:  MOVLB  1
.................... } else printf(lcd_putc, " Encendido:         "); 
0B9B8:  BRA    B9CA
0B9BA:  MOVLW  96
0B9BC:  MOVWF  FF6
0B9BE:  MOVLW  08
0B9C0:  MOVWF  FF7
0B9C2:  MOVLB  0
0B9C4:  CALL   3E86
0B9C8:  MOVLB  1
.................... } else { 
0B9CA:  BRA    BAB6
.................... if (GOn[grupo] == 48) printf(lcd_putc, " Encendido: Fotocel "); 
0B9CC:  CLRF   03
0B9CE:  MOVF   x6E,W
0B9D0:  ADDLW  15
0B9D2:  MOVWF  FE9
0B9D4:  MOVLW  01
0B9D6:  ADDWFC 03,W
0B9D8:  MOVWF  FEA
0B9DA:  MOVF   FEF,W
0B9DC:  SUBLW  30
0B9DE:  BNZ   B9F0
0B9E0:  MOVLW  AC
0B9E2:  MOVWF  FF6
0B9E4:  MOVLW  08
0B9E6:  MOVWF  FF7
0B9E8:  MOVLB  0
0B9EA:  CALL   3E86
0B9EE:  MOVLB  1
.................... if (GOn[grupo] == 49) printf(lcd_putc, " Encendido: ---     "); 
0B9F0:  CLRF   03
0B9F2:  MOVF   x6E,W
0B9F4:  ADDLW  15
0B9F6:  MOVWF  FE9
0B9F8:  MOVLW  01
0B9FA:  ADDWFC 03,W
0B9FC:  MOVWF  FEA
0B9FE:  MOVF   FEF,W
0BA00:  SUBLW  31
0BA02:  BNZ   BA14
0BA04:  MOVLW  C2
0BA06:  MOVWF  FF6
0BA08:  MOVLW  08
0BA0A:  MOVWF  FF7
0BA0C:  MOVLB  0
0BA0E:  CALL   3E86
0BA12:  MOVLB  1
.................... if ((GOn[grupo] >= 0) && (GOn[grupo] <= 47)) printf(lcd_putc, " Encendido: %02u:%02uhs   ",(GOn[grupo]/2),(GOn[grupo]%2)*30); 
0BA14:  CLRF   03
0BA16:  MOVF   x6E,W
0BA18:  ADDLW  15
0BA1A:  MOVWF  FE9
0BA1C:  MOVLW  01
0BA1E:  ADDWFC 03,W
0BA20:  MOVWF  FEA
0BA22:  CLRF   03
0BA24:  MOVF   x6E,W
0BA26:  ADDLW  15
0BA28:  MOVWF  FE9
0BA2A:  MOVLW  01
0BA2C:  ADDWFC 03,W
0BA2E:  MOVWF  FEA
0BA30:  MOVF   FEF,W
0BA32:  SUBLW  2F
0BA34:  BNC   BAB6
0BA36:  CLRF   03
0BA38:  MOVF   x6E,W
0BA3A:  ADDLW  15
0BA3C:  MOVWF  FE9
0BA3E:  MOVLW  01
0BA40:  ADDWFC 03,W
0BA42:  MOVWF  FEA
0BA44:  BCF    FD8.0
0BA46:  RRCF   FEF,W
0BA48:  MOVWF  x6F
0BA4A:  CLRF   03
0BA4C:  MOVF   x6E,W
0BA4E:  ADDLW  15
0BA50:  MOVWF  FE9
0BA52:  MOVLW  01
0BA54:  ADDWFC 03,W
0BA56:  MOVWF  FEA
0BA58:  MOVF   FEF,W
0BA5A:  ANDLW  01
0BA5C:  MULLW  1E
0BA5E:  MOVFF  FF3,170
0BA62:  MOVLW  D8
0BA64:  MOVWF  FF6
0BA66:  MOVLW  08
0BA68:  MOVWF  FF7
0BA6A:  MOVLW  0C
0BA6C:  MOVWF  x90
0BA6E:  MOVLB  0
0BA70:  CALL   44F0
0BA74:  MOVFF  16F,190
0BA78:  MOVLW  01
0BA7A:  MOVLB  1
0BA7C:  MOVWF  x91
0BA7E:  MOVLB  0
0BA80:  CALL   46F0
0BA84:  MOVLW  3A
0BA86:  MOVLB  1
0BA88:  MOVWF  x93
0BA8A:  MOVLB  0
0BA8C:  CALL   3DE6
0BA90:  MOVFF  170,190
0BA94:  MOVLW  01
0BA96:  MOVLB  1
0BA98:  MOVWF  x91
0BA9A:  MOVLB  0
0BA9C:  CALL   46F0
0BAA0:  MOVLW  ED
0BAA2:  MOVWF  FF6
0BAA4:  MOVLW  08
0BAA6:  MOVWF  FF7
0BAA8:  MOVLW  05
0BAAA:  MOVLB  1
0BAAC:  MOVWF  x90
0BAAE:  MOVLB  0
0BAB0:  CALL   44F0
0BAB4:  MOVLB  1
0BAB6:  CLRF   19
0BAB8:  BTFSC  FF2.7
0BABA:  BSF    19.7
0BABC:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(1,4); 
0BABE:  MOVLW  01
0BAC0:  MOVWF  xA0
0BAC2:  MOVLW  04
0BAC4:  MOVWF  xA1
0BAC6:  MOVLB  0
0BAC8:  CALL   156C
0BACC:  BTFSC  19.7
0BACE:  BSF    FF2.7
.................... if (submenu == 3) { // Configurando el horario de apagado 
0BAD0:  MOVLB  1
0BAD2:  MOVF   x6D,W
0BAD4:  SUBLW  03
0BAD6:  BTFSS  FD8.2
0BAD8:  BRA    BBDC
.................... if (bit_test(tiempo1,0)) { 
0BADA:  BTFSS  49.0
0BADC:  BRA    BBCA
.................... if (GOff[grupo] == 48) printf(lcd_putc, " Apagado: Fotocelda "); 
0BADE:  CLRF   03
0BAE0:  MOVF   x6E,W
0BAE2:  ADDLW  1A
0BAE4:  MOVWF  FE9
0BAE6:  MOVLW  01
0BAE8:  ADDWFC 03,W
0BAEA:  MOVWF  FEA
0BAEC:  MOVF   FEF,W
0BAEE:  SUBLW  30
0BAF0:  BNZ   BB02
0BAF2:  MOVLW  F4
0BAF4:  MOVWF  FF6
0BAF6:  MOVLW  08
0BAF8:  MOVWF  FF7
0BAFA:  MOVLB  0
0BAFC:  CALL   3E86
0BB00:  MOVLB  1
.................... if (GOff[grupo] == 49) printf(lcd_putc, " Apagado: ---       "); 
0BB02:  CLRF   03
0BB04:  MOVF   x6E,W
0BB06:  ADDLW  1A
0BB08:  MOVWF  FE9
0BB0A:  MOVLW  01
0BB0C:  ADDWFC 03,W
0BB0E:  MOVWF  FEA
0BB10:  MOVF   FEF,W
0BB12:  SUBLW  31
0BB14:  BNZ   BB26
0BB16:  MOVLW  0A
0BB18:  MOVWF  FF6
0BB1A:  MOVLW  09
0BB1C:  MOVWF  FF7
0BB1E:  MOVLB  0
0BB20:  CALL   3E86
0BB24:  MOVLB  1
.................... if ((GOff[grupo] >= 0) && (GOff[grupo] <= 47)) printf(lcd_putc, " Apagado: %02u:%02uhs   ",(GOff[grupo]/2),(GOff[grupo]%2)*30); 
0BB26:  CLRF   03
0BB28:  MOVF   x6E,W
0BB2A:  ADDLW  1A
0BB2C:  MOVWF  FE9
0BB2E:  MOVLW  01
0BB30:  ADDWFC 03,W
0BB32:  MOVWF  FEA
0BB34:  CLRF   03
0BB36:  MOVF   x6E,W
0BB38:  ADDLW  1A
0BB3A:  MOVWF  FE9
0BB3C:  MOVLW  01
0BB3E:  ADDWFC 03,W
0BB40:  MOVWF  FEA
0BB42:  MOVF   FEF,W
0BB44:  SUBLW  2F
0BB46:  BNC   BBC8
0BB48:  CLRF   03
0BB4A:  MOVF   x6E,W
0BB4C:  ADDLW  1A
0BB4E:  MOVWF  FE9
0BB50:  MOVLW  01
0BB52:  ADDWFC 03,W
0BB54:  MOVWF  FEA
0BB56:  BCF    FD8.0
0BB58:  RRCF   FEF,W
0BB5A:  MOVWF  x6F
0BB5C:  CLRF   03
0BB5E:  MOVF   x6E,W
0BB60:  ADDLW  1A
0BB62:  MOVWF  FE9
0BB64:  MOVLW  01
0BB66:  ADDWFC 03,W
0BB68:  MOVWF  FEA
0BB6A:  MOVF   FEF,W
0BB6C:  ANDLW  01
0BB6E:  MULLW  1E
0BB70:  MOVFF  FF3,170
0BB74:  MOVLW  20
0BB76:  MOVWF  FF6
0BB78:  MOVLW  09
0BB7A:  MOVWF  FF7
0BB7C:  MOVLW  0A
0BB7E:  MOVWF  x90
0BB80:  MOVLB  0
0BB82:  CALL   44F0
0BB86:  MOVFF  16F,190
0BB8A:  MOVLW  01
0BB8C:  MOVLB  1
0BB8E:  MOVWF  x91
0BB90:  MOVLB  0
0BB92:  CALL   46F0
0BB96:  MOVLW  3A
0BB98:  MOVLB  1
0BB9A:  MOVWF  x93
0BB9C:  MOVLB  0
0BB9E:  CALL   3DE6
0BBA2:  MOVFF  170,190
0BBA6:  MOVLW  01
0BBA8:  MOVLB  1
0BBAA:  MOVWF  x91
0BBAC:  MOVLB  0
0BBAE:  CALL   46F0
0BBB2:  MOVLW  33
0BBB4:  MOVWF  FF6
0BBB6:  MOVLW  09
0BBB8:  MOVWF  FF7
0BBBA:  MOVLW  05
0BBBC:  MOVLB  1
0BBBE:  MOVWF  x90
0BBC0:  MOVLB  0
0BBC2:  CALL   44F0
0BBC6:  MOVLB  1
.................... } else printf(lcd_putc, " Apagado:           "); 
0BBC8:  BRA    BBDA
0BBCA:  MOVLW  3A
0BBCC:  MOVWF  FF6
0BBCE:  MOVLW  09
0BBD0:  MOVWF  FF7
0BBD2:  MOVLB  0
0BBD4:  CALL   3E86
0BBD8:  MOVLB  1
.................... } else { 
0BBDA:  BRA    BCC6
.................... if (GOff[grupo] == 48) printf(lcd_putc, " Apagado: Fotocelda "); 
0BBDC:  CLRF   03
0BBDE:  MOVF   x6E,W
0BBE0:  ADDLW  1A
0BBE2:  MOVWF  FE9
0BBE4:  MOVLW  01
0BBE6:  ADDWFC 03,W
0BBE8:  MOVWF  FEA
0BBEA:  MOVF   FEF,W
0BBEC:  SUBLW  30
0BBEE:  BNZ   BC00
0BBF0:  MOVLW  50
0BBF2:  MOVWF  FF6
0BBF4:  MOVLW  09
0BBF6:  MOVWF  FF7
0BBF8:  MOVLB  0
0BBFA:  CALL   3E86
0BBFE:  MOVLB  1
.................... if (GOff[grupo] == 49) printf(lcd_putc, " Apagado: ---       "); 
0BC00:  CLRF   03
0BC02:  MOVF   x6E,W
0BC04:  ADDLW  1A
0BC06:  MOVWF  FE9
0BC08:  MOVLW  01
0BC0A:  ADDWFC 03,W
0BC0C:  MOVWF  FEA
0BC0E:  MOVF   FEF,W
0BC10:  SUBLW  31
0BC12:  BNZ   BC24
0BC14:  MOVLW  66
0BC16:  MOVWF  FF6
0BC18:  MOVLW  09
0BC1A:  MOVWF  FF7
0BC1C:  MOVLB  0
0BC1E:  CALL   3E86
0BC22:  MOVLB  1
.................... if ((GOff[grupo] >= 0) && (GOff[grupo] <= 47)) printf(lcd_putc, " Apagado: %02u:%02uhs   ",(GOff[grupo]/2),(GOff[grupo]%2)*30); 
0BC24:  CLRF   03
0BC26:  MOVF   x6E,W
0BC28:  ADDLW  1A
0BC2A:  MOVWF  FE9
0BC2C:  MOVLW  01
0BC2E:  ADDWFC 03,W
0BC30:  MOVWF  FEA
0BC32:  CLRF   03
0BC34:  MOVF   x6E,W
0BC36:  ADDLW  1A
0BC38:  MOVWF  FE9
0BC3A:  MOVLW  01
0BC3C:  ADDWFC 03,W
0BC3E:  MOVWF  FEA
0BC40:  MOVF   FEF,W
0BC42:  SUBLW  2F
0BC44:  BNC   BCC6
0BC46:  CLRF   03
0BC48:  MOVF   x6E,W
0BC4A:  ADDLW  1A
0BC4C:  MOVWF  FE9
0BC4E:  MOVLW  01
0BC50:  ADDWFC 03,W
0BC52:  MOVWF  FEA
0BC54:  BCF    FD8.0
0BC56:  RRCF   FEF,W
0BC58:  MOVWF  x6F
0BC5A:  CLRF   03
0BC5C:  MOVF   x6E,W
0BC5E:  ADDLW  1A
0BC60:  MOVWF  FE9
0BC62:  MOVLW  01
0BC64:  ADDWFC 03,W
0BC66:  MOVWF  FEA
0BC68:  MOVF   FEF,W
0BC6A:  ANDLW  01
0BC6C:  MULLW  1E
0BC6E:  MOVFF  FF3,170
0BC72:  MOVLW  7C
0BC74:  MOVWF  FF6
0BC76:  MOVLW  09
0BC78:  MOVWF  FF7
0BC7A:  MOVLW  0A
0BC7C:  MOVWF  x90
0BC7E:  MOVLB  0
0BC80:  CALL   44F0
0BC84:  MOVFF  16F,190
0BC88:  MOVLW  01
0BC8A:  MOVLB  1
0BC8C:  MOVWF  x91
0BC8E:  MOVLB  0
0BC90:  CALL   46F0
0BC94:  MOVLW  3A
0BC96:  MOVLB  1
0BC98:  MOVWF  x93
0BC9A:  MOVLB  0
0BC9C:  CALL   3DE6
0BCA0:  MOVFF  170,190
0BCA4:  MOVLW  01
0BCA6:  MOVLB  1
0BCA8:  MOVWF  x91
0BCAA:  MOVLB  0
0BCAC:  CALL   46F0
0BCB0:  MOVLW  8F
0BCB2:  MOVWF  FF6
0BCB4:  MOVLW  09
0BCB6:  MOVWF  FF7
0BCB8:  MOVLW  05
0BCBA:  MOVLB  1
0BCBC:  MOVWF  x90
0BCBE:  MOVLB  0
0BCC0:  CALL   44F0
0BCC4:  MOVLB  1
.................... } 
.................... restart_wdt(); 
0BCC6:  CLRWDT
.................... } // while 
0BCC8:  GOTO   B46A
.................... } // fn 
0BCCC:  MOVLB  0
0BCCE:  GOTO   E578 (RETURN)
....................  
....................  
.................... void ADias(){ 
....................  
.................... LIMPIARLCD; 
*
0A3C4:  MOVLW  96
0A3C6:  MOVWF  FF6
0A3C8:  MOVLW  09
0A3CA:  MOVWF  FF7
0A3CC:  CALL   3E86
.................... char Lun[4]; 
.................... char Mar[4]; 
.................... char Mie[5]; 
.................... char Jue[4]; 
.................... char Vie[4]; 
.................... char Sab[4]; 
.................... char Dom[4]; 
....................  
.................... int submenu = 0; 
.................... int grupo = 1; 
0A3D0:  MOVLB  1
0A3D2:  CLRF   x8A
0A3D4:  MOVLW  01
0A3D6:  MOVWF  x8B
....................  
.................... while (submenu < 9){ // hasta llenar todas las luces 
0A3D8:  MOVF   x8A,W
0A3DA:  SUBLW  08
0A3DC:  BTFSS  FD8.0
0A3DE:  GOTO   B428
....................  
.................... if (grupo == 1) { 
0A3E2:  DECFSZ x8B,W
0A3E4:  BRA    A5B4
.................... if (bit_test(Gdias[1],1)){ // Lunes grupo 1 verdadero 
0A3E6:  BTFSS  x20.1
0A3E8:  BRA    A40A
.................... Lun = "Lun"; 
0A3EA:  MOVLW  01
0A3EC:  MOVWF  FEA
0A3EE:  MOVLW  6D
0A3F0:  MOVWF  FE9
0A3F2:  MOVLW  00
0A3F4:  MOVLB  0
0A3F6:  CALL   01B6
0A3FA:  TBLRD*-
0A3FC:  TBLRD*+
0A3FE:  MOVF   FF5,W
0A400:  MOVWF  FEE
0A402:  IORLW  00
0A404:  BNZ   A3FC
.................... } else { // Lunes es falso 
0A406:  BRA    A426
0A408:  MOVLB  1
.................... Lun = " X "; 
0A40A:  MOVLW  01
0A40C:  MOVWF  FEA
0A40E:  MOVLW  6D
0A410:  MOVWF  FE9
0A412:  MOVLW  00
0A414:  MOVLB  0
0A416:  CALL   01CA
0A41A:  TBLRD*-
0A41C:  TBLRD*+
0A41E:  MOVF   FF5,W
0A420:  MOVWF  FEE
0A422:  IORLW  00
0A424:  BNZ   A41C
.................... } // Lunes falso 
.................... if (bit_test(Gdias[1],2)){ // Martes grupo 1 verdadero 
0A426:  MOVLB  1
0A428:  BTFSS  x20.2
0A42A:  BRA    A44C
.................... Mar = "Mar"; 
0A42C:  MOVLW  01
0A42E:  MOVWF  FEA
0A430:  MOVLW  71
0A432:  MOVWF  FE9
0A434:  MOVLW  00
0A436:  MOVLB  0
0A438:  CALL   01DE
0A43C:  TBLRD*-
0A43E:  TBLRD*+
0A440:  MOVF   FF5,W
0A442:  MOVWF  FEE
0A444:  IORLW  00
0A446:  BNZ   A43E
.................... } else { // Lunes es falso 
0A448:  BRA    A468
0A44A:  MOVLB  1
.................... Mar = " X "; 
0A44C:  MOVLW  01
0A44E:  MOVWF  FEA
0A450:  MOVLW  71
0A452:  MOVWF  FE9
0A454:  MOVLW  00
0A456:  MOVLB  0
0A458:  CALL   01CA
0A45C:  TBLRD*-
0A45E:  TBLRD*+
0A460:  MOVF   FF5,W
0A462:  MOVWF  FEE
0A464:  IORLW  00
0A466:  BNZ   A45E
.................... } // Lunes falso 
.................... if (bit_test(Gdias[1],3)){ // Miercoles grupo 1 verdadero 
0A468:  MOVLB  1
0A46A:  BTFSS  x20.3
0A46C:  BRA    A48E
.................... Mie = "Mier"; 
0A46E:  MOVLW  01
0A470:  MOVWF  FEA
0A472:  MOVLW  75
0A474:  MOVWF  FE9
0A476:  MOVLW  00
0A478:  MOVLB  0
0A47A:  CALL   01F2
0A47E:  TBLRD*-
0A480:  TBLRD*+
0A482:  MOVF   FF5,W
0A484:  MOVWF  FEE
0A486:  IORLW  00
0A488:  BNZ   A480
.................... } else { // Lunes es falso 
0A48A:  BRA    A4AA
0A48C:  MOVLB  1
.................... Mie = " X  "; 
0A48E:  MOVLW  01
0A490:  MOVWF  FEA
0A492:  MOVLW  75
0A494:  MOVWF  FE9
0A496:  MOVLW  00
0A498:  MOVLB  0
0A49A:  CALL   0208
0A49E:  TBLRD*-
0A4A0:  TBLRD*+
0A4A2:  MOVF   FF5,W
0A4A4:  MOVWF  FEE
0A4A6:  IORLW  00
0A4A8:  BNZ   A4A0
.................... } // Lunes falso 
.................... if (bit_test(Gdias[1],4)){ // Jueves grupo 1 verdadero 
0A4AA:  MOVLB  1
0A4AC:  BTFSS  x20.4
0A4AE:  BRA    A4D0
.................... Jue = "Jue"; 
0A4B0:  MOVLW  01
0A4B2:  MOVWF  FEA
0A4B4:  MOVLW  7A
0A4B6:  MOVWF  FE9
0A4B8:  MOVLW  00
0A4BA:  MOVLB  0
0A4BC:  CALL   021E
0A4C0:  TBLRD*-
0A4C2:  TBLRD*+
0A4C4:  MOVF   FF5,W
0A4C6:  MOVWF  FEE
0A4C8:  IORLW  00
0A4CA:  BNZ   A4C2
.................... } else { // Lunes es falso 
0A4CC:  BRA    A4EC
0A4CE:  MOVLB  1
.................... Jue = " X "; 
0A4D0:  MOVLW  01
0A4D2:  MOVWF  FEA
0A4D4:  MOVLW  7A
0A4D6:  MOVWF  FE9
0A4D8:  MOVLW  00
0A4DA:  MOVLB  0
0A4DC:  CALL   01CA
0A4E0:  TBLRD*-
0A4E2:  TBLRD*+
0A4E4:  MOVF   FF5,W
0A4E6:  MOVWF  FEE
0A4E8:  IORLW  00
0A4EA:  BNZ   A4E2
.................... } // Lunes falso 
.................... if (bit_test(Gdias[1],5)){ // Viernes grupo 1 verdadero 
0A4EC:  MOVLB  1
0A4EE:  BTFSS  x20.5
0A4F0:  BRA    A512
.................... Vie = "Vie"; 
0A4F2:  MOVLW  01
0A4F4:  MOVWF  FEA
0A4F6:  MOVLW  7E
0A4F8:  MOVWF  FE9
0A4FA:  MOVLW  00
0A4FC:  MOVLB  0
0A4FE:  CALL   0232
0A502:  TBLRD*-
0A504:  TBLRD*+
0A506:  MOVF   FF5,W
0A508:  MOVWF  FEE
0A50A:  IORLW  00
0A50C:  BNZ   A504
.................... } else { // Lunes es falso 
0A50E:  BRA    A52E
0A510:  MOVLB  1
.................... Vie = " X "; 
0A512:  MOVLW  01
0A514:  MOVWF  FEA
0A516:  MOVLW  7E
0A518:  MOVWF  FE9
0A51A:  MOVLW  00
0A51C:  MOVLB  0
0A51E:  CALL   01CA
0A522:  TBLRD*-
0A524:  TBLRD*+
0A526:  MOVF   FF5,W
0A528:  MOVWF  FEE
0A52A:  IORLW  00
0A52C:  BNZ   A524
.................... } // Lunes falso 
.................... if (bit_test(Gdias[1],6)){ // Sabado grupo 1 verdadero 
0A52E:  MOVLB  1
0A530:  BTFSS  x20.6
0A532:  BRA    A554
.................... Sab = "Sab"; 
0A534:  MOVLW  01
0A536:  MOVWF  FEA
0A538:  MOVLW  82
0A53A:  MOVWF  FE9
0A53C:  MOVLW  00
0A53E:  MOVLB  0
0A540:  CALL   0246
0A544:  TBLRD*-
0A546:  TBLRD*+
0A548:  MOVF   FF5,W
0A54A:  MOVWF  FEE
0A54C:  IORLW  00
0A54E:  BNZ   A546
.................... } else { // Lunes es falso 
0A550:  BRA    A570
0A552:  MOVLB  1
.................... Sab = " X "; 
0A554:  MOVLW  01
0A556:  MOVWF  FEA
0A558:  MOVLW  82
0A55A:  MOVWF  FE9
0A55C:  MOVLW  00
0A55E:  MOVLB  0
0A560:  CALL   01CA
0A564:  TBLRD*-
0A566:  TBLRD*+
0A568:  MOVF   FF5,W
0A56A:  MOVWF  FEE
0A56C:  IORLW  00
0A56E:  BNZ   A566
.................... } // Lunes falso 
.................... if (bit_test(Gdias[1],7)){ // Domingo grupo 1 verdadero 
0A570:  MOVLB  1
0A572:  BTFSS  x20.7
0A574:  BRA    A596
.................... Dom = "Dom"; 
0A576:  MOVLW  01
0A578:  MOVWF  FEA
0A57A:  MOVLW  86
0A57C:  MOVWF  FE9
0A57E:  MOVLW  00
0A580:  MOVLB  0
0A582:  CALL   025A
0A586:  TBLRD*-
0A588:  TBLRD*+
0A58A:  MOVF   FF5,W
0A58C:  MOVWF  FEE
0A58E:  IORLW  00
0A590:  BNZ   A588
.................... } else { // Lunes es falso 
0A592:  BRA    A5B2
0A594:  MOVLB  1
.................... Dom = " X "; 
0A596:  MOVLW  01
0A598:  MOVWF  FEA
0A59A:  MOVLW  86
0A59C:  MOVWF  FE9
0A59E:  MOVLW  00
0A5A0:  MOVLB  0
0A5A2:  CALL   01CA
0A5A6:  TBLRD*-
0A5A8:  TBLRD*+
0A5AA:  MOVF   FF5,W
0A5AC:  MOVWF  FEE
0A5AE:  IORLW  00
0A5B0:  BNZ   A5A8
0A5B2:  MOVLB  1
.................... } // Lunes falso 
.................... } // grupo es 1 
....................  
.................... if (grupo == 2) { 
0A5B4:  MOVF   x8B,W
0A5B6:  SUBLW  02
0A5B8:  BTFSS  FD8.2
0A5BA:  BRA    A78A
.................... if (bit_test(Gdias[2],1)){ // Lunes grupo 1 verdadero 
0A5BC:  BTFSS  x21.1
0A5BE:  BRA    A5E0
.................... Lun = "Lun"; 
0A5C0:  MOVLW  01
0A5C2:  MOVWF  FEA
0A5C4:  MOVLW  6D
0A5C6:  MOVWF  FE9
0A5C8:  MOVLW  00
0A5CA:  MOVLB  0
0A5CC:  CALL   01B6
0A5D0:  TBLRD*-
0A5D2:  TBLRD*+
0A5D4:  MOVF   FF5,W
0A5D6:  MOVWF  FEE
0A5D8:  IORLW  00
0A5DA:  BNZ   A5D2
.................... } else { // Lunes es falso 
0A5DC:  BRA    A5FC
0A5DE:  MOVLB  1
.................... Lun = " X "; 
0A5E0:  MOVLW  01
0A5E2:  MOVWF  FEA
0A5E4:  MOVLW  6D
0A5E6:  MOVWF  FE9
0A5E8:  MOVLW  00
0A5EA:  MOVLB  0
0A5EC:  CALL   01CA
0A5F0:  TBLRD*-
0A5F2:  TBLRD*+
0A5F4:  MOVF   FF5,W
0A5F6:  MOVWF  FEE
0A5F8:  IORLW  00
0A5FA:  BNZ   A5F2
.................... } // Lunes falso 
.................... if (bit_test(Gdias[2],2)){ // Martes grupo 1 verdadero 
0A5FC:  MOVLB  1
0A5FE:  BTFSS  x21.2
0A600:  BRA    A622
.................... Mar = "Mar"; 
0A602:  MOVLW  01
0A604:  MOVWF  FEA
0A606:  MOVLW  71
0A608:  MOVWF  FE9
0A60A:  MOVLW  00
0A60C:  MOVLB  0
0A60E:  CALL   01DE
0A612:  TBLRD*-
0A614:  TBLRD*+
0A616:  MOVF   FF5,W
0A618:  MOVWF  FEE
0A61A:  IORLW  00
0A61C:  BNZ   A614
.................... } else { // Lunes es falso 
0A61E:  BRA    A63E
0A620:  MOVLB  1
.................... Mar = " X "; 
0A622:  MOVLW  01
0A624:  MOVWF  FEA
0A626:  MOVLW  71
0A628:  MOVWF  FE9
0A62A:  MOVLW  00
0A62C:  MOVLB  0
0A62E:  CALL   01CA
0A632:  TBLRD*-
0A634:  TBLRD*+
0A636:  MOVF   FF5,W
0A638:  MOVWF  FEE
0A63A:  IORLW  00
0A63C:  BNZ   A634
.................... } // Lunes falso 
.................... if (bit_test(Gdias[2],3)){ // Miercoles grupo 1 verdadero 
0A63E:  MOVLB  1
0A640:  BTFSS  x21.3
0A642:  BRA    A664
.................... Mie = "Mier"; 
0A644:  MOVLW  01
0A646:  MOVWF  FEA
0A648:  MOVLW  75
0A64A:  MOVWF  FE9
0A64C:  MOVLW  00
0A64E:  MOVLB  0
0A650:  CALL   01F2
0A654:  TBLRD*-
0A656:  TBLRD*+
0A658:  MOVF   FF5,W
0A65A:  MOVWF  FEE
0A65C:  IORLW  00
0A65E:  BNZ   A656
.................... } else { // Lunes es falso 
0A660:  BRA    A680
0A662:  MOVLB  1
.................... Mie = " X  "; 
0A664:  MOVLW  01
0A666:  MOVWF  FEA
0A668:  MOVLW  75
0A66A:  MOVWF  FE9
0A66C:  MOVLW  00
0A66E:  MOVLB  0
0A670:  CALL   0208
0A674:  TBLRD*-
0A676:  TBLRD*+
0A678:  MOVF   FF5,W
0A67A:  MOVWF  FEE
0A67C:  IORLW  00
0A67E:  BNZ   A676
.................... } // Lunes falso 
.................... if (bit_test(Gdias[2],4)){ // Jueves grupo 1 verdadero 
0A680:  MOVLB  1
0A682:  BTFSS  x21.4
0A684:  BRA    A6A6
.................... Jue = "Jue"; 
0A686:  MOVLW  01
0A688:  MOVWF  FEA
0A68A:  MOVLW  7A
0A68C:  MOVWF  FE9
0A68E:  MOVLW  00
0A690:  MOVLB  0
0A692:  CALL   021E
0A696:  TBLRD*-
0A698:  TBLRD*+
0A69A:  MOVF   FF5,W
0A69C:  MOVWF  FEE
0A69E:  IORLW  00
0A6A0:  BNZ   A698
.................... } else { // Lunes es falso 
0A6A2:  BRA    A6C2
0A6A4:  MOVLB  1
.................... Jue = " X "; 
0A6A6:  MOVLW  01
0A6A8:  MOVWF  FEA
0A6AA:  MOVLW  7A
0A6AC:  MOVWF  FE9
0A6AE:  MOVLW  00
0A6B0:  MOVLB  0
0A6B2:  CALL   01CA
0A6B6:  TBLRD*-
0A6B8:  TBLRD*+
0A6BA:  MOVF   FF5,W
0A6BC:  MOVWF  FEE
0A6BE:  IORLW  00
0A6C0:  BNZ   A6B8
.................... } // Lunes falso 
.................... if (bit_test(Gdias[2],5)){ // Viernes grupo 1 verdadero 
0A6C2:  MOVLB  1
0A6C4:  BTFSS  x21.5
0A6C6:  BRA    A6E8
.................... Vie = "Vie"; 
0A6C8:  MOVLW  01
0A6CA:  MOVWF  FEA
0A6CC:  MOVLW  7E
0A6CE:  MOVWF  FE9
0A6D0:  MOVLW  00
0A6D2:  MOVLB  0
0A6D4:  CALL   0232
0A6D8:  TBLRD*-
0A6DA:  TBLRD*+
0A6DC:  MOVF   FF5,W
0A6DE:  MOVWF  FEE
0A6E0:  IORLW  00
0A6E2:  BNZ   A6DA
.................... } else { // Lunes es falso 
0A6E4:  BRA    A704
0A6E6:  MOVLB  1
.................... Vie = " X "; 
0A6E8:  MOVLW  01
0A6EA:  MOVWF  FEA
0A6EC:  MOVLW  7E
0A6EE:  MOVWF  FE9
0A6F0:  MOVLW  00
0A6F2:  MOVLB  0
0A6F4:  CALL   01CA
0A6F8:  TBLRD*-
0A6FA:  TBLRD*+
0A6FC:  MOVF   FF5,W
0A6FE:  MOVWF  FEE
0A700:  IORLW  00
0A702:  BNZ   A6FA
.................... } // Lunes falso 
.................... if (bit_test(Gdias[2],6)){ // Sabado grupo 1 verdadero 
0A704:  MOVLB  1
0A706:  BTFSS  x21.6
0A708:  BRA    A72A
.................... Sab = "Sab"; 
0A70A:  MOVLW  01
0A70C:  MOVWF  FEA
0A70E:  MOVLW  82
0A710:  MOVWF  FE9
0A712:  MOVLW  00
0A714:  MOVLB  0
0A716:  CALL   0246
0A71A:  TBLRD*-
0A71C:  TBLRD*+
0A71E:  MOVF   FF5,W
0A720:  MOVWF  FEE
0A722:  IORLW  00
0A724:  BNZ   A71C
.................... } else { // Lunes es falso 
0A726:  BRA    A746
0A728:  MOVLB  1
.................... Sab = " X "; 
0A72A:  MOVLW  01
0A72C:  MOVWF  FEA
0A72E:  MOVLW  82
0A730:  MOVWF  FE9
0A732:  MOVLW  00
0A734:  MOVLB  0
0A736:  CALL   01CA
0A73A:  TBLRD*-
0A73C:  TBLRD*+
0A73E:  MOVF   FF5,W
0A740:  MOVWF  FEE
0A742:  IORLW  00
0A744:  BNZ   A73C
.................... } // Lunes falso 
.................... if (bit_test(Gdias[2],7)){ // Domingo grupo 1 verdadero 
0A746:  MOVLB  1
0A748:  BTFSS  x21.7
0A74A:  BRA    A76C
.................... Dom = "Dom"; 
0A74C:  MOVLW  01
0A74E:  MOVWF  FEA
0A750:  MOVLW  86
0A752:  MOVWF  FE9
0A754:  MOVLW  00
0A756:  MOVLB  0
0A758:  CALL   025A
0A75C:  TBLRD*-
0A75E:  TBLRD*+
0A760:  MOVF   FF5,W
0A762:  MOVWF  FEE
0A764:  IORLW  00
0A766:  BNZ   A75E
.................... } else { // Lunes es falso 
0A768:  BRA    A788
0A76A:  MOVLB  1
.................... Dom = " X "; 
0A76C:  MOVLW  01
0A76E:  MOVWF  FEA
0A770:  MOVLW  86
0A772:  MOVWF  FE9
0A774:  MOVLW  00
0A776:  MOVLB  0
0A778:  CALL   01CA
0A77C:  TBLRD*-
0A77E:  TBLRD*+
0A780:  MOVF   FF5,W
0A782:  MOVWF  FEE
0A784:  IORLW  00
0A786:  BNZ   A77E
0A788:  MOVLB  1
.................... } // Lunes falso 
.................... } // grupo es 2 
....................  
.................... if (grupo == 3) { 
0A78A:  MOVF   x8B,W
0A78C:  SUBLW  03
0A78E:  BTFSS  FD8.2
0A790:  BRA    A960
.................... if (bit_test(Gdias[3],1)){ // Lunes grupo 1 verdadero 
0A792:  BTFSS  x22.1
0A794:  BRA    A7B6
.................... Lun = "Lun"; 
0A796:  MOVLW  01
0A798:  MOVWF  FEA
0A79A:  MOVLW  6D
0A79C:  MOVWF  FE9
0A79E:  MOVLW  00
0A7A0:  MOVLB  0
0A7A2:  CALL   01B6
0A7A6:  TBLRD*-
0A7A8:  TBLRD*+
0A7AA:  MOVF   FF5,W
0A7AC:  MOVWF  FEE
0A7AE:  IORLW  00
0A7B0:  BNZ   A7A8
.................... } else { // Lunes es falso 
0A7B2:  BRA    A7D2
0A7B4:  MOVLB  1
.................... Lun = " X "; 
0A7B6:  MOVLW  01
0A7B8:  MOVWF  FEA
0A7BA:  MOVLW  6D
0A7BC:  MOVWF  FE9
0A7BE:  MOVLW  00
0A7C0:  MOVLB  0
0A7C2:  CALL   01CA
0A7C6:  TBLRD*-
0A7C8:  TBLRD*+
0A7CA:  MOVF   FF5,W
0A7CC:  MOVWF  FEE
0A7CE:  IORLW  00
0A7D0:  BNZ   A7C8
.................... } // Lunes falso 
.................... if (bit_test(Gdias[3],2)){ // Martes grupo 1 verdadero 
0A7D2:  MOVLB  1
0A7D4:  BTFSS  x22.2
0A7D6:  BRA    A7F8
.................... Mar = "Mar"; 
0A7D8:  MOVLW  01
0A7DA:  MOVWF  FEA
0A7DC:  MOVLW  71
0A7DE:  MOVWF  FE9
0A7E0:  MOVLW  00
0A7E2:  MOVLB  0
0A7E4:  CALL   01DE
0A7E8:  TBLRD*-
0A7EA:  TBLRD*+
0A7EC:  MOVF   FF5,W
0A7EE:  MOVWF  FEE
0A7F0:  IORLW  00
0A7F2:  BNZ   A7EA
.................... } else { // Lunes es falso 
0A7F4:  BRA    A814
0A7F6:  MOVLB  1
.................... Mar = " X "; 
0A7F8:  MOVLW  01
0A7FA:  MOVWF  FEA
0A7FC:  MOVLW  71
0A7FE:  MOVWF  FE9
0A800:  MOVLW  00
0A802:  MOVLB  0
0A804:  CALL   01CA
0A808:  TBLRD*-
0A80A:  TBLRD*+
0A80C:  MOVF   FF5,W
0A80E:  MOVWF  FEE
0A810:  IORLW  00
0A812:  BNZ   A80A
.................... } // Lunes falso 
.................... if (bit_test(Gdias[3],3)){ // Miercoles grupo 1 verdadero 
0A814:  MOVLB  1
0A816:  BTFSS  x22.3
0A818:  BRA    A83A
.................... Mie = "Mier"; 
0A81A:  MOVLW  01
0A81C:  MOVWF  FEA
0A81E:  MOVLW  75
0A820:  MOVWF  FE9
0A822:  MOVLW  00
0A824:  MOVLB  0
0A826:  CALL   01F2
0A82A:  TBLRD*-
0A82C:  TBLRD*+
0A82E:  MOVF   FF5,W
0A830:  MOVWF  FEE
0A832:  IORLW  00
0A834:  BNZ   A82C
.................... } else { // Lunes es falso 
0A836:  BRA    A856
0A838:  MOVLB  1
.................... Mie = " X  "; 
0A83A:  MOVLW  01
0A83C:  MOVWF  FEA
0A83E:  MOVLW  75
0A840:  MOVWF  FE9
0A842:  MOVLW  00
0A844:  MOVLB  0
0A846:  CALL   0208
0A84A:  TBLRD*-
0A84C:  TBLRD*+
0A84E:  MOVF   FF5,W
0A850:  MOVWF  FEE
0A852:  IORLW  00
0A854:  BNZ   A84C
.................... } // Lunes falso 
.................... if (bit_test(Gdias[3],4)){ // Jueves grupo 1 verdadero 
0A856:  MOVLB  1
0A858:  BTFSS  x22.4
0A85A:  BRA    A87C
.................... Jue = "Jue"; 
0A85C:  MOVLW  01
0A85E:  MOVWF  FEA
0A860:  MOVLW  7A
0A862:  MOVWF  FE9
0A864:  MOVLW  00
0A866:  MOVLB  0
0A868:  CALL   021E
0A86C:  TBLRD*-
0A86E:  TBLRD*+
0A870:  MOVF   FF5,W
0A872:  MOVWF  FEE
0A874:  IORLW  00
0A876:  BNZ   A86E
.................... } else { // Lunes es falso 
0A878:  BRA    A898
0A87A:  MOVLB  1
.................... Jue = " X "; 
0A87C:  MOVLW  01
0A87E:  MOVWF  FEA
0A880:  MOVLW  7A
0A882:  MOVWF  FE9
0A884:  MOVLW  00
0A886:  MOVLB  0
0A888:  CALL   01CA
0A88C:  TBLRD*-
0A88E:  TBLRD*+
0A890:  MOVF   FF5,W
0A892:  MOVWF  FEE
0A894:  IORLW  00
0A896:  BNZ   A88E
.................... } // Lunes falso 
.................... if (bit_test(Gdias[3],5)){ // Viernes grupo 1 verdadero 
0A898:  MOVLB  1
0A89A:  BTFSS  x22.5
0A89C:  BRA    A8BE
.................... Vie = "Vie"; 
0A89E:  MOVLW  01
0A8A0:  MOVWF  FEA
0A8A2:  MOVLW  7E
0A8A4:  MOVWF  FE9
0A8A6:  MOVLW  00
0A8A8:  MOVLB  0
0A8AA:  CALL   0232
0A8AE:  TBLRD*-
0A8B0:  TBLRD*+
0A8B2:  MOVF   FF5,W
0A8B4:  MOVWF  FEE
0A8B6:  IORLW  00
0A8B8:  BNZ   A8B0
.................... } else { // Lunes es falso 
0A8BA:  BRA    A8DA
0A8BC:  MOVLB  1
.................... Vie = " X "; 
0A8BE:  MOVLW  01
0A8C0:  MOVWF  FEA
0A8C2:  MOVLW  7E
0A8C4:  MOVWF  FE9
0A8C6:  MOVLW  00
0A8C8:  MOVLB  0
0A8CA:  CALL   01CA
0A8CE:  TBLRD*-
0A8D0:  TBLRD*+
0A8D2:  MOVF   FF5,W
0A8D4:  MOVWF  FEE
0A8D6:  IORLW  00
0A8D8:  BNZ   A8D0
.................... } // Lunes falso 
.................... if (bit_test(Gdias[3],6)){ // Sabado grupo 1 verdadero 
0A8DA:  MOVLB  1
0A8DC:  BTFSS  x22.6
0A8DE:  BRA    A900
.................... Sab = "Sab"; 
0A8E0:  MOVLW  01
0A8E2:  MOVWF  FEA
0A8E4:  MOVLW  82
0A8E6:  MOVWF  FE9
0A8E8:  MOVLW  00
0A8EA:  MOVLB  0
0A8EC:  CALL   0246
0A8F0:  TBLRD*-
0A8F2:  TBLRD*+
0A8F4:  MOVF   FF5,W
0A8F6:  MOVWF  FEE
0A8F8:  IORLW  00
0A8FA:  BNZ   A8F2
.................... } else { // Lunes es falso 
0A8FC:  BRA    A91C
0A8FE:  MOVLB  1
.................... Sab = " X "; 
0A900:  MOVLW  01
0A902:  MOVWF  FEA
0A904:  MOVLW  82
0A906:  MOVWF  FE9
0A908:  MOVLW  00
0A90A:  MOVLB  0
0A90C:  CALL   01CA
0A910:  TBLRD*-
0A912:  TBLRD*+
0A914:  MOVF   FF5,W
0A916:  MOVWF  FEE
0A918:  IORLW  00
0A91A:  BNZ   A912
.................... } // Lunes falso 
.................... if (bit_test(Gdias[3],7)){ // Domingo grupo 1 verdadero 
0A91C:  MOVLB  1
0A91E:  BTFSS  x22.7
0A920:  BRA    A942
.................... Dom = "Dom"; 
0A922:  MOVLW  01
0A924:  MOVWF  FEA
0A926:  MOVLW  86
0A928:  MOVWF  FE9
0A92A:  MOVLW  00
0A92C:  MOVLB  0
0A92E:  CALL   025A
0A932:  TBLRD*-
0A934:  TBLRD*+
0A936:  MOVF   FF5,W
0A938:  MOVWF  FEE
0A93A:  IORLW  00
0A93C:  BNZ   A934
.................... } else { // Lunes es falso 
0A93E:  BRA    A95E
0A940:  MOVLB  1
.................... Dom = " X "; 
0A942:  MOVLW  01
0A944:  MOVWF  FEA
0A946:  MOVLW  86
0A948:  MOVWF  FE9
0A94A:  MOVLW  00
0A94C:  MOVLB  0
0A94E:  CALL   01CA
0A952:  TBLRD*-
0A954:  TBLRD*+
0A956:  MOVF   FF5,W
0A958:  MOVWF  FEE
0A95A:  IORLW  00
0A95C:  BNZ   A954
0A95E:  MOVLB  1
.................... } // Lunes falso 
.................... } // grupo es 3 
....................  
.................... if (grupo == 4) { 
0A960:  MOVF   x8B,W
0A962:  SUBLW  04
0A964:  BTFSS  FD8.2
0A966:  BRA    AB36
.................... if (bit_test(Gdias[4],1)){ // Lunes grupo 1 verdadero 
0A968:  BTFSS  x23.1
0A96A:  BRA    A98C
.................... Lun = "Lun"; 
0A96C:  MOVLW  01
0A96E:  MOVWF  FEA
0A970:  MOVLW  6D
0A972:  MOVWF  FE9
0A974:  MOVLW  00
0A976:  MOVLB  0
0A978:  CALL   01B6
0A97C:  TBLRD*-
0A97E:  TBLRD*+
0A980:  MOVF   FF5,W
0A982:  MOVWF  FEE
0A984:  IORLW  00
0A986:  BNZ   A97E
.................... } else { // Lunes es falso 
0A988:  BRA    A9A8
0A98A:  MOVLB  1
.................... Lun = " X "; 
0A98C:  MOVLW  01
0A98E:  MOVWF  FEA
0A990:  MOVLW  6D
0A992:  MOVWF  FE9
0A994:  MOVLW  00
0A996:  MOVLB  0
0A998:  CALL   01CA
0A99C:  TBLRD*-
0A99E:  TBLRD*+
0A9A0:  MOVF   FF5,W
0A9A2:  MOVWF  FEE
0A9A4:  IORLW  00
0A9A6:  BNZ   A99E
.................... } // Lunes falso 
.................... if (bit_test(Gdias[4],2)){ // Martes grupo 1 verdadero 
0A9A8:  MOVLB  1
0A9AA:  BTFSS  x23.2
0A9AC:  BRA    A9CE
.................... Mar = "Mar"; 
0A9AE:  MOVLW  01
0A9B0:  MOVWF  FEA
0A9B2:  MOVLW  71
0A9B4:  MOVWF  FE9
0A9B6:  MOVLW  00
0A9B8:  MOVLB  0
0A9BA:  CALL   01DE
0A9BE:  TBLRD*-
0A9C0:  TBLRD*+
0A9C2:  MOVF   FF5,W
0A9C4:  MOVWF  FEE
0A9C6:  IORLW  00
0A9C8:  BNZ   A9C0
.................... } else { // Lunes es falso 
0A9CA:  BRA    A9EA
0A9CC:  MOVLB  1
.................... Mar = " X "; 
0A9CE:  MOVLW  01
0A9D0:  MOVWF  FEA
0A9D2:  MOVLW  71
0A9D4:  MOVWF  FE9
0A9D6:  MOVLW  00
0A9D8:  MOVLB  0
0A9DA:  CALL   01CA
0A9DE:  TBLRD*-
0A9E0:  TBLRD*+
0A9E2:  MOVF   FF5,W
0A9E4:  MOVWF  FEE
0A9E6:  IORLW  00
0A9E8:  BNZ   A9E0
.................... } // Lunes falso 
.................... if (bit_test(Gdias[4],3)){ // Miercoles grupo 1 verdadero 
0A9EA:  MOVLB  1
0A9EC:  BTFSS  x23.3
0A9EE:  BRA    AA10
.................... Mie = "Mier"; 
0A9F0:  MOVLW  01
0A9F2:  MOVWF  FEA
0A9F4:  MOVLW  75
0A9F6:  MOVWF  FE9
0A9F8:  MOVLW  00
0A9FA:  MOVLB  0
0A9FC:  CALL   01F2
0AA00:  TBLRD*-
0AA02:  TBLRD*+
0AA04:  MOVF   FF5,W
0AA06:  MOVWF  FEE
0AA08:  IORLW  00
0AA0A:  BNZ   AA02
.................... } else { // Lunes es falso 
0AA0C:  BRA    AA2C
0AA0E:  MOVLB  1
.................... Mie = " X  "; 
0AA10:  MOVLW  01
0AA12:  MOVWF  FEA
0AA14:  MOVLW  75
0AA16:  MOVWF  FE9
0AA18:  MOVLW  00
0AA1A:  MOVLB  0
0AA1C:  CALL   0208
0AA20:  TBLRD*-
0AA22:  TBLRD*+
0AA24:  MOVF   FF5,W
0AA26:  MOVWF  FEE
0AA28:  IORLW  00
0AA2A:  BNZ   AA22
.................... } // Lunes falso 
.................... if (bit_test(Gdias[4],4)){ // Jueves grupo 1 verdadero 
0AA2C:  MOVLB  1
0AA2E:  BTFSS  x23.4
0AA30:  BRA    AA52
.................... Jue = "Jue"; 
0AA32:  MOVLW  01
0AA34:  MOVWF  FEA
0AA36:  MOVLW  7A
0AA38:  MOVWF  FE9
0AA3A:  MOVLW  00
0AA3C:  MOVLB  0
0AA3E:  CALL   021E
0AA42:  TBLRD*-
0AA44:  TBLRD*+
0AA46:  MOVF   FF5,W
0AA48:  MOVWF  FEE
0AA4A:  IORLW  00
0AA4C:  BNZ   AA44
.................... } else { // Lunes es falso 
0AA4E:  BRA    AA6E
0AA50:  MOVLB  1
.................... Jue = " X "; 
0AA52:  MOVLW  01
0AA54:  MOVWF  FEA
0AA56:  MOVLW  7A
0AA58:  MOVWF  FE9
0AA5A:  MOVLW  00
0AA5C:  MOVLB  0
0AA5E:  CALL   01CA
0AA62:  TBLRD*-
0AA64:  TBLRD*+
0AA66:  MOVF   FF5,W
0AA68:  MOVWF  FEE
0AA6A:  IORLW  00
0AA6C:  BNZ   AA64
.................... } // Lunes falso 
.................... if (bit_test(Gdias[4],5)){ // Viernes grupo 1 verdadero 
0AA6E:  MOVLB  1
0AA70:  BTFSS  x23.5
0AA72:  BRA    AA94
.................... Vie = "Vie"; 
0AA74:  MOVLW  01
0AA76:  MOVWF  FEA
0AA78:  MOVLW  7E
0AA7A:  MOVWF  FE9
0AA7C:  MOVLW  00
0AA7E:  MOVLB  0
0AA80:  CALL   0232
0AA84:  TBLRD*-
0AA86:  TBLRD*+
0AA88:  MOVF   FF5,W
0AA8A:  MOVWF  FEE
0AA8C:  IORLW  00
0AA8E:  BNZ   AA86
.................... } else { // Lunes es falso 
0AA90:  BRA    AAB0
0AA92:  MOVLB  1
.................... Vie = " X "; 
0AA94:  MOVLW  01
0AA96:  MOVWF  FEA
0AA98:  MOVLW  7E
0AA9A:  MOVWF  FE9
0AA9C:  MOVLW  00
0AA9E:  MOVLB  0
0AAA0:  CALL   01CA
0AAA4:  TBLRD*-
0AAA6:  TBLRD*+
0AAA8:  MOVF   FF5,W
0AAAA:  MOVWF  FEE
0AAAC:  IORLW  00
0AAAE:  BNZ   AAA6
.................... } // Lunes falso 
.................... if (bit_test(Gdias[4],6)){ // Sabado grupo 1 verdadero 
0AAB0:  MOVLB  1
0AAB2:  BTFSS  x23.6
0AAB4:  BRA    AAD6
.................... Sab = "Sab"; 
0AAB6:  MOVLW  01
0AAB8:  MOVWF  FEA
0AABA:  MOVLW  82
0AABC:  MOVWF  FE9
0AABE:  MOVLW  00
0AAC0:  MOVLB  0
0AAC2:  CALL   0246
0AAC6:  TBLRD*-
0AAC8:  TBLRD*+
0AACA:  MOVF   FF5,W
0AACC:  MOVWF  FEE
0AACE:  IORLW  00
0AAD0:  BNZ   AAC8
.................... } else { // Lunes es falso 
0AAD2:  BRA    AAF2
0AAD4:  MOVLB  1
.................... Sab = " X "; 
0AAD6:  MOVLW  01
0AAD8:  MOVWF  FEA
0AADA:  MOVLW  82
0AADC:  MOVWF  FE9
0AADE:  MOVLW  00
0AAE0:  MOVLB  0
0AAE2:  CALL   01CA
0AAE6:  TBLRD*-
0AAE8:  TBLRD*+
0AAEA:  MOVF   FF5,W
0AAEC:  MOVWF  FEE
0AAEE:  IORLW  00
0AAF0:  BNZ   AAE8
.................... } // Lunes falso 
.................... if (bit_test(Gdias[4],7)){ // Domingo grupo 1 verdadero 
0AAF2:  MOVLB  1
0AAF4:  BTFSS  x23.7
0AAF6:  BRA    AB18
.................... Dom = "Dom"; 
0AAF8:  MOVLW  01
0AAFA:  MOVWF  FEA
0AAFC:  MOVLW  86
0AAFE:  MOVWF  FE9
0AB00:  MOVLW  00
0AB02:  MOVLB  0
0AB04:  CALL   025A
0AB08:  TBLRD*-
0AB0A:  TBLRD*+
0AB0C:  MOVF   FF5,W
0AB0E:  MOVWF  FEE
0AB10:  IORLW  00
0AB12:  BNZ   AB0A
.................... } else { // Lunes es falso 
0AB14:  BRA    AB34
0AB16:  MOVLB  1
.................... Dom = " X "; 
0AB18:  MOVLW  01
0AB1A:  MOVWF  FEA
0AB1C:  MOVLW  86
0AB1E:  MOVWF  FE9
0AB20:  MOVLW  00
0AB22:  MOVLB  0
0AB24:  CALL   01CA
0AB28:  TBLRD*-
0AB2A:  TBLRD*+
0AB2C:  MOVF   FF5,W
0AB2E:  MOVWF  FEE
0AB30:  IORLW  00
0AB32:  BNZ   AB2A
0AB34:  MOVLB  1
.................... } // Lunes falso 
.................... } // grupo es 4 
....................  
.................... if (bit_test(tiempo1,0)) { 
0AB36:  BTFSS  49.0
0AB38:  BRA    AC20
.................... switch (submenu){ 
0AB3A:  MOVLW  01
0AB3C:  SUBWF  x8A,W
0AB3E:  ADDLW  F9
0AB40:  BTFSC  FD8.0
0AB42:  BRA    AC20
0AB44:  ADDLW  07
0AB46:  MOVLB  0
0AB48:  GOTO   B42E
....................    case 1: 
....................       Lun = "   "; 
0AB4C:  MOVLW  01
0AB4E:  MOVWF  FEA
0AB50:  MOVLW  6D
0AB52:  MOVWF  FE9
0AB54:  MOVLW  00
0AB56:  CALL   026E
0AB5A:  TBLRD*-
0AB5C:  TBLRD*+
0AB5E:  MOVF   FF5,W
0AB60:  MOVWF  FEE
0AB62:  IORLW  00
0AB64:  BNZ   AB5C
....................    break; 
0AB66:  MOVLB  1
0AB68:  BRA    AC20
....................     
....................    case 2: 
....................       Mar = "   "; 
0AB6A:  MOVLW  01
0AB6C:  MOVWF  FEA
0AB6E:  MOVLW  71
0AB70:  MOVWF  FE9
0AB72:  MOVLW  00
0AB74:  CALL   026E
0AB78:  TBLRD*-
0AB7A:  TBLRD*+
0AB7C:  MOVF   FF5,W
0AB7E:  MOVWF  FEE
0AB80:  IORLW  00
0AB82:  BNZ   AB7A
....................    break; 
0AB84:  MOVLB  1
0AB86:  BRA    AC20
....................     
....................    case 3: 
....................       Mie = "    "; 
0AB88:  MOVLW  01
0AB8A:  MOVWF  FEA
0AB8C:  MOVLW  75
0AB8E:  MOVWF  FE9
0AB90:  MOVLW  00
0AB92:  CALL   0282
0AB96:  TBLRD*-
0AB98:  TBLRD*+
0AB9A:  MOVF   FF5,W
0AB9C:  MOVWF  FEE
0AB9E:  IORLW  00
0ABA0:  BNZ   AB98
....................    break; 
0ABA2:  MOVLB  1
0ABA4:  BRA    AC20
....................     
....................    case 4: 
....................       Jue = "   "; 
0ABA6:  MOVLW  01
0ABA8:  MOVWF  FEA
0ABAA:  MOVLW  7A
0ABAC:  MOVWF  FE9
0ABAE:  MOVLW  00
0ABB0:  CALL   026E
0ABB4:  TBLRD*-
0ABB6:  TBLRD*+
0ABB8:  MOVF   FF5,W
0ABBA:  MOVWF  FEE
0ABBC:  IORLW  00
0ABBE:  BNZ   ABB6
....................    break; 
0ABC0:  MOVLB  1
0ABC2:  BRA    AC20
....................     
....................    case 5: 
....................       Vie = "   "; 
0ABC4:  MOVLW  01
0ABC6:  MOVWF  FEA
0ABC8:  MOVLW  7E
0ABCA:  MOVWF  FE9
0ABCC:  MOVLW  00
0ABCE:  CALL   026E
0ABD2:  TBLRD*-
0ABD4:  TBLRD*+
0ABD6:  MOVF   FF5,W
0ABD8:  MOVWF  FEE
0ABDA:  IORLW  00
0ABDC:  BNZ   ABD4
....................    break; 
0ABDE:  MOVLB  1
0ABE0:  BRA    AC20
....................     
....................    case 6: 
....................       Sab = "   "; 
0ABE2:  MOVLW  01
0ABE4:  MOVWF  FEA
0ABE6:  MOVLW  82
0ABE8:  MOVWF  FE9
0ABEA:  MOVLW  00
0ABEC:  CALL   026E
0ABF0:  TBLRD*-
0ABF2:  TBLRD*+
0ABF4:  MOVF   FF5,W
0ABF6:  MOVWF  FEE
0ABF8:  IORLW  00
0ABFA:  BNZ   ABF2
....................    break; 
0ABFC:  MOVLB  1
0ABFE:  BRA    AC20
....................     
....................    case 7: 
....................       Dom = "   "; 
0AC00:  MOVLW  01
0AC02:  MOVWF  FEA
0AC04:  MOVLW  86
0AC06:  MOVWF  FE9
0AC08:  MOVLW  00
0AC0A:  CALL   026E
0AC0E:  TBLRD*-
0AC10:  TBLRD*+
0AC12:  MOVF   FF5,W
0AC14:  MOVWF  FEE
0AC16:  IORLW  00
0AC18:  BNZ   AC10
....................    break; 
0AC1A:  MOVLB  1
0AC1C:  BRA    AC20
0AC1E:  MOVLB  1
.................... } //sw 
.................... } // bit test 
....................  
.................... restart_wdt(); 
0AC20:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0AC22:  BSF    F93.3
0AC24:  BTFSS  F81.3
0AC26:  BRA    AC3A
0AC28:  BSF    F93.2
0AC2A:  BTFSS  F81.2
0AC2C:  BRA    AC3A
0AC2E:  BSF    F93.1
0AC30:  BTFSS  F81.1
0AC32:  BRA    AC3A
0AC34:  BSF    F93.0
0AC36:  BTFSC  F81.0
0AC38:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0AC3A:  BTFSC  35.0
0AC3C:  BRA    AD6A
.................... if (input(OOKK) == 0){  
0AC3E:  BSF    F93.1
0AC40:  BTFSC  F81.1
0AC42:  BRA    AD6A
.................... ++submenu; 
0AC44:  INCF   x8A,F
.................... if (submenu == 8){  
0AC46:  MOVF   x8A,W
0AC48:  SUBLW  08
0AC4A:  BTFSS  FD8.2
0AC4C:  BRA    AD68
.................... // Grabamos en eeprom 
.................... write_eeprom(G1Dias,Gdias[1]); 
0AC4E:  MOVF   FF2,W
0AC50:  MOVWF  00
0AC52:  BCF    FF2.7
0AC54:  CLRF   FAA
0AC56:  MOVLW  10
0AC58:  MOVWF  FA9
0AC5A:  MOVFF  120,FA8
0AC5E:  BCF    FA6.6
0AC60:  BCF    FA6.7
0AC62:  BSF    FA6.2
0AC64:  MOVLB  F
0AC66:  MOVLW  55
0AC68:  MOVWF  FA7
0AC6A:  MOVLW  AA
0AC6C:  MOVWF  FA7
0AC6E:  BSF    FA6.1
0AC70:  BTFSC  FA6.1
0AC72:  BRA    AC70
0AC74:  BCF    FA6.2
0AC76:  MOVF   00,W
0AC78:  IORWF  FF2,F
0AC7A:  CLRF   19
0AC7C:  BTFSC  FF2.7
0AC7E:  BSF    19.7
0AC80:  BCF    FF2.7
.................... delay_ms(3); 
0AC82:  MOVLW  03
0AC84:  MOVLB  1
0AC86:  MOVWF  xA8
0AC88:  MOVLB  0
0AC8A:  CALL   1456
0AC8E:  BTFSC  19.7
0AC90:  BSF    FF2.7
.................... write_eeprom(G2Dias,Gdias[2]); 
0AC92:  MOVF   FF2,W
0AC94:  MOVWF  00
0AC96:  BCF    FF2.7
0AC98:  CLRF   FAA
0AC9A:  MOVLW  11
0AC9C:  MOVWF  FA9
0AC9E:  MOVFF  121,FA8
0ACA2:  BCF    FA6.6
0ACA4:  BCF    FA6.7
0ACA6:  BSF    FA6.2
0ACA8:  MOVLB  F
0ACAA:  MOVLW  55
0ACAC:  MOVWF  FA7
0ACAE:  MOVLW  AA
0ACB0:  MOVWF  FA7
0ACB2:  BSF    FA6.1
0ACB4:  BTFSC  FA6.1
0ACB6:  BRA    ACB4
0ACB8:  BCF    FA6.2
0ACBA:  MOVF   00,W
0ACBC:  IORWF  FF2,F
0ACBE:  CLRF   19
0ACC0:  BTFSC  FF2.7
0ACC2:  BSF    19.7
0ACC4:  BCF    FF2.7
.................... delay_ms(3); 
0ACC6:  MOVLW  03
0ACC8:  MOVLB  1
0ACCA:  MOVWF  xA8
0ACCC:  MOVLB  0
0ACCE:  CALL   1456
0ACD2:  BTFSC  19.7
0ACD4:  BSF    FF2.7
.................... write_eeprom(G3Dias,Gdias[3]); 
0ACD6:  MOVF   FF2,W
0ACD8:  MOVWF  00
0ACDA:  BCF    FF2.7
0ACDC:  CLRF   FAA
0ACDE:  MOVLW  12
0ACE0:  MOVWF  FA9
0ACE2:  MOVFF  122,FA8
0ACE6:  BCF    FA6.6
0ACE8:  BCF    FA6.7
0ACEA:  BSF    FA6.2
0ACEC:  MOVLB  F
0ACEE:  MOVLW  55
0ACF0:  MOVWF  FA7
0ACF2:  MOVLW  AA
0ACF4:  MOVWF  FA7
0ACF6:  BSF    FA6.1
0ACF8:  BTFSC  FA6.1
0ACFA:  BRA    ACF8
0ACFC:  BCF    FA6.2
0ACFE:  MOVF   00,W
0AD00:  IORWF  FF2,F
0AD02:  CLRF   19
0AD04:  BTFSC  FF2.7
0AD06:  BSF    19.7
0AD08:  BCF    FF2.7
.................... delay_ms(3); 
0AD0A:  MOVLW  03
0AD0C:  MOVLB  1
0AD0E:  MOVWF  xA8
0AD10:  MOVLB  0
0AD12:  CALL   1456
0AD16:  BTFSC  19.7
0AD18:  BSF    FF2.7
.................... write_eeprom(G4Dias,Gdias[4]); 
0AD1A:  MOVF   FF2,W
0AD1C:  MOVWF  00
0AD1E:  BCF    FF2.7
0AD20:  CLRF   FAA
0AD22:  MOVLW  13
0AD24:  MOVWF  FA9
0AD26:  MOVFF  123,FA8
0AD2A:  BCF    FA6.6
0AD2C:  BCF    FA6.7
0AD2E:  BSF    FA6.2
0AD30:  MOVLB  F
0AD32:  MOVLW  55
0AD34:  MOVWF  FA7
0AD36:  MOVLW  AA
0AD38:  MOVWF  FA7
0AD3A:  BSF    FA6.1
0AD3C:  BTFSC  FA6.1
0AD3E:  BRA    AD3C
0AD40:  BCF    FA6.2
0AD42:  MOVF   00,W
0AD44:  IORWF  FF2,F
0AD46:  CLRF   19
0AD48:  BTFSC  FF2.7
0AD4A:  BSF    19.7
0AD4C:  BCF    FF2.7
.................... delay_ms(3); 
0AD4E:  MOVLW  03
0AD50:  MOVLB  1
0AD52:  MOVWF  xA8
0AD54:  MOVLB  0
0AD56:  CALL   1456
0AD5A:  BTFSC  19.7
0AD5C:  BSF    FF2.7
.................... Menu = 51; 
0AD5E:  MOVLW  33
0AD60:  MOVWF  28
.................... submenu = 100; 
0AD62:  MOVLW  64
0AD64:  MOVLB  1
0AD66:  MOVWF  x8A
.................... } 
.................... rebote = true; 
0AD68:  BSF    35.0
.................... }//si ok 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0AD6A:  BTFSC  35.0
0AD6C:  BRA    AD84
.................... if (input(CANCEL) == 0){  
0AD6E:  BSF    F93.0
0AD70:  BTFSC  F81.0
0AD72:  BRA    AD84
.................... --submenu; 
0AD74:  DECF   x8A,F
.................... if (submenu == 255){  
0AD76:  INCFSZ x8A,W
0AD78:  BRA    AD82
.................... Menu = 51; 
0AD7A:  MOVLW  33
0AD7C:  MOVWF  28
.................... submenu = 100; 
0AD7E:  MOVLW  64
0AD80:  MOVWF  x8A
.................... } 
.................... rebote = true; 
0AD82:  BSF    35.0
.................... }//si ok 
.................... }//rebote 
....................  
.................... if (Rebote == false){ 
0AD84:  BTFSC  35.0
0AD86:  BRA    B1E6
.................... if (input(ARRIBA) == 0){ // apretamos arriba o abajo 
0AD88:  BSF    F93.3
0AD8A:  BTFSC  F81.3
0AD8C:  BRA    AFB6
....................  
....................    if (submenu == 0) { 
0AD8E:  MOVF   x8A,F
0AD90:  BNZ   AD9E
....................       --grupo; 
0AD92:  DECF   x8B,F
....................       if (grupo == 0) grupo = 1; 
0AD94:  MOVF   x8B,F
0AD96:  BNZ   AD9C
0AD98:  MOVLW  01
0AD9A:  MOVWF  x8B
....................    } else { // submenu entre 1 y 7 
0AD9C:  BRA    AFB4
....................  
....................       if (grupo == 1) { // estamos en el grupo 1 
0AD9E:  DECFSZ x8B,W
0ADA0:  BRA    AE22
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0ADA2:  CLRF   03
0ADA4:  MOVF   x8B,W
0ADA6:  ADDLW  1F
0ADA8:  MOVWF  FE9
0ADAA:  MOVLW  01
0ADAC:  ADDWFC 03,W
0ADAE:  MOVWF  FEA
0ADB0:  MOVFF  FEF,18C
0ADB4:  MOVFF  18C,00
0ADB8:  MOVF   x8A,W
0ADBA:  MOVWF  01
0ADBC:  BZ    ADC6
0ADBE:  BCF    FD8.0
0ADC0:  RRCF   00,F
0ADC2:  DECFSZ 01,F
0ADC4:  BRA    ADBE
0ADC6:  BTFSS  00.0
0ADC8:  BRA    ADF8
....................       bit_clear(Gdias[grupo],submenu); 
0ADCA:  CLRF   03
0ADCC:  MOVF   x8B,W
0ADCE:  ADDLW  1F
0ADD0:  MOVWF  01
0ADD2:  MOVLW  01
0ADD4:  ADDWFC 03,F
0ADD6:  MOVFF  01,FE9
0ADDA:  MOVFF  03,FEA
0ADDE:  MOVLW  01
0ADE0:  MOVWF  00
0ADE2:  MOVF   x8A,W
0ADE4:  MOVWF  01
0ADE6:  BZ    ADF0
0ADE8:  BCF    FD8.0
0ADEA:  RLCF   00,F
0ADEC:  DECFSZ 01,F
0ADEE:  BRA    ADE8
0ADF0:  MOVF   00,W
0ADF2:  XORLW  FF
0ADF4:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0ADF6:  BRA    AE22
....................       bit_set(Gdias[grupo],submenu); 
0ADF8:  CLRF   03
0ADFA:  MOVF   x8B,W
0ADFC:  ADDLW  1F
0ADFE:  MOVWF  01
0AE00:  MOVLW  01
0AE02:  ADDWFC 03,F
0AE04:  MOVFF  01,FE9
0AE08:  MOVFF  03,FEA
0AE0C:  MOVLW  01
0AE0E:  MOVWF  00
0AE10:  MOVF   x8A,W
0AE12:  MOVWF  01
0AE14:  BZ    AE1E
0AE16:  BCF    FD8.0
0AE18:  RLCF   00,F
0AE1A:  DECFSZ 01,F
0AE1C:  BRA    AE16
0AE1E:  MOVF   00,W
0AE20:  IORWF  FEF,F
....................       } 
....................       } // estamos en grupo 1 
....................   
....................       if (grupo == 2){ 
0AE22:  MOVF   x8B,W
0AE24:  SUBLW  02
0AE26:  BNZ   AEA8
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0AE28:  CLRF   03
0AE2A:  MOVF   x8B,W
0AE2C:  ADDLW  1F
0AE2E:  MOVWF  FE9
0AE30:  MOVLW  01
0AE32:  ADDWFC 03,W
0AE34:  MOVWF  FEA
0AE36:  MOVFF  FEF,18C
0AE3A:  MOVFF  18C,00
0AE3E:  MOVF   x8A,W
0AE40:  MOVWF  01
0AE42:  BZ    AE4C
0AE44:  BCF    FD8.0
0AE46:  RRCF   00,F
0AE48:  DECFSZ 01,F
0AE4A:  BRA    AE44
0AE4C:  BTFSS  00.0
0AE4E:  BRA    AE7E
....................       bit_clear(Gdias[grupo],submenu); 
0AE50:  CLRF   03
0AE52:  MOVF   x8B,W
0AE54:  ADDLW  1F
0AE56:  MOVWF  01
0AE58:  MOVLW  01
0AE5A:  ADDWFC 03,F
0AE5C:  MOVFF  01,FE9
0AE60:  MOVFF  03,FEA
0AE64:  MOVLW  01
0AE66:  MOVWF  00
0AE68:  MOVF   x8A,W
0AE6A:  MOVWF  01
0AE6C:  BZ    AE76
0AE6E:  BCF    FD8.0
0AE70:  RLCF   00,F
0AE72:  DECFSZ 01,F
0AE74:  BRA    AE6E
0AE76:  MOVF   00,W
0AE78:  XORLW  FF
0AE7A:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0AE7C:  BRA    AEA8
....................       bit_set(Gdias[grupo],submenu); 
0AE7E:  CLRF   03
0AE80:  MOVF   x8B,W
0AE82:  ADDLW  1F
0AE84:  MOVWF  01
0AE86:  MOVLW  01
0AE88:  ADDWFC 03,F
0AE8A:  MOVFF  01,FE9
0AE8E:  MOVFF  03,FEA
0AE92:  MOVLW  01
0AE94:  MOVWF  00
0AE96:  MOVF   x8A,W
0AE98:  MOVWF  01
0AE9A:  BZ    AEA4
0AE9C:  BCF    FD8.0
0AE9E:  RLCF   00,F
0AEA0:  DECFSZ 01,F
0AEA2:  BRA    AE9C
0AEA4:  MOVF   00,W
0AEA6:  IORWF  FEF,F
....................       } 
....................       } // si grupo 2 
....................        
....................       if (grupo == 3) { // estamos en el grupo 1 
0AEA8:  MOVF   x8B,W
0AEAA:  SUBLW  03
0AEAC:  BNZ   AF2E
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0AEAE:  CLRF   03
0AEB0:  MOVF   x8B,W
0AEB2:  ADDLW  1F
0AEB4:  MOVWF  FE9
0AEB6:  MOVLW  01
0AEB8:  ADDWFC 03,W
0AEBA:  MOVWF  FEA
0AEBC:  MOVFF  FEF,18C
0AEC0:  MOVFF  18C,00
0AEC4:  MOVF   x8A,W
0AEC6:  MOVWF  01
0AEC8:  BZ    AED2
0AECA:  BCF    FD8.0
0AECC:  RRCF   00,F
0AECE:  DECFSZ 01,F
0AED0:  BRA    AECA
0AED2:  BTFSS  00.0
0AED4:  BRA    AF04
....................       bit_clear(Gdias[grupo],submenu); 
0AED6:  CLRF   03
0AED8:  MOVF   x8B,W
0AEDA:  ADDLW  1F
0AEDC:  MOVWF  01
0AEDE:  MOVLW  01
0AEE0:  ADDWFC 03,F
0AEE2:  MOVFF  01,FE9
0AEE6:  MOVFF  03,FEA
0AEEA:  MOVLW  01
0AEEC:  MOVWF  00
0AEEE:  MOVF   x8A,W
0AEF0:  MOVWF  01
0AEF2:  BZ    AEFC
0AEF4:  BCF    FD8.0
0AEF6:  RLCF   00,F
0AEF8:  DECFSZ 01,F
0AEFA:  BRA    AEF4
0AEFC:  MOVF   00,W
0AEFE:  XORLW  FF
0AF00:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0AF02:  BRA    AF2E
....................       bit_set(Gdias[grupo],submenu); 
0AF04:  CLRF   03
0AF06:  MOVF   x8B,W
0AF08:  ADDLW  1F
0AF0A:  MOVWF  01
0AF0C:  MOVLW  01
0AF0E:  ADDWFC 03,F
0AF10:  MOVFF  01,FE9
0AF14:  MOVFF  03,FEA
0AF18:  MOVLW  01
0AF1A:  MOVWF  00
0AF1C:  MOVF   x8A,W
0AF1E:  MOVWF  01
0AF20:  BZ    AF2A
0AF22:  BCF    FD8.0
0AF24:  RLCF   00,F
0AF26:  DECFSZ 01,F
0AF28:  BRA    AF22
0AF2A:  MOVF   00,W
0AF2C:  IORWF  FEF,F
....................       } 
....................       } // estamos en grupo 1 
....................   
....................       if (grupo == 4){ 
0AF2E:  MOVF   x8B,W
0AF30:  SUBLW  04
0AF32:  BNZ   AFB4
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0AF34:  CLRF   03
0AF36:  MOVF   x8B,W
0AF38:  ADDLW  1F
0AF3A:  MOVWF  FE9
0AF3C:  MOVLW  01
0AF3E:  ADDWFC 03,W
0AF40:  MOVWF  FEA
0AF42:  MOVFF  FEF,18C
0AF46:  MOVFF  18C,00
0AF4A:  MOVF   x8A,W
0AF4C:  MOVWF  01
0AF4E:  BZ    AF58
0AF50:  BCF    FD8.0
0AF52:  RRCF   00,F
0AF54:  DECFSZ 01,F
0AF56:  BRA    AF50
0AF58:  BTFSS  00.0
0AF5A:  BRA    AF8A
....................       bit_clear(Gdias[grupo],submenu); 
0AF5C:  CLRF   03
0AF5E:  MOVF   x8B,W
0AF60:  ADDLW  1F
0AF62:  MOVWF  01
0AF64:  MOVLW  01
0AF66:  ADDWFC 03,F
0AF68:  MOVFF  01,FE9
0AF6C:  MOVFF  03,FEA
0AF70:  MOVLW  01
0AF72:  MOVWF  00
0AF74:  MOVF   x8A,W
0AF76:  MOVWF  01
0AF78:  BZ    AF82
0AF7A:  BCF    FD8.0
0AF7C:  RLCF   00,F
0AF7E:  DECFSZ 01,F
0AF80:  BRA    AF7A
0AF82:  MOVF   00,W
0AF84:  XORLW  FF
0AF86:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0AF88:  BRA    AFB4
....................       bit_set(Gdias[grupo],submenu); 
0AF8A:  CLRF   03
0AF8C:  MOVF   x8B,W
0AF8E:  ADDLW  1F
0AF90:  MOVWF  01
0AF92:  MOVLW  01
0AF94:  ADDWFC 03,F
0AF96:  MOVFF  01,FE9
0AF9A:  MOVFF  03,FEA
0AF9E:  MOVLW  01
0AFA0:  MOVWF  00
0AFA2:  MOVF   x8A,W
0AFA4:  MOVWF  01
0AFA6:  BZ    AFB0
0AFA8:  BCF    FD8.0
0AFAA:  RLCF   00,F
0AFAC:  DECFSZ 01,F
0AFAE:  BRA    AFA8
0AFB0:  MOVF   00,W
0AFB2:  IORWF  FEF,F
....................       } 
....................       } // si grupo 2 
....................    } // submenu entre 1 y 7    
....................  
.................... rebote = true; 
0AFB4:  BSF    35.0
.................... } // si arriba o abajo 
....................  
.................... if (input(ABAJO) == 0){ // apretamos arriba o abajo 
0AFB6:  BSF    F93.2
0AFB8:  BTFSC  F81.2
0AFBA:  BRA    B1E6
....................  
....................    if (submenu == 0) { 
0AFBC:  MOVF   x8A,F
0AFBE:  BNZ   AFCE
....................       ++grupo; 
0AFC0:  INCF   x8B,F
....................       if (grupo == 5) grupo = 4; 
0AFC2:  MOVF   x8B,W
0AFC4:  SUBLW  05
0AFC6:  BNZ   AFCC
0AFC8:  MOVLW  04
0AFCA:  MOVWF  x8B
....................    } else { // submenu entre 1 y 7 
0AFCC:  BRA    B1E4
....................  
....................       if (grupo == 1) { // estamos en el grupo 1 
0AFCE:  DECFSZ x8B,W
0AFD0:  BRA    B052
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0AFD2:  CLRF   03
0AFD4:  MOVF   x8B,W
0AFD6:  ADDLW  1F
0AFD8:  MOVWF  FE9
0AFDA:  MOVLW  01
0AFDC:  ADDWFC 03,W
0AFDE:  MOVWF  FEA
0AFE0:  MOVFF  FEF,18C
0AFE4:  MOVFF  18C,00
0AFE8:  MOVF   x8A,W
0AFEA:  MOVWF  01
0AFEC:  BZ    AFF6
0AFEE:  BCF    FD8.0
0AFF0:  RRCF   00,F
0AFF2:  DECFSZ 01,F
0AFF4:  BRA    AFEE
0AFF6:  BTFSS  00.0
0AFF8:  BRA    B028
....................       bit_clear(Gdias[grupo],submenu); 
0AFFA:  CLRF   03
0AFFC:  MOVF   x8B,W
0AFFE:  ADDLW  1F
0B000:  MOVWF  01
0B002:  MOVLW  01
0B004:  ADDWFC 03,F
0B006:  MOVFF  01,FE9
0B00A:  MOVFF  03,FEA
0B00E:  MOVLW  01
0B010:  MOVWF  00
0B012:  MOVF   x8A,W
0B014:  MOVWF  01
0B016:  BZ    B020
0B018:  BCF    FD8.0
0B01A:  RLCF   00,F
0B01C:  DECFSZ 01,F
0B01E:  BRA    B018
0B020:  MOVF   00,W
0B022:  XORLW  FF
0B024:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0B026:  BRA    B052
....................       bit_set(Gdias[grupo],submenu); 
0B028:  CLRF   03
0B02A:  MOVF   x8B,W
0B02C:  ADDLW  1F
0B02E:  MOVWF  01
0B030:  MOVLW  01
0B032:  ADDWFC 03,F
0B034:  MOVFF  01,FE9
0B038:  MOVFF  03,FEA
0B03C:  MOVLW  01
0B03E:  MOVWF  00
0B040:  MOVF   x8A,W
0B042:  MOVWF  01
0B044:  BZ    B04E
0B046:  BCF    FD8.0
0B048:  RLCF   00,F
0B04A:  DECFSZ 01,F
0B04C:  BRA    B046
0B04E:  MOVF   00,W
0B050:  IORWF  FEF,F
....................       } 
....................       } // estamos en grupo 1 
....................   
....................       if (grupo == 2){ 
0B052:  MOVF   x8B,W
0B054:  SUBLW  02
0B056:  BNZ   B0D8
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0B058:  CLRF   03
0B05A:  MOVF   x8B,W
0B05C:  ADDLW  1F
0B05E:  MOVWF  FE9
0B060:  MOVLW  01
0B062:  ADDWFC 03,W
0B064:  MOVWF  FEA
0B066:  MOVFF  FEF,18C
0B06A:  MOVFF  18C,00
0B06E:  MOVF   x8A,W
0B070:  MOVWF  01
0B072:  BZ    B07C
0B074:  BCF    FD8.0
0B076:  RRCF   00,F
0B078:  DECFSZ 01,F
0B07A:  BRA    B074
0B07C:  BTFSS  00.0
0B07E:  BRA    B0AE
....................       bit_clear(Gdias[grupo],submenu); 
0B080:  CLRF   03
0B082:  MOVF   x8B,W
0B084:  ADDLW  1F
0B086:  MOVWF  01
0B088:  MOVLW  01
0B08A:  ADDWFC 03,F
0B08C:  MOVFF  01,FE9
0B090:  MOVFF  03,FEA
0B094:  MOVLW  01
0B096:  MOVWF  00
0B098:  MOVF   x8A,W
0B09A:  MOVWF  01
0B09C:  BZ    B0A6
0B09E:  BCF    FD8.0
0B0A0:  RLCF   00,F
0B0A2:  DECFSZ 01,F
0B0A4:  BRA    B09E
0B0A6:  MOVF   00,W
0B0A8:  XORLW  FF
0B0AA:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0B0AC:  BRA    B0D8
....................       bit_set(Gdias[grupo],submenu); 
0B0AE:  CLRF   03
0B0B0:  MOVF   x8B,W
0B0B2:  ADDLW  1F
0B0B4:  MOVWF  01
0B0B6:  MOVLW  01
0B0B8:  ADDWFC 03,F
0B0BA:  MOVFF  01,FE9
0B0BE:  MOVFF  03,FEA
0B0C2:  MOVLW  01
0B0C4:  MOVWF  00
0B0C6:  MOVF   x8A,W
0B0C8:  MOVWF  01
0B0CA:  BZ    B0D4
0B0CC:  BCF    FD8.0
0B0CE:  RLCF   00,F
0B0D0:  DECFSZ 01,F
0B0D2:  BRA    B0CC
0B0D4:  MOVF   00,W
0B0D6:  IORWF  FEF,F
....................       } 
....................       } // si grupo 2 
....................        
....................       if (grupo == 3) { // estamos en el grupo 1 
0B0D8:  MOVF   x8B,W
0B0DA:  SUBLW  03
0B0DC:  BNZ   B15E
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0B0DE:  CLRF   03
0B0E0:  MOVF   x8B,W
0B0E2:  ADDLW  1F
0B0E4:  MOVWF  FE9
0B0E6:  MOVLW  01
0B0E8:  ADDWFC 03,W
0B0EA:  MOVWF  FEA
0B0EC:  MOVFF  FEF,18C
0B0F0:  MOVFF  18C,00
0B0F4:  MOVF   x8A,W
0B0F6:  MOVWF  01
0B0F8:  BZ    B102
0B0FA:  BCF    FD8.0
0B0FC:  RRCF   00,F
0B0FE:  DECFSZ 01,F
0B100:  BRA    B0FA
0B102:  BTFSS  00.0
0B104:  BRA    B134
....................       bit_clear(Gdias[grupo],submenu); 
0B106:  CLRF   03
0B108:  MOVF   x8B,W
0B10A:  ADDLW  1F
0B10C:  MOVWF  01
0B10E:  MOVLW  01
0B110:  ADDWFC 03,F
0B112:  MOVFF  01,FE9
0B116:  MOVFF  03,FEA
0B11A:  MOVLW  01
0B11C:  MOVWF  00
0B11E:  MOVF   x8A,W
0B120:  MOVWF  01
0B122:  BZ    B12C
0B124:  BCF    FD8.0
0B126:  RLCF   00,F
0B128:  DECFSZ 01,F
0B12A:  BRA    B124
0B12C:  MOVF   00,W
0B12E:  XORLW  FF
0B130:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0B132:  BRA    B15E
....................       bit_set(Gdias[grupo],submenu); 
0B134:  CLRF   03
0B136:  MOVF   x8B,W
0B138:  ADDLW  1F
0B13A:  MOVWF  01
0B13C:  MOVLW  01
0B13E:  ADDWFC 03,F
0B140:  MOVFF  01,FE9
0B144:  MOVFF  03,FEA
0B148:  MOVLW  01
0B14A:  MOVWF  00
0B14C:  MOVF   x8A,W
0B14E:  MOVWF  01
0B150:  BZ    B15A
0B152:  BCF    FD8.0
0B154:  RLCF   00,F
0B156:  DECFSZ 01,F
0B158:  BRA    B152
0B15A:  MOVF   00,W
0B15C:  IORWF  FEF,F
....................       } 
....................       } // estamos en grupo 1 
....................   
....................       if (grupo == 4){ 
0B15E:  MOVF   x8B,W
0B160:  SUBLW  04
0B162:  BNZ   B1E4
....................       if (bit_test(Gdias[grupo],submenu)){ // el dia es verdadero 
0B164:  CLRF   03
0B166:  MOVF   x8B,W
0B168:  ADDLW  1F
0B16A:  MOVWF  FE9
0B16C:  MOVLW  01
0B16E:  ADDWFC 03,W
0B170:  MOVWF  FEA
0B172:  MOVFF  FEF,18C
0B176:  MOVFF  18C,00
0B17A:  MOVF   x8A,W
0B17C:  MOVWF  01
0B17E:  BZ    B188
0B180:  BCF    FD8.0
0B182:  RRCF   00,F
0B184:  DECFSZ 01,F
0B186:  BRA    B180
0B188:  BTFSS  00.0
0B18A:  BRA    B1BA
....................       bit_clear(Gdias[grupo],submenu); 
0B18C:  CLRF   03
0B18E:  MOVF   x8B,W
0B190:  ADDLW  1F
0B192:  MOVWF  01
0B194:  MOVLW  01
0B196:  ADDWFC 03,F
0B198:  MOVFF  01,FE9
0B19C:  MOVFF  03,FEA
0B1A0:  MOVLW  01
0B1A2:  MOVWF  00
0B1A4:  MOVF   x8A,W
0B1A6:  MOVWF  01
0B1A8:  BZ    B1B2
0B1AA:  BCF    FD8.0
0B1AC:  RLCF   00,F
0B1AE:  DECFSZ 01,F
0B1B0:  BRA    B1AA
0B1B2:  MOVF   00,W
0B1B4:  XORLW  FF
0B1B6:  ANDWF  FEF,F
....................       } // si chequeo  
....................       else { // el dia es falso 
0B1B8:  BRA    B1E4
....................       bit_set(Gdias[grupo],submenu); 
0B1BA:  CLRF   03
0B1BC:  MOVF   x8B,W
0B1BE:  ADDLW  1F
0B1C0:  MOVWF  01
0B1C2:  MOVLW  01
0B1C4:  ADDWFC 03,F
0B1C6:  MOVFF  01,FE9
0B1CA:  MOVFF  03,FEA
0B1CE:  MOVLW  01
0B1D0:  MOVWF  00
0B1D2:  MOVF   x8A,W
0B1D4:  MOVWF  01
0B1D6:  BZ    B1E0
0B1D8:  BCF    FD8.0
0B1DA:  RLCF   00,F
0B1DC:  DECFSZ 01,F
0B1DE:  BRA    B1D8
0B1E0:  MOVF   00,W
0B1E2:  IORWF  FEF,F
....................       } 
....................       } // si grupo 2 
....................    } // submenu entre 1 y 7    
....................  
.................... rebote = true; 
0B1E4:  BSF    35.0
0B1E6:  CLRF   19
0B1E8:  BTFSC  FF2.7
0B1EA:  BSF    19.7
0B1EC:  BCF    FF2.7
.................... } // si arriba o abajo 
.................... }//rebote 
....................  
.................... /////////////////////// LCD /////////////////////// 
.................... lcd_gotoxy(1,1); 
0B1EE:  MOVLW  01
0B1F0:  MOVWF  xA0
0B1F2:  MOVWF  xA1
0B1F4:  MOVLB  0
0B1F6:  CALL   156C
0B1FA:  BTFSC  19.7
0B1FC:  BSF    FF2.7
.................... printf(lcd_putc, "= Seleccionar dias ="); 
0B1FE:  MOVLW  98
0B200:  MOVWF  FF6
0B202:  MOVLW  09
0B204:  MOVWF  FF7
0B206:  CALL   3E86
0B20A:  CLRF   19
0B20C:  BTFSC  FF2.7
0B20E:  BSF    19.7
0B210:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0B212:  MOVLW  01
0B214:  MOVLB  1
0B216:  MOVWF  xA0
0B218:  MOVLW  02
0B21A:  MOVWF  xA1
0B21C:  MOVLB  0
0B21E:  CALL   156C
0B222:  BTFSC  19.7
0B224:  BSF    FF2.7
.................... if (submenu == 0) { // estamos en grupo 
0B226:  MOVLB  1
0B228:  MOVF   x8A,F
0B22A:  BNZ   B2DC
.................... if (grupo == 1){ // si grupo 1 
0B22C:  DECFSZ x8B,W
0B22E:  BRA    B256
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (1)  "); 
0B230:  BTFSS  49.0
0B232:  BRA    B246
0B234:  MOVLW  AE
0B236:  MOVWF  FF6
0B238:  MOVLW  09
0B23A:  MOVWF  FF7
0B23C:  MOVLB  0
0B23E:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B242:  BRA    B254
0B244:  MOVLB  1
0B246:  MOVLW  C4
0B248:  MOVWF  FF6
0B24A:  MOVLW  09
0B24C:  MOVWF  FF7
0B24E:  MOVLB  0
0B250:  CALL   3E86
0B254:  MOVLB  1
.................... } // si el grupo es 1 
.................... if (grupo == 2){ // si grupo 2 
0B256:  MOVF   x8B,W
0B258:  SUBLW  02
0B25A:  BNZ   B282
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (2)  "); 
0B25C:  BTFSS  49.0
0B25E:  BRA    B272
0B260:  MOVLW  DA
0B262:  MOVWF  FF6
0B264:  MOVLW  09
0B266:  MOVWF  FF7
0B268:  MOVLB  0
0B26A:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B26E:  BRA    B280
0B270:  MOVLB  1
0B272:  MOVLW  F0
0B274:  MOVWF  FF6
0B276:  MOVLW  09
0B278:  MOVWF  FF7
0B27A:  MOVLB  0
0B27C:  CALL   3E86
0B280:  MOVLB  1
.................... } // si el grupo es 2 
.................... if (grupo == 3){ // si grupo 3 
0B282:  MOVF   x8B,W
0B284:  SUBLW  03
0B286:  BNZ   B2AE
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (3)  "); 
0B288:  BTFSS  49.0
0B28A:  BRA    B29E
0B28C:  MOVLW  06
0B28E:  MOVWF  FF6
0B290:  MOVLW  0A
0B292:  MOVWF  FF7
0B294:  MOVLB  0
0B296:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B29A:  BRA    B2AC
0B29C:  MOVLB  1
0B29E:  MOVLW  1C
0B2A0:  MOVWF  FF6
0B2A2:  MOVLW  0A
0B2A4:  MOVWF  FF7
0B2A6:  MOVLB  0
0B2A8:  CALL   3E86
0B2AC:  MOVLB  1
.................... } // si el grupo es 1 
.................... if (grupo == 4){ // si grupo 4 
0B2AE:  MOVF   x8B,W
0B2B0:  SUBLW  04
0B2B2:  BNZ   B2DA
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "  Grupo:  AUTO (4)  "); 
0B2B4:  BTFSS  49.0
0B2B6:  BRA    B2CA
0B2B8:  MOVLW  32
0B2BA:  MOVWF  FF6
0B2BC:  MOVLW  0A
0B2BE:  MOVWF  FF7
0B2C0:  MOVLB  0
0B2C2:  CALL   3E86
.................... else printf(lcd_putc, "  Grupo:            "); 
0B2C6:  BRA    B2D8
0B2C8:  MOVLB  1
0B2CA:  MOVLW  48
0B2CC:  MOVWF  FF6
0B2CE:  MOVLW  0A
0B2D0:  MOVWF  FF7
0B2D2:  MOVLB  0
0B2D4:  CALL   3E86
0B2D8:  MOVLB  1
.................... } // si el grupo es 2 
.................... } // grupo 
.................... else { // Estamos en los dias de la semana 
0B2DA:  BRA    B332
.................... if (grupo == 1) printf(lcd_putc, "  Grupo:  AUTO (1)  "); 
0B2DC:  DECFSZ x8B,W
0B2DE:  BRA    B2F0
0B2E0:  MOVLW  5E
0B2E2:  MOVWF  FF6
0B2E4:  MOVLW  0A
0B2E6:  MOVWF  FF7
0B2E8:  MOVLB  0
0B2EA:  CALL   3E86
0B2EE:  MOVLB  1
.................... if (grupo == 2) printf(lcd_putc, "  Grupo:  AUTO (2)  "); 
0B2F0:  MOVF   x8B,W
0B2F2:  SUBLW  02
0B2F4:  BNZ   B306
0B2F6:  MOVLW  74
0B2F8:  MOVWF  FF6
0B2FA:  MOVLW  0A
0B2FC:  MOVWF  FF7
0B2FE:  MOVLB  0
0B300:  CALL   3E86
0B304:  MOVLB  1
.................... if (grupo == 3) printf(lcd_putc, "  Grupo:  AUTO (3)  "); 
0B306:  MOVF   x8B,W
0B308:  SUBLW  03
0B30A:  BNZ   B31C
0B30C:  MOVLW  8A
0B30E:  MOVWF  FF6
0B310:  MOVLW  0A
0B312:  MOVWF  FF7
0B314:  MOVLB  0
0B316:  CALL   3E86
0B31A:  MOVLB  1
.................... if (grupo == 4) printf(lcd_putc, "  Grupo:  AUTO (4)  "); 
0B31C:  MOVF   x8B,W
0B31E:  SUBLW  04
0B320:  BNZ   B332
0B322:  MOVLW  A0
0B324:  MOVWF  FF6
0B326:  MOVLW  0A
0B328:  MOVWF  FF7
0B32A:  MOVLB  0
0B32C:  CALL   3E86
0B330:  MOVLB  1
0B332:  CLRF   19
0B334:  BTFSC  FF2.7
0B336:  BSF    19.7
0B338:  BCF    FF2.7
.................... } 
.................... lcd_gotoxy(1,3); 
0B33A:  MOVLW  01
0B33C:  MOVWF  xA0
0B33E:  MOVLW  03
0B340:  MOVWF  xA1
0B342:  MOVLB  0
0B344:  CALL   156C
0B348:  BTFSC  19.7
0B34A:  BSF    FF2.7
.................... printf(lcd_putc, "%s-%s-%s-%s-%s",Lun,Mar,Mie,Jue,Vie); 
0B34C:  MOVLW  01
0B34E:  MOVWF  FEA
0B350:  MOVLW  6D
0B352:  MOVWF  FE9
0B354:  CALL   4518
0B358:  MOVLW  2D
0B35A:  MOVLB  1
0B35C:  MOVWF  x93
0B35E:  MOVLB  0
0B360:  CALL   3DE6
0B364:  MOVLW  01
0B366:  MOVWF  FEA
0B368:  MOVLW  71
0B36A:  MOVWF  FE9
0B36C:  CALL   4518
0B370:  MOVLW  2D
0B372:  MOVLB  1
0B374:  MOVWF  x93
0B376:  MOVLB  0
0B378:  CALL   3DE6
0B37C:  MOVLW  01
0B37E:  MOVWF  FEA
0B380:  MOVLW  75
0B382:  MOVWF  FE9
0B384:  CALL   4518
0B388:  MOVLW  2D
0B38A:  MOVLB  1
0B38C:  MOVWF  x93
0B38E:  MOVLB  0
0B390:  CALL   3DE6
0B394:  MOVLW  01
0B396:  MOVWF  FEA
0B398:  MOVLW  7A
0B39A:  MOVWF  FE9
0B39C:  CALL   4518
0B3A0:  MOVLW  2D
0B3A2:  MOVLB  1
0B3A4:  MOVWF  x93
0B3A6:  MOVLB  0
0B3A8:  CALL   3DE6
0B3AC:  MOVLW  01
0B3AE:  MOVWF  FEA
0B3B0:  MOVLW  7E
0B3B2:  MOVWF  FE9
0B3B4:  CALL   4518
0B3B8:  CLRF   19
0B3BA:  BTFSC  FF2.7
0B3BC:  BSF    19.7
0B3BE:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0B3C0:  MOVLW  01
0B3C2:  MOVLB  1
0B3C4:  MOVWF  xA0
0B3C6:  MOVLW  04
0B3C8:  MOVWF  xA1
0B3CA:  MOVLB  0
0B3CC:  CALL   156C
0B3D0:  BTFSC  19.7
0B3D2:  BSF    FF2.7
.................... printf(lcd_putc, "      %s-%s       ",Sab,Dom); 
0B3D4:  MOVLW  B6
0B3D6:  MOVWF  FF6
0B3D8:  MOVLW  0A
0B3DA:  MOVWF  FF7
0B3DC:  MOVLW  06
0B3DE:  MOVLB  1
0B3E0:  MOVWF  x90
0B3E2:  MOVLB  0
0B3E4:  CALL   44F0
0B3E8:  MOVLW  01
0B3EA:  MOVWF  FEA
0B3EC:  MOVLW  82
0B3EE:  MOVWF  FE9
0B3F0:  CALL   4518
0B3F4:  MOVLW  2D
0B3F6:  MOVLB  1
0B3F8:  MOVWF  x93
0B3FA:  MOVLB  0
0B3FC:  CALL   3DE6
0B400:  MOVLW  01
0B402:  MOVWF  FEA
0B404:  MOVLW  86
0B406:  MOVWF  FE9
0B408:  CALL   4518
0B40C:  MOVLW  C1
0B40E:  MOVWF  FF6
0B410:  MOVLW  0A
0B412:  MOVWF  FF7
0B414:  MOVLW  07
0B416:  MOVLB  1
0B418:  MOVWF  x90
0B41A:  MOVLB  0
0B41C:  CALL   44F0
.................... restart_wdt(); 
0B420:  CLRWDT
.................... } // while 
0B422:  MOVLB  1
0B424:  GOTO   A3D8
.................... } // fn 
0B428:  MOVLB  0
0B42A:  GOTO   E56E (RETURN)
....................  
....................  
....................  
.................... void LuzGrupo(){ 
....................  
.................... LIMPIARLCD; 
*
08246:  MOVLW  CA
08248:  MOVWF  FF6
0824A:  MOVLW  0A
0824C:  MOVWF  FF7
0824E:  CALL   3E86
.................... int submenu = 1; 
....................  
.................... int kk; 
08252:  MOVLW  01
08254:  MOVLB  1
08256:  MOVWF  x6D
.................... //Defini(); 
.................... while (submenu < 50){ // hasta llenar todas las luces 
08258:  MOVF   x6D,W
0825A:  SUBLW  31
0825C:  BTFSS  FD8.0
0825E:  GOTO   8FE8
....................  
.................... restart_wdt(); 
08262:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
08264:  BSF    F93.3
08266:  BTFSS  F81.3
08268:  BRA    827C
0826A:  BSF    F93.2
0826C:  BTFSS  F81.2
0826E:  BRA    827C
08270:  BSF    F93.1
08272:  BTFSS  F81.1
08274:  BRA    827C
08276:  BSF    F93.0
08278:  BTFSC  F81.0
0827A:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0827C:  BTFSC  35.0
0827E:  BRA    8896
.................... if (input(OOKK) == 0){  
08280:  BSF    F93.1
08282:  BTFSC  F81.1
08284:  BRA    8896
.................... switch (submenu){ 
08286:  MOVLW  0B
08288:  SUBWF  x6D,W
0828A:  ADDLW  EE
0828C:  BTFSC  FD8.0
0828E:  BRA    888A
08290:  ADDLW  12
08292:  MOVLB  0
08294:  GOTO   8FEE
....................     
....................    case 11:  // Grupo APAGAR TODOS 
....................       for (kk=32;kk<94;kk++) { 
08298:  MOVLW  20
0829A:  MOVLB  1
0829C:  MOVWF  x6E
0829E:  MOVF   x6E,W
082A0:  SUBLW  5D
082A2:  BNC   8340
....................       if (IntLuz[kk] > 99){ // estaba apagado 
082A4:  CLRF   03
082A6:  MOVF   x6E,W
082A8:  ADDLW  4A
082AA:  MOVWF  FE9
082AC:  MOVLW  00
082AE:  ADDWFC 03,W
082B0:  MOVWF  FEA
082B2:  MOVF   FEF,W
082B4:  SUBLW  63
082B6:  BC    833C
....................          IntLuz[kk] = IntLuz[kk] - 100; // prendo en el arreglo 
082B8:  CLRF   03
082BA:  MOVF   x6E,W
082BC:  ADDLW  4A
082BE:  MOVWF  01
082C0:  MOVLW  00
082C2:  ADDWFC 03,F
082C4:  MOVFF  03,170
082C8:  CLRF   03
082CA:  MOVF   x6E,W
082CC:  ADDLW  4A
082CE:  MOVWF  FE9
082D0:  MOVLW  00
082D2:  ADDWFC 03,W
082D4:  MOVWF  FEA
082D6:  MOVLW  64
082D8:  SUBWF  FEF,W
082DA:  MOVFF  170,FEA
082DE:  MOVFF  01,FE9
082E2:  MOVWF  FEF
....................          write_eeprom(kk,IntLuz[kk]); 
082E4:  CLRF   03
082E6:  MOVF   x6E,W
082E8:  ADDLW  4A
082EA:  MOVWF  FE9
082EC:  MOVLW  00
082EE:  ADDWFC 03,W
082F0:  MOVWF  FEA
082F2:  MOVFF  FEF,16F
082F6:  MOVF   FF2,W
082F8:  MOVWF  00
082FA:  BCF    FF2.7
082FC:  CLRF   FAA
082FE:  MOVFF  16E,FA9
08302:  MOVFF  16F,FA8
08306:  BCF    FA6.6
08308:  BCF    FA6.7
0830A:  BSF    FA6.2
0830C:  MOVLB  F
0830E:  MOVLW  55
08310:  MOVWF  FA7
08312:  MOVLW  AA
08314:  MOVWF  FA7
08316:  BSF    FA6.1
08318:  BTFSC  FA6.1
0831A:  BRA    8318
0831C:  BCF    FA6.2
0831E:  MOVF   00,W
08320:  IORWF  FF2,F
08322:  CLRF   19
08324:  BTFSC  FF2.7
08326:  BSF    19.7
08328:  BCF    FF2.7
....................          delay_ms(3); 
0832A:  MOVLW  03
0832C:  MOVLB  1
0832E:  MOVWF  xA8
08330:  MOVLB  0
08332:  CALL   1456
08336:  BTFSC  19.7
08338:  BSF    FF2.7
0833A:  MOVLB  1
....................       } // si estaba apagado.. 
....................       } // for... 
0833C:  INCF   x6E,F
0833E:  BRA    829E
08340:  CLRF   19
08342:  BTFSC  FF2.7
08344:  BSF    19.7
08346:  BCF    FF2.7
....................       BusData(100,80); //printf("%c%c%c%c", 250, 100, 80, 180); // Apagamos todo en la red 
08348:  MOVLW  64
0834A:  MOVWF  xA3
0834C:  MOVLW  50
0834E:  MOVWF  xA4
08350:  MOVLB  0
08352:  CALL   15F6
08356:  BTFSC  19.7
08358:  BSF    FF2.7
0835A:  CLRF   19
0835C:  BTFSC  FF2.7
0835E:  BSF    19.7
08360:  BCF    FF2.7
....................       BusData(93,80); //printf("%c%c%c%c", 250, 100, 80, 180); // Apagamos todo en la red 
08362:  MOVLW  5D
08364:  MOVLB  1
08366:  MOVWF  xA3
08368:  MOVLW  50
0836A:  MOVWF  xA4
0836C:  MOVLB  0
0836E:  CALL   15F6
08372:  BTFSC  19.7
08374:  BSF    FF2.7
....................    break; 
08376:  MOVLB  1
08378:  BRA    888A
....................  
....................    case 12:  // Grupo APAGAR Perimetro Jardin  
....................       for (kk=32;kk<94;kk++) { 
0837A:  MOVLW  20
0837C:  MOVLB  1
0837E:  MOVWF  x6E
08380:  MOVF   x6E,W
08382:  SUBLW  5D
08384:  BNC   83B8
....................       if (bit_test(LGrupo[kk],1)) Apagar(kk); 
08386:  CLRF   03
08388:  MOVF   x6E,W
0838A:  ADDLW  AD
0838C:  MOVWF  FE9
0838E:  MOVLW  00
08390:  ADDWFC 03,W
08392:  MOVWF  FEA
08394:  MOVFF  FEF,16F
08398:  BTFSS  x6F.1
0839A:  BRA    83B4
0839C:  CLRF   19
0839E:  BTFSC  FF2.7
083A0:  BSF    19.7
083A2:  BCF    FF2.7
083A4:  MOVFF  16E,1A2
083A8:  MOVLB  0
083AA:  CALL   23A6
083AE:  BTFSC  19.7
083B0:  BSF    FF2.7
083B2:  MOVLB  1
....................       } // for... 
083B4:  INCF   x6E,F
083B6:  BRA    8380
....................    break; 
083B8:  BRA    888A
....................  
....................    case 13: // Grupo APAGAR JARDIN  
....................       for (kk=32;kk<94;kk++) { 
083BA:  MOVLW  20
083BC:  MOVLB  1
083BE:  MOVWF  x6E
083C0:  MOVF   x6E,W
083C2:  SUBLW  5D
083C4:  BNC   83F8
....................       if (bit_test(LGrupo[kk],2)) Apagar(kk); 
083C6:  CLRF   03
083C8:  MOVF   x6E,W
083CA:  ADDLW  AD
083CC:  MOVWF  FE9
083CE:  MOVLW  00
083D0:  ADDWFC 03,W
083D2:  MOVWF  FEA
083D4:  MOVFF  FEF,16F
083D8:  BTFSS  x6F.2
083DA:  BRA    83F4
083DC:  CLRF   19
083DE:  BTFSC  FF2.7
083E0:  BSF    19.7
083E2:  BCF    FF2.7
083E4:  MOVFF  16E,1A2
083E8:  MOVLB  0
083EA:  CALL   23A6
083EE:  BTFSC  19.7
083F0:  BSF    FF2.7
083F2:  MOVLB  1
....................       } // for... 
083F4:  INCF   x6E,F
083F6:  BRA    83C0
....................    break; 
083F8:  BRA    888A
....................  
....................    case 14: // Grupo APAGAR GARAGE  
....................       for (kk=32;kk<94;kk++) { 
083FA:  MOVLW  20
083FC:  MOVLB  1
083FE:  MOVWF  x6E
08400:  MOVF   x6E,W
08402:  SUBLW  5D
08404:  BNC   8438
....................       if (bit_test(LGrupo[kk],3)) Apagar(kk); 
08406:  CLRF   03
08408:  MOVF   x6E,W
0840A:  ADDLW  AD
0840C:  MOVWF  FE9
0840E:  MOVLW  00
08410:  ADDWFC 03,W
08412:  MOVWF  FEA
08414:  MOVFF  FEF,16F
08418:  BTFSS  x6F.3
0841A:  BRA    8434
0841C:  CLRF   19
0841E:  BTFSC  FF2.7
08420:  BSF    19.7
08422:  BCF    FF2.7
08424:  MOVFF  16E,1A2
08428:  MOVLB  0
0842A:  CALL   23A6
0842E:  BTFSC  19.7
08430:  BSF    FF2.7
08432:  MOVLB  1
....................       } // for... 
08434:  INCF   x6E,F
08436:  BRA    8400
....................    break; 
08438:  BRA    888A
....................  
....................    case 15: // Grupo APAGAR VESTIDOR  
....................       for (kk=32;kk<94;kk++) { 
0843A:  MOVLW  20
0843C:  MOVLB  1
0843E:  MOVWF  x6E
08440:  MOVF   x6E,W
08442:  SUBLW  5D
08444:  BNC   8478
....................       if (bit_test(LGrupo[kk],4)) Apagar(kk); 
08446:  CLRF   03
08448:  MOVF   x6E,W
0844A:  ADDLW  AD
0844C:  MOVWF  FE9
0844E:  MOVLW  00
08450:  ADDWFC 03,W
08452:  MOVWF  FEA
08454:  MOVFF  FEF,16F
08458:  BTFSS  x6F.4
0845A:  BRA    8474
0845C:  CLRF   19
0845E:  BTFSC  FF2.7
08460:  BSF    19.7
08462:  BCF    FF2.7
08464:  MOVFF  16E,1A2
08468:  MOVLB  0
0846A:  CALL   23A6
0846E:  BTFSC  19.7
08470:  BSF    FF2.7
08472:  MOVLB  1
....................       } // for... 
08474:  INCF   x6E,F
08476:  BRA    8440
....................    break; 
08478:  BRA    888A
....................  
....................    case 16: // Grupo APAGAR FUERA CUARTOS  
....................       for (kk=32;kk<94;kk++) { 
0847A:  MOVLW  20
0847C:  MOVLB  1
0847E:  MOVWF  x6E
08480:  MOVF   x6E,W
08482:  SUBLW  5D
08484:  BNC   84B8
....................       if (bit_test(LGrupo[kk],5)) Apagar(kk); 
08486:  CLRF   03
08488:  MOVF   x6E,W
0848A:  ADDLW  AD
0848C:  MOVWF  FE9
0848E:  MOVLW  00
08490:  ADDWFC 03,W
08492:  MOVWF  FEA
08494:  MOVFF  FEF,16F
08498:  BTFSS  x6F.5
0849A:  BRA    84B4
0849C:  CLRF   19
0849E:  BTFSC  FF2.7
084A0:  BSF    19.7
084A2:  BCF    FF2.7
084A4:  MOVFF  16E,1A2
084A8:  MOVLB  0
084AA:  CALL   23A6
084AE:  BTFSC  19.7
084B0:  BSF    FF2.7
084B2:  MOVLB  1
....................       } // for... 
084B4:  INCF   x6E,F
084B6:  BRA    8480
....................    break; 
084B8:  BRA    888A
....................  
....................    case 17: // Grupo APAGAR AUTO1  
....................       for (kk=32;kk<94;kk++) { 
084BA:  MOVLW  20
084BC:  MOVLB  1
084BE:  MOVWF  x6E
084C0:  MOVF   x6E,W
084C2:  SUBLW  5D
084C4:  BNC   84F8
....................       if (bit_test(LGrupo[kk],6)) Apagar(kk); 
084C6:  CLRF   03
084C8:  MOVF   x6E,W
084CA:  ADDLW  AD
084CC:  MOVWF  FE9
084CE:  MOVLW  00
084D0:  ADDWFC 03,W
084D2:  MOVWF  FEA
084D4:  MOVFF  FEF,16F
084D8:  BTFSS  x6F.6
084DA:  BRA    84F4
084DC:  CLRF   19
084DE:  BTFSC  FF2.7
084E0:  BSF    19.7
084E2:  BCF    FF2.7
084E4:  MOVFF  16E,1A2
084E8:  MOVLB  0
084EA:  CALL   23A6
084EE:  BTFSC  19.7
084F0:  BSF    FF2.7
084F2:  MOVLB  1
....................       } // for... 
084F4:  INCF   x6E,F
084F6:  BRA    84C0
....................    break; 
084F8:  BRA    888A
....................  
....................    case 18: // Grupo APAGAR AUTO2  
....................       for (kk=32;kk<94;kk++) { 
084FA:  MOVLW  20
084FC:  MOVLB  1
084FE:  MOVWF  x6E
08500:  MOVF   x6E,W
08502:  SUBLW  5D
08504:  BNC   8538
....................       if (bit_test(LGrupo[kk],7)) Apagar(kk); 
08506:  CLRF   03
08508:  MOVF   x6E,W
0850A:  ADDLW  AD
0850C:  MOVWF  FE9
0850E:  MOVLW  00
08510:  ADDWFC 03,W
08512:  MOVWF  FEA
08514:  MOVFF  FEF,16F
08518:  BTFSS  x6F.7
0851A:  BRA    8534
0851C:  CLRF   19
0851E:  BTFSC  FF2.7
08520:  BSF    19.7
08522:  BCF    FF2.7
08524:  MOVFF  16E,1A2
08528:  MOVLB  0
0852A:  CALL   23A6
0852E:  BTFSC  19.7
08530:  BSF    FF2.7
08532:  MOVLB  1
....................       } // for... 
08534:  INCF   x6E,F
08536:  BRA    8500
....................    break; 
08538:  BRA    888A
....................  
....................  
....................    case 21:  // Grupo PRENDER TODOS 
....................       for (kk=32;kk<94;kk++) { 
0853A:  MOVLW  20
0853C:  MOVLB  1
0853E:  MOVWF  x6E
08540:  MOVF   x6E,W
08542:  SUBLW  5D
08544:  BNC   85E2
....................       if (IntLuz[kk] < 99){ // estaba apagado 
08546:  CLRF   03
08548:  MOVF   x6E,W
0854A:  ADDLW  4A
0854C:  MOVWF  FE9
0854E:  MOVLW  00
08550:  ADDWFC 03,W
08552:  MOVWF  FEA
08554:  MOVF   FEF,W
08556:  SUBLW  62
08558:  BNC   85DE
....................          IntLuz[kk] = IntLuz[kk] + 100; // prendo en el arreglo 
0855A:  CLRF   03
0855C:  MOVF   x6E,W
0855E:  ADDLW  4A
08560:  MOVWF  01
08562:  MOVLW  00
08564:  ADDWFC 03,F
08566:  MOVFF  03,170
0856A:  CLRF   03
0856C:  MOVF   x6E,W
0856E:  ADDLW  4A
08570:  MOVWF  FE9
08572:  MOVLW  00
08574:  ADDWFC 03,W
08576:  MOVWF  FEA
08578:  MOVLW  64
0857A:  ADDWF  FEF,W
0857C:  MOVFF  170,FEA
08580:  MOVFF  01,FE9
08584:  MOVWF  FEF
....................          write_eeprom(kk,IntLuz[kk]); 
08586:  CLRF   03
08588:  MOVF   x6E,W
0858A:  ADDLW  4A
0858C:  MOVWF  FE9
0858E:  MOVLW  00
08590:  ADDWFC 03,W
08592:  MOVWF  FEA
08594:  MOVFF  FEF,16F
08598:  MOVF   FF2,W
0859A:  MOVWF  00
0859C:  BCF    FF2.7
0859E:  CLRF   FAA
085A0:  MOVFF  16E,FA9
085A4:  MOVFF  16F,FA8
085A8:  BCF    FA6.6
085AA:  BCF    FA6.7
085AC:  BSF    FA6.2
085AE:  MOVLB  F
085B0:  MOVLW  55
085B2:  MOVWF  FA7
085B4:  MOVLW  AA
085B6:  MOVWF  FA7
085B8:  BSF    FA6.1
085BA:  BTFSC  FA6.1
085BC:  BRA    85BA
085BE:  BCF    FA6.2
085C0:  MOVF   00,W
085C2:  IORWF  FF2,F
085C4:  CLRF   19
085C6:  BTFSC  FF2.7
085C8:  BSF    19.7
085CA:  BCF    FF2.7
....................          delay_ms(3); 
085CC:  MOVLW  03
085CE:  MOVLB  1
085D0:  MOVWF  xA8
085D2:  MOVLB  0
085D4:  CALL   1456
085D8:  BTFSC  19.7
085DA:  BSF    FF2.7
085DC:  MOVLB  1
....................       } // si estaba apagado.. 
....................       } // for... 
085DE:  INCF   x6E,F
085E0:  BRA    8540
085E2:  CLRF   19
085E4:  BTFSC  FF2.7
085E6:  BSF    19.7
085E8:  BCF    FF2.7
....................       BusData(100,90); //printf("%c%c%c%c", 250, 100, 90, 190); // Apagamos todo en la red 
085EA:  MOVLW  64
085EC:  MOVWF  xA3
085EE:  MOVLW  5A
085F0:  MOVWF  xA4
085F2:  MOVLB  0
085F4:  CALL   15F6
085F8:  BTFSC  19.7
085FA:  BSF    FF2.7
085FC:  CLRF   19
085FE:  BTFSC  FF2.7
08600:  BSF    19.7
08602:  BCF    FF2.7
....................       BusData(VentPaMa,80); //printf("%c%c%c%c", 250, VentPaMa, 80, VentPaMa+80); // Apago ventilador papa mama 
08604:  MOVLW  37
08606:  MOVLB  1
08608:  MOVWF  xA3
0860A:  MOVLW  50
0860C:  MOVWF  xA4
0860E:  MOVLB  0
08610:  CALL   15F6
08614:  BTFSC  19.7
08616:  BSF    FF2.7
....................       IntLuz[VentPaMa] = IntLuz[VentPaMa] - 100; // prendo en el arreglo 
08618:  MOVLW  64
0861A:  SUBWF  x81,F
....................       write_eeprom(VentPaMa,IntLuz[VentPaMa]); 
0861C:  MOVF   FF2,W
0861E:  MOVWF  00
08620:  BCF    FF2.7
08622:  CLRF   FAA
08624:  MOVLW  37
08626:  MOVWF  FA9
08628:  MOVFF  81,FA8
0862C:  BCF    FA6.6
0862E:  BCF    FA6.7
08630:  BSF    FA6.2
08632:  MOVLB  F
08634:  MOVLW  55
08636:  MOVWF  FA7
08638:  MOVLW  AA
0863A:  MOVWF  FA7
0863C:  BSF    FA6.1
0863E:  BTFSC  FA6.1
08640:  BRA    863E
08642:  BCF    FA6.2
08644:  MOVF   00,W
08646:  IORWF  FF2,F
08648:  CLRF   19
0864A:  BTFSC  FF2.7
0864C:  BSF    19.7
0864E:  BCF    FF2.7
....................       delay_ms(3); 
08650:  MOVLW  03
08652:  MOVLB  1
08654:  MOVWF  xA8
08656:  MOVLB  0
08658:  CALL   1456
0865C:  BTFSC  19.7
0865E:  BSF    FF2.7
08660:  CLRF   19
08662:  BTFSC  FF2.7
08664:  BSF    19.7
08666:  BCF    FF2.7
....................       BusData(VentGal,80); //printf("%c%c%c%c", 250, VentGal, 80, VentGal+80); // Apago ventilador galeria 
08668:  MOVLW  54
0866A:  MOVLB  1
0866C:  MOVWF  xA3
0866E:  MOVLW  50
08670:  MOVWF  xA4
08672:  MOVLB  0
08674:  CALL   15F6
08678:  BTFSC  19.7
0867A:  BSF    FF2.7
....................       IntLuz[VentGal] = IntLuz[VentGal] - 100; // prendo en el arreglo 
0867C:  MOVLW  64
0867E:  SUBWF  x9E,F
....................       write_eeprom(VentGal,IntLuz[VentGal]); 
08680:  MOVF   FF2,W
08682:  MOVWF  00
08684:  BCF    FF2.7
08686:  CLRF   FAA
08688:  MOVLW  54
0868A:  MOVWF  FA9
0868C:  MOVFF  9E,FA8
08690:  BCF    FA6.6
08692:  BCF    FA6.7
08694:  BSF    FA6.2
08696:  MOVLB  F
08698:  MOVLW  55
0869A:  MOVWF  FA7
0869C:  MOVLW  AA
0869E:  MOVWF  FA7
086A0:  BSF    FA6.1
086A2:  BTFSC  FA6.1
086A4:  BRA    86A2
086A6:  BCF    FA6.2
086A8:  MOVF   00,W
086AA:  IORWF  FF2,F
086AC:  CLRF   19
086AE:  BTFSC  FF2.7
086B0:  BSF    19.7
086B2:  BCF    FF2.7
....................       delay_ms(3); 
086B4:  MOVLW  03
086B6:  MOVLB  1
086B8:  MOVWF  xA8
086BA:  MOVLB  0
086BC:  CALL   1456
086C0:  BTFSC  19.7
086C2:  BSF    FF2.7
....................    break; 
086C4:  MOVLB  1
086C6:  BRA    888A
....................  
....................    case 22:  // Grupo PRENDER EXTERIOR  
....................       for (kk=32;kk<94;kk++) { 
086C8:  MOVLW  20
086CA:  MOVLB  1
086CC:  MOVWF  x6E
086CE:  MOVF   x6E,W
086D0:  SUBLW  5D
086D2:  BNC   8706
....................       if (bit_test(LGrupo[kk],1)) Prender(kk); 
086D4:  CLRF   03
086D6:  MOVF   x6E,W
086D8:  ADDLW  AD
086DA:  MOVWF  FE9
086DC:  MOVLW  00
086DE:  ADDWFC 03,W
086E0:  MOVWF  FEA
086E2:  MOVFF  FEF,16F
086E6:  BTFSS  x6F.1
086E8:  BRA    8702
086EA:  CLRF   19
086EC:  BTFSC  FF2.7
086EE:  BSF    19.7
086F0:  BCF    FF2.7
086F2:  MOVFF  16E,1A2
086F6:  MOVLB  0
086F8:  CALL   2304
086FC:  BTFSC  19.7
086FE:  BSF    FF2.7
08700:  MOVLB  1
....................       } // for... 
08702:  INCF   x6E,F
08704:  BRA    86CE
....................    break; 
08706:  BRA    888A
....................  
....................    case 23: // Grupo PRENDER JARDIN  
....................       for (kk=32;kk<94;kk++) { 
08708:  MOVLW  20
0870A:  MOVLB  1
0870C:  MOVWF  x6E
0870E:  MOVF   x6E,W
08710:  SUBLW  5D
08712:  BNC   8746
....................       if (bit_test(LGrupo[kk],2)) Prender(kk); 
08714:  CLRF   03
08716:  MOVF   x6E,W
08718:  ADDLW  AD
0871A:  MOVWF  FE9
0871C:  MOVLW  00
0871E:  ADDWFC 03,W
08720:  MOVWF  FEA
08722:  MOVFF  FEF,16F
08726:  BTFSS  x6F.2
08728:  BRA    8742
0872A:  CLRF   19
0872C:  BTFSC  FF2.7
0872E:  BSF    19.7
08730:  BCF    FF2.7
08732:  MOVFF  16E,1A2
08736:  MOVLB  0
08738:  CALL   2304
0873C:  BTFSC  19.7
0873E:  BSF    FF2.7
08740:  MOVLB  1
....................       } // for... 
08742:  INCF   x6E,F
08744:  BRA    870E
....................    break; 
08746:  BRA    888A
....................  
....................    case 24: // Grupo PREDNER GARAGE  
....................       for (kk=32;kk<94;kk++) { 
08748:  MOVLW  20
0874A:  MOVLB  1
0874C:  MOVWF  x6E
0874E:  MOVF   x6E,W
08750:  SUBLW  5D
08752:  BNC   8786
....................       if (bit_test(LGrupo[kk],3)) Prender(kk); 
08754:  CLRF   03
08756:  MOVF   x6E,W
08758:  ADDLW  AD
0875A:  MOVWF  FE9
0875C:  MOVLW  00
0875E:  ADDWFC 03,W
08760:  MOVWF  FEA
08762:  MOVFF  FEF,16F
08766:  BTFSS  x6F.3
08768:  BRA    8782
0876A:  CLRF   19
0876C:  BTFSC  FF2.7
0876E:  BSF    19.7
08770:  BCF    FF2.7
08772:  MOVFF  16E,1A2
08776:  MOVLB  0
08778:  CALL   2304
0877C:  BTFSC  19.7
0877E:  BSF    FF2.7
08780:  MOVLB  1
....................       } // for... 
08782:  INCF   x6E,F
08784:  BRA    874E
....................    break; 
08786:  BRA    888A
....................  
....................    case 25: // Grupo PRENDER VESTIDOR  
....................       for (kk=32;kk<94;kk++) { 
08788:  MOVLW  20
0878A:  MOVLB  1
0878C:  MOVWF  x6E
0878E:  MOVF   x6E,W
08790:  SUBLW  5D
08792:  BNC   87C6
....................       if (bit_test(LGrupo[kk],4)) Prender(kk); 
08794:  CLRF   03
08796:  MOVF   x6E,W
08798:  ADDLW  AD
0879A:  MOVWF  FE9
0879C:  MOVLW  00
0879E:  ADDWFC 03,W
087A0:  MOVWF  FEA
087A2:  MOVFF  FEF,16F
087A6:  BTFSS  x6F.4
087A8:  BRA    87C2
087AA:  CLRF   19
087AC:  BTFSC  FF2.7
087AE:  BSF    19.7
087B0:  BCF    FF2.7
087B2:  MOVFF  16E,1A2
087B6:  MOVLB  0
087B8:  CALL   2304
087BC:  BTFSC  19.7
087BE:  BSF    FF2.7
087C0:  MOVLB  1
....................       } // for... 
087C2:  INCF   x6E,F
087C4:  BRA    878E
....................    break; 
087C6:  BRA    888A
....................  
....................    case 26: // Grupo APAGAR FUERA CUARTOS  
....................       for (kk=32;kk<94;kk++) { 
087C8:  MOVLW  20
087CA:  MOVLB  1
087CC:  MOVWF  x6E
087CE:  MOVF   x6E,W
087D0:  SUBLW  5D
087D2:  BNC   8806
....................       if (bit_test(LGrupo[kk],5)) Prender(kk); 
087D4:  CLRF   03
087D6:  MOVF   x6E,W
087D8:  ADDLW  AD
087DA:  MOVWF  FE9
087DC:  MOVLW  00
087DE:  ADDWFC 03,W
087E0:  MOVWF  FEA
087E2:  MOVFF  FEF,16F
087E6:  BTFSS  x6F.5
087E8:  BRA    8802
087EA:  CLRF   19
087EC:  BTFSC  FF2.7
087EE:  BSF    19.7
087F0:  BCF    FF2.7
087F2:  MOVFF  16E,1A2
087F6:  MOVLB  0
087F8:  CALL   2304
087FC:  BTFSC  19.7
087FE:  BSF    FF2.7
08800:  MOVLB  1
....................       } // for... 
08802:  INCF   x6E,F
08804:  BRA    87CE
....................    break; 
08806:  BRA    888A
....................  
....................    case 27: // Grupo APAGAR AUTO1  
....................       for (kk=32;kk<94;kk++) { 
08808:  MOVLW  20
0880A:  MOVLB  1
0880C:  MOVWF  x6E
0880E:  MOVF   x6E,W
08810:  SUBLW  5D
08812:  BNC   8846
....................       if (bit_test(LGrupo[kk],6)) Prender(kk); 
08814:  CLRF   03
08816:  MOVF   x6E,W
08818:  ADDLW  AD
0881A:  MOVWF  FE9
0881C:  MOVLW  00
0881E:  ADDWFC 03,W
08820:  MOVWF  FEA
08822:  MOVFF  FEF,16F
08826:  BTFSS  x6F.6
08828:  BRA    8842
0882A:  CLRF   19
0882C:  BTFSC  FF2.7
0882E:  BSF    19.7
08830:  BCF    FF2.7
08832:  MOVFF  16E,1A2
08836:  MOVLB  0
08838:  CALL   2304
0883C:  BTFSC  19.7
0883E:  BSF    FF2.7
08840:  MOVLB  1
....................       } // for... 
08842:  INCF   x6E,F
08844:  BRA    880E
....................    break; 
08846:  BRA    888A
....................  
....................    case 28: // Grupo APAGAR AUTO2  
....................       for (kk=32;kk<94;kk++) { 
08848:  MOVLW  20
0884A:  MOVLB  1
0884C:  MOVWF  x6E
0884E:  MOVF   x6E,W
08850:  SUBLW  5D
08852:  BNC   8886
....................       if (bit_test(LGrupo[kk],7)) Prender(kk); 
08854:  CLRF   03
08856:  MOVF   x6E,W
08858:  ADDLW  AD
0885A:  MOVWF  FE9
0885C:  MOVLW  00
0885E:  ADDWFC 03,W
08860:  MOVWF  FEA
08862:  MOVFF  FEF,16F
08866:  BTFSS  x6F.7
08868:  BRA    8882
0886A:  CLRF   19
0886C:  BTFSC  FF2.7
0886E:  BSF    19.7
08870:  BCF    FF2.7
08872:  MOVFF  16E,1A2
08876:  MOVLB  0
08878:  CALL   2304
0887C:  BTFSC  19.7
0887E:  BSF    FF2.7
08880:  MOVLB  1
....................       } // for... 
08882:  INCF   x6E,F
08884:  BRA    884E
....................    break; 
08886:  BRA    888A
08888:  MOVLB  1
.................... } // switch 
.................... if (submenu < 10) submenu = submenu + 10; 
0888A:  MOVF   x6D,W
0888C:  SUBLW  09
0888E:  BNC   8894
08890:  MOVLW  0A
08892:  ADDWF  x6D,F
.................... Rebote = true; 
08894:  BSF    35.0
.................... } // si ok 
.................... } //rebote falso 
....................  
.................... if (Rebote == false){ 
08896:  BTFSC  35.0
08898:  BRA    88C4
.................... if (input(CANCEL) == 0){ // salgo al toque con cancel 
0889A:  BSF    F93.0
0889C:  BTFSC  F81.0
0889E:  BRA    88C4
.................... if (submenu < 10) { 
088A0:  MOVF   x6D,W
088A2:  SUBLW  09
088A4:  BNC   88AE
.................... Menu = 32; 
088A6:  MOVLW  20
088A8:  MOVWF  28
.................... submenu = 100; 
088AA:  MOVLW  64
088AC:  MOVWF  x6D
.................... }  
.................... if (submenu > 10) submenu = submenu - 10; 
088AE:  MOVF   x6D,W
088B0:  SUBLW  0A
088B2:  BC    88B8
088B4:  MOVLW  0A
088B6:  SUBWF  x6D,F
.................... if (submenu > 10) submenu = submenu - 10; 
088B8:  MOVF   x6D,W
088BA:  SUBLW  0A
088BC:  BC    88C2
088BE:  MOVLW  0A
088C0:  SUBWF  x6D,F
.................... Rebote = true; 
088C2:  BSF    35.0
.................... } // si cancel 
.................... } 
....................  
....................  
.................... if (Rebote == false){ 
088C4:  BTFSC  35.0
088C6:  BRA    88F4
.................... if (input(ARRIBA) == 0){ // aprieto arriba 
088C8:  BSF    F93.3
088CA:  BTFSC  F81.3
088CC:  BRA    88F4
.................... if (submenu < 10) { // es menor que 10 
088CE:  MOVF   x6D,W
088D0:  SUBLW  09
088D2:  BNC   88E2
.................... submenu = submenu - 1; 
088D4:  MOVLW  01
088D6:  SUBWF  x6D,F
.................... if (submenu == 0) submenu = 1; 
088D8:  MOVF   x6D,F
088DA:  BNZ   88E0
088DC:  MOVLW  01
088DE:  MOVWF  x6D
.................... } else { // submenu es mayor que 10 
088E0:  BRA    88F2
.................... if (submenu > 20){ 
088E2:  MOVF   x6D,W
088E4:  SUBLW  14
088E6:  BC    88EE
.................... submenu = submenu - 10; 
088E8:  MOVLW  0A
088EA:  SUBWF  x6D,F
.................... } else submenu = submenu + 10; 
088EC:  BRA    88F2
088EE:  MOVLW  0A
088F0:  ADDWF  x6D,F
.................... } 
.................... Rebote = true; 
088F2:  BSF    35.0
.................... } // si Arriba 
.................... } // rebote falso 
....................  
....................  
....................  
.................... if (Rebote == false){ 
088F4:  BTFSC  35.0
088F6:  BRA    8926
.................... if (input(ABAJO) == 0){ // aprieto abajo 
088F8:  BSF    F93.2
088FA:  BTFSC  F81.2
088FC:  BRA    8926
.................... if (submenu < 10) { // es menor que 10 
088FE:  MOVF   x6D,W
08900:  SUBLW  09
08902:  BNC   8914
.................... submenu = submenu + 1; 
08904:  MOVLW  01
08906:  ADDWF  x6D,F
.................... if (submenu == 9) submenu = 8; 
08908:  MOVF   x6D,W
0890A:  SUBLW  09
0890C:  BNZ   8912
0890E:  MOVLW  08
08910:  MOVWF  x6D
.................... } else { // submenu es mayor que 10 
08912:  BRA    8924
.................... if (submenu > 20){ 
08914:  MOVF   x6D,W
08916:  SUBLW  14
08918:  BC    8920
.................... submenu = submenu - 10; 
0891A:  MOVLW  0A
0891C:  SUBWF  x6D,F
.................... } else submenu = submenu + 10; 
0891E:  BRA    8924
08920:  MOVLW  0A
08922:  ADDWF  x6D,F
.................... } 
.................... Rebote = true; 
08924:  BSF    35.0
08926:  CLRF   19
08928:  BTFSC  FF2.7
0892A:  BSF    19.7
0892C:  BCF    FF2.7
.................... } // si Arriba 
.................... } // rebote falso 
....................  
.................... ////////////////////////////////// GRAFICA //////////////////////////////////////// 
.................... lcd_gotoxy(1,1); 
0892E:  MOVLW  01
08930:  MOVWF  xA0
08932:  MOVWF  xA1
08934:  MOVLB  0
08936:  CALL   156C
0893A:  BTFSC  19.7
0893C:  BSF    FF2.7
.................... printf(lcd_putc, "== Control Grupal =="); 
0893E:  MOVLW  CC
08940:  MOVWF  FF6
08942:  MOVLW  0A
08944:  MOVWF  FF7
08946:  CALL   3E86
0894A:  CLRF   19
0894C:  BTFSC  FF2.7
0894E:  BSF    19.7
08950:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
08952:  MOVLW  01
08954:  MOVLB  1
08956:  MOVWF  xA0
08958:  MOVLW  02
0895A:  MOVWF  xA1
0895C:  MOVLB  0
0895E:  CALL   156C
08962:  BTFSC  19.7
08964:  BSF    FF2.7
.................... if ((submenu == 11) || (submenu == 21)) printf(lcd_putc, "   %cGrupo? Todas!   ",143); 
08966:  MOVLB  1
08968:  MOVF   x6D,W
0896A:  SUBLW  0B
0896C:  BZ    8974
0896E:  MOVF   x6D,W
08970:  SUBLW  15
08972:  BNZ   89A8
08974:  MOVLW  E2
08976:  MOVWF  FF6
08978:  MOVLW  0A
0897A:  MOVWF  FF7
0897C:  MOVLW  03
0897E:  MOVWF  x90
08980:  MOVLB  0
08982:  CALL   44F0
08986:  MOVLW  8F
08988:  MOVLB  1
0898A:  MOVWF  x93
0898C:  MOVLB  0
0898E:  CALL   3DE6
08992:  MOVLW  E7
08994:  MOVWF  FF6
08996:  MOVLW  0A
08998:  MOVWF  FF7
0899A:  MOVLW  10
0899C:  MOVLB  1
0899E:  MOVWF  x90
089A0:  MOVLB  0
089A2:  CALL   44F0
089A6:  MOVLB  1
.................... if ((submenu == 12) || (submenu == 22)) printf(lcd_putc, "   %cGrupo? Perim Jar",143); 
089A8:  MOVF   x6D,W
089AA:  SUBLW  0C
089AC:  BZ    89B4
089AE:  MOVF   x6D,W
089B0:  SUBLW  16
089B2:  BNZ   89E8
089B4:  MOVLW  F8
089B6:  MOVWF  FF6
089B8:  MOVLW  0A
089BA:  MOVWF  FF7
089BC:  MOVLW  03
089BE:  MOVWF  x90
089C0:  MOVLB  0
089C2:  CALL   44F0
089C6:  MOVLW  8F
089C8:  MOVLB  1
089CA:  MOVWF  x93
089CC:  MOVLB  0
089CE:  CALL   3DE6
089D2:  MOVLW  FD
089D4:  MOVWF  FF6
089D6:  MOVLW  0A
089D8:  MOVWF  FF7
089DA:  MOVLW  10
089DC:  MOVLB  1
089DE:  MOVWF  x90
089E0:  MOVLB  0
089E2:  CALL   44F0
089E6:  MOVLB  1
.................... if ((submenu == 13) || (submenu == 23)) printf(lcd_putc, "   %cGrupo? Perim Fre",143); 
089E8:  MOVF   x6D,W
089EA:  SUBLW  0D
089EC:  BZ    89F4
089EE:  MOVF   x6D,W
089F0:  SUBLW  17
089F2:  BNZ   8A28
089F4:  MOVLW  0E
089F6:  MOVWF  FF6
089F8:  MOVLW  0B
089FA:  MOVWF  FF7
089FC:  MOVLW  03
089FE:  MOVWF  x90
08A00:  MOVLB  0
08A02:  CALL   44F0
08A06:  MOVLW  8F
08A08:  MOVLB  1
08A0A:  MOVWF  x93
08A0C:  MOVLB  0
08A0E:  CALL   3DE6
08A12:  MOVLW  13
08A14:  MOVWF  FF6
08A16:  MOVLW  0B
08A18:  MOVWF  FF7
08A1A:  MOVLW  10
08A1C:  MOVLB  1
08A1E:  MOVWF  x90
08A20:  MOVLB  0
08A22:  CALL   44F0
08A26:  MOVLB  1
.................... if ((submenu == 14) || (submenu == 24)) printf(lcd_putc, "   %cGrupo? Jardin   ",143); 
08A28:  MOVF   x6D,W
08A2A:  SUBLW  0E
08A2C:  BZ    8A34
08A2E:  MOVF   x6D,W
08A30:  SUBLW  18
08A32:  BNZ   8A68
08A34:  MOVLW  24
08A36:  MOVWF  FF6
08A38:  MOVLW  0B
08A3A:  MOVWF  FF7
08A3C:  MOVLW  03
08A3E:  MOVWF  x90
08A40:  MOVLB  0
08A42:  CALL   44F0
08A46:  MOVLW  8F
08A48:  MOVLB  1
08A4A:  MOVWF  x93
08A4C:  MOVLB  0
08A4E:  CALL   3DE6
08A52:  MOVLW  29
08A54:  MOVWF  FF6
08A56:  MOVLW  0B
08A58:  MOVWF  FF7
08A5A:  MOVLW  10
08A5C:  MOVLB  1
08A5E:  MOVWF  x90
08A60:  MOVLB  0
08A62:  CALL   44F0
08A66:  MOVLB  1
.................... if ((submenu == 15) || (submenu == 25)) printf(lcd_putc, "   %cGrupo? Auto (1) ",143); 
08A68:  MOVF   x6D,W
08A6A:  SUBLW  0F
08A6C:  BZ    8A74
08A6E:  MOVF   x6D,W
08A70:  SUBLW  19
08A72:  BNZ   8AA8
08A74:  MOVLW  3A
08A76:  MOVWF  FF6
08A78:  MOVLW  0B
08A7A:  MOVWF  FF7
08A7C:  MOVLW  03
08A7E:  MOVWF  x90
08A80:  MOVLB  0
08A82:  CALL   44F0
08A86:  MOVLW  8F
08A88:  MOVLB  1
08A8A:  MOVWF  x93
08A8C:  MOVLB  0
08A8E:  CALL   3DE6
08A92:  MOVLW  3F
08A94:  MOVWF  FF6
08A96:  MOVLW  0B
08A98:  MOVWF  FF7
08A9A:  MOVLW  10
08A9C:  MOVLB  1
08A9E:  MOVWF  x90
08AA0:  MOVLB  0
08AA2:  CALL   44F0
08AA6:  MOVLB  1
.................... if ((submenu == 16) || (submenu == 26)) printf(lcd_putc, "   %cGrupo? Auto (2) ",143); 
08AA8:  MOVF   x6D,W
08AAA:  SUBLW  10
08AAC:  BZ    8AB4
08AAE:  MOVF   x6D,W
08AB0:  SUBLW  1A
08AB2:  BNZ   8AE8
08AB4:  MOVLW  50
08AB6:  MOVWF  FF6
08AB8:  MOVLW  0B
08ABA:  MOVWF  FF7
08ABC:  MOVLW  03
08ABE:  MOVWF  x90
08AC0:  MOVLB  0
08AC2:  CALL   44F0
08AC6:  MOVLW  8F
08AC8:  MOVLB  1
08ACA:  MOVWF  x93
08ACC:  MOVLB  0
08ACE:  CALL   3DE6
08AD2:  MOVLW  55
08AD4:  MOVWF  FF6
08AD6:  MOVLW  0B
08AD8:  MOVWF  FF7
08ADA:  MOVLW  10
08ADC:  MOVLB  1
08ADE:  MOVWF  x90
08AE0:  MOVLB  0
08AE2:  CALL   44F0
08AE6:  MOVLB  1
.................... if ((submenu == 17) || (submenu == 27)) printf(lcd_putc, "   %cGrupo? Auto (3) ",143); 
08AE8:  MOVF   x6D,W
08AEA:  SUBLW  11
08AEC:  BZ    8AF4
08AEE:  MOVF   x6D,W
08AF0:  SUBLW  1B
08AF2:  BNZ   8B28
08AF4:  MOVLW  66
08AF6:  MOVWF  FF6
08AF8:  MOVLW  0B
08AFA:  MOVWF  FF7
08AFC:  MOVLW  03
08AFE:  MOVWF  x90
08B00:  MOVLB  0
08B02:  CALL   44F0
08B06:  MOVLW  8F
08B08:  MOVLB  1
08B0A:  MOVWF  x93
08B0C:  MOVLB  0
08B0E:  CALL   3DE6
08B12:  MOVLW  6B
08B14:  MOVWF  FF6
08B16:  MOVLW  0B
08B18:  MOVWF  FF7
08B1A:  MOVLW  10
08B1C:  MOVLB  1
08B1E:  MOVWF  x90
08B20:  MOVLB  0
08B22:  CALL   44F0
08B26:  MOVLB  1
.................... if ((submenu == 18) || (submenu == 28)) printf(lcd_putc, "   %cGrupo? Auto (4) ",143); 
08B28:  MOVF   x6D,W
08B2A:  SUBLW  12
08B2C:  BZ    8B34
08B2E:  MOVF   x6D,W
08B30:  SUBLW  1C
08B32:  BNZ   8B68
08B34:  MOVLW  7C
08B36:  MOVWF  FF6
08B38:  MOVLW  0B
08B3A:  MOVWF  FF7
08B3C:  MOVLW  03
08B3E:  MOVWF  x90
08B40:  MOVLB  0
08B42:  CALL   44F0
08B46:  MOVLW  8F
08B48:  MOVLB  1
08B4A:  MOVWF  x93
08B4C:  MOVLB  0
08B4E:  CALL   3DE6
08B52:  MOVLW  81
08B54:  MOVWF  FF6
08B56:  MOVLW  0B
08B58:  MOVWF  FF7
08B5A:  MOVLW  10
08B5C:  MOVLB  1
08B5E:  MOVWF  x90
08B60:  MOVLB  0
08B62:  CALL   44F0
08B66:  MOVLB  1
.................... if (submenu == 1) { 
08B68:  DECFSZ x6D,W
08B6A:  BRA    8BDA
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Todas!   ",143); 
08B6C:  BTFSS  49.0
08B6E:  BRA    8BA6
08B70:  MOVLW  92
08B72:  MOVWF  FF6
08B74:  MOVLW  0B
08B76:  MOVWF  FF7
08B78:  MOVLW  03
08B7A:  MOVWF  x90
08B7C:  MOVLB  0
08B7E:  CALL   44F0
08B82:  MOVLW  8F
08B84:  MOVLB  1
08B86:  MOVWF  x93
08B88:  MOVLB  0
08B8A:  CALL   3DE6
08B8E:  MOVLW  97
08B90:  MOVWF  FF6
08B92:  MOVLW  0B
08B94:  MOVWF  FF7
08B96:  MOVLW  10
08B98:  MOVLB  1
08B9A:  MOVWF  x90
08B9C:  MOVLB  0
08B9E:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08BA2:  BRA    8BD8
08BA4:  MOVLB  1
08BA6:  MOVLW  A8
08BA8:  MOVWF  FF6
08BAA:  MOVLW  0B
08BAC:  MOVWF  FF7
08BAE:  MOVLW  03
08BB0:  MOVWF  x90
08BB2:  MOVLB  0
08BB4:  CALL   44F0
08BB8:  MOVLW  8F
08BBA:  MOVLB  1
08BBC:  MOVWF  x93
08BBE:  MOVLB  0
08BC0:  CALL   3DE6
08BC4:  MOVLW  AD
08BC6:  MOVWF  FF6
08BC8:  MOVLW  0B
08BCA:  MOVWF  FF7
08BCC:  MOVLW  10
08BCE:  MOVLB  1
08BD0:  MOVWF  x90
08BD2:  MOVLB  0
08BD4:  CALL   44F0
08BD8:  MOVLB  1
.................... } 
.................... if (submenu == 2) { 
08BDA:  MOVF   x6D,W
08BDC:  SUBLW  02
08BDE:  BNZ   8C4E
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Perim Jar",143); 
08BE0:  BTFSS  49.0
08BE2:  BRA    8C1A
08BE4:  MOVLW  BE
08BE6:  MOVWF  FF6
08BE8:  MOVLW  0B
08BEA:  MOVWF  FF7
08BEC:  MOVLW  03
08BEE:  MOVWF  x90
08BF0:  MOVLB  0
08BF2:  CALL   44F0
08BF6:  MOVLW  8F
08BF8:  MOVLB  1
08BFA:  MOVWF  x93
08BFC:  MOVLB  0
08BFE:  CALL   3DE6
08C02:  MOVLW  C3
08C04:  MOVWF  FF6
08C06:  MOVLW  0B
08C08:  MOVWF  FF7
08C0A:  MOVLW  10
08C0C:  MOVLB  1
08C0E:  MOVWF  x90
08C10:  MOVLB  0
08C12:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08C16:  BRA    8C4C
08C18:  MOVLB  1
08C1A:  MOVLW  D4
08C1C:  MOVWF  FF6
08C1E:  MOVLW  0B
08C20:  MOVWF  FF7
08C22:  MOVLW  03
08C24:  MOVWF  x90
08C26:  MOVLB  0
08C28:  CALL   44F0
08C2C:  MOVLW  8F
08C2E:  MOVLB  1
08C30:  MOVWF  x93
08C32:  MOVLB  0
08C34:  CALL   3DE6
08C38:  MOVLW  D9
08C3A:  MOVWF  FF6
08C3C:  MOVLW  0B
08C3E:  MOVWF  FF7
08C40:  MOVLW  10
08C42:  MOVLB  1
08C44:  MOVWF  x90
08C46:  MOVLB  0
08C48:  CALL   44F0
08C4C:  MOVLB  1
.................... } 
.................... if (submenu == 3) { 
08C4E:  MOVF   x6D,W
08C50:  SUBLW  03
08C52:  BNZ   8CC2
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Perim Fre",143); 
08C54:  BTFSS  49.0
08C56:  BRA    8C8E
08C58:  MOVLW  EA
08C5A:  MOVWF  FF6
08C5C:  MOVLW  0B
08C5E:  MOVWF  FF7
08C60:  MOVLW  03
08C62:  MOVWF  x90
08C64:  MOVLB  0
08C66:  CALL   44F0
08C6A:  MOVLW  8F
08C6C:  MOVLB  1
08C6E:  MOVWF  x93
08C70:  MOVLB  0
08C72:  CALL   3DE6
08C76:  MOVLW  EF
08C78:  MOVWF  FF6
08C7A:  MOVLW  0B
08C7C:  MOVWF  FF7
08C7E:  MOVLW  10
08C80:  MOVLB  1
08C82:  MOVWF  x90
08C84:  MOVLB  0
08C86:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08C8A:  BRA    8CC0
08C8C:  MOVLB  1
08C8E:  MOVLW  00
08C90:  MOVWF  FF6
08C92:  MOVLW  0C
08C94:  MOVWF  FF7
08C96:  MOVLW  03
08C98:  MOVWF  x90
08C9A:  MOVLB  0
08C9C:  CALL   44F0
08CA0:  MOVLW  8F
08CA2:  MOVLB  1
08CA4:  MOVWF  x93
08CA6:  MOVLB  0
08CA8:  CALL   3DE6
08CAC:  MOVLW  05
08CAE:  MOVWF  FF6
08CB0:  MOVLW  0C
08CB2:  MOVWF  FF7
08CB4:  MOVLW  10
08CB6:  MOVLB  1
08CB8:  MOVWF  x90
08CBA:  MOVLB  0
08CBC:  CALL   44F0
08CC0:  MOVLB  1
.................... } 
.................... if (submenu == 4) { 
08CC2:  MOVF   x6D,W
08CC4:  SUBLW  04
08CC6:  BNZ   8D36
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Jardin   ",143); 
08CC8:  BTFSS  49.0
08CCA:  BRA    8D02
08CCC:  MOVLW  16
08CCE:  MOVWF  FF6
08CD0:  MOVLW  0C
08CD2:  MOVWF  FF7
08CD4:  MOVLW  03
08CD6:  MOVWF  x90
08CD8:  MOVLB  0
08CDA:  CALL   44F0
08CDE:  MOVLW  8F
08CE0:  MOVLB  1
08CE2:  MOVWF  x93
08CE4:  MOVLB  0
08CE6:  CALL   3DE6
08CEA:  MOVLW  1B
08CEC:  MOVWF  FF6
08CEE:  MOVLW  0C
08CF0:  MOVWF  FF7
08CF2:  MOVLW  10
08CF4:  MOVLB  1
08CF6:  MOVWF  x90
08CF8:  MOVLB  0
08CFA:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08CFE:  BRA    8D34
08D00:  MOVLB  1
08D02:  MOVLW  2C
08D04:  MOVWF  FF6
08D06:  MOVLW  0C
08D08:  MOVWF  FF7
08D0A:  MOVLW  03
08D0C:  MOVWF  x90
08D0E:  MOVLB  0
08D10:  CALL   44F0
08D14:  MOVLW  8F
08D16:  MOVLB  1
08D18:  MOVWF  x93
08D1A:  MOVLB  0
08D1C:  CALL   3DE6
08D20:  MOVLW  31
08D22:  MOVWF  FF6
08D24:  MOVLW  0C
08D26:  MOVWF  FF7
08D28:  MOVLW  10
08D2A:  MOVLB  1
08D2C:  MOVWF  x90
08D2E:  MOVLB  0
08D30:  CALL   44F0
08D34:  MOVLB  1
.................... } 
.................... if (submenu == 5) { 
08D36:  MOVF   x6D,W
08D38:  SUBLW  05
08D3A:  BNZ   8DAA
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Auto (1) ",143); 
08D3C:  BTFSS  49.0
08D3E:  BRA    8D76
08D40:  MOVLW  42
08D42:  MOVWF  FF6
08D44:  MOVLW  0C
08D46:  MOVWF  FF7
08D48:  MOVLW  03
08D4A:  MOVWF  x90
08D4C:  MOVLB  0
08D4E:  CALL   44F0
08D52:  MOVLW  8F
08D54:  MOVLB  1
08D56:  MOVWF  x93
08D58:  MOVLB  0
08D5A:  CALL   3DE6
08D5E:  MOVLW  47
08D60:  MOVWF  FF6
08D62:  MOVLW  0C
08D64:  MOVWF  FF7
08D66:  MOVLW  10
08D68:  MOVLB  1
08D6A:  MOVWF  x90
08D6C:  MOVLB  0
08D6E:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08D72:  BRA    8DA8
08D74:  MOVLB  1
08D76:  MOVLW  58
08D78:  MOVWF  FF6
08D7A:  MOVLW  0C
08D7C:  MOVWF  FF7
08D7E:  MOVLW  03
08D80:  MOVWF  x90
08D82:  MOVLB  0
08D84:  CALL   44F0
08D88:  MOVLW  8F
08D8A:  MOVLB  1
08D8C:  MOVWF  x93
08D8E:  MOVLB  0
08D90:  CALL   3DE6
08D94:  MOVLW  5D
08D96:  MOVWF  FF6
08D98:  MOVLW  0C
08D9A:  MOVWF  FF7
08D9C:  MOVLW  10
08D9E:  MOVLB  1
08DA0:  MOVWF  x90
08DA2:  MOVLB  0
08DA4:  CALL   44F0
08DA8:  MOVLB  1
.................... } 
.................... if (submenu == 6) { 
08DAA:  MOVF   x6D,W
08DAC:  SUBLW  06
08DAE:  BNZ   8E1E
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Auto (2) ",143); 
08DB0:  BTFSS  49.0
08DB2:  BRA    8DEA
08DB4:  MOVLW  6E
08DB6:  MOVWF  FF6
08DB8:  MOVLW  0C
08DBA:  MOVWF  FF7
08DBC:  MOVLW  03
08DBE:  MOVWF  x90
08DC0:  MOVLB  0
08DC2:  CALL   44F0
08DC6:  MOVLW  8F
08DC8:  MOVLB  1
08DCA:  MOVWF  x93
08DCC:  MOVLB  0
08DCE:  CALL   3DE6
08DD2:  MOVLW  73
08DD4:  MOVWF  FF6
08DD6:  MOVLW  0C
08DD8:  MOVWF  FF7
08DDA:  MOVLW  10
08DDC:  MOVLB  1
08DDE:  MOVWF  x90
08DE0:  MOVLB  0
08DE2:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08DE6:  BRA    8E1C
08DE8:  MOVLB  1
08DEA:  MOVLW  84
08DEC:  MOVWF  FF6
08DEE:  MOVLW  0C
08DF0:  MOVWF  FF7
08DF2:  MOVLW  03
08DF4:  MOVWF  x90
08DF6:  MOVLB  0
08DF8:  CALL   44F0
08DFC:  MOVLW  8F
08DFE:  MOVLB  1
08E00:  MOVWF  x93
08E02:  MOVLB  0
08E04:  CALL   3DE6
08E08:  MOVLW  89
08E0A:  MOVWF  FF6
08E0C:  MOVLW  0C
08E0E:  MOVWF  FF7
08E10:  MOVLW  10
08E12:  MOVLB  1
08E14:  MOVWF  x90
08E16:  MOVLB  0
08E18:  CALL   44F0
08E1C:  MOVLB  1
.................... } 
.................... if (submenu == 7) { 
08E1E:  MOVF   x6D,W
08E20:  SUBLW  07
08E22:  BNZ   8E92
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Auto (3) ",143); 
08E24:  BTFSS  49.0
08E26:  BRA    8E5E
08E28:  MOVLW  9A
08E2A:  MOVWF  FF6
08E2C:  MOVLW  0C
08E2E:  MOVWF  FF7
08E30:  MOVLW  03
08E32:  MOVWF  x90
08E34:  MOVLB  0
08E36:  CALL   44F0
08E3A:  MOVLW  8F
08E3C:  MOVLB  1
08E3E:  MOVWF  x93
08E40:  MOVLB  0
08E42:  CALL   3DE6
08E46:  MOVLW  9F
08E48:  MOVWF  FF6
08E4A:  MOVLW  0C
08E4C:  MOVWF  FF7
08E4E:  MOVLW  10
08E50:  MOVLB  1
08E52:  MOVWF  x90
08E54:  MOVLB  0
08E56:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08E5A:  BRA    8E90
08E5C:  MOVLB  1
08E5E:  MOVLW  B0
08E60:  MOVWF  FF6
08E62:  MOVLW  0C
08E64:  MOVWF  FF7
08E66:  MOVLW  03
08E68:  MOVWF  x90
08E6A:  MOVLB  0
08E6C:  CALL   44F0
08E70:  MOVLW  8F
08E72:  MOVLB  1
08E74:  MOVWF  x93
08E76:  MOVLB  0
08E78:  CALL   3DE6
08E7C:  MOVLW  B5
08E7E:  MOVWF  FF6
08E80:  MOVLW  0C
08E82:  MOVWF  FF7
08E84:  MOVLW  10
08E86:  MOVLB  1
08E88:  MOVWF  x90
08E8A:  MOVLB  0
08E8C:  CALL   44F0
08E90:  MOVLB  1
.................... } 
.................... if (submenu == 8) { 
08E92:  MOVF   x6D,W
08E94:  SUBLW  08
08E96:  BNZ   8F06
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " ~ %cGrupo? Auto (4) ",143); 
08E98:  BTFSS  49.0
08E9A:  BRA    8ED2
08E9C:  MOVLW  C6
08E9E:  MOVWF  FF6
08EA0:  MOVLW  0C
08EA2:  MOVWF  FF7
08EA4:  MOVLW  03
08EA6:  MOVWF  x90
08EA8:  MOVLB  0
08EAA:  CALL   44F0
08EAE:  MOVLW  8F
08EB0:  MOVLB  1
08EB2:  MOVWF  x93
08EB4:  MOVLB  0
08EB6:  CALL   3DE6
08EBA:  MOVLW  CB
08EBC:  MOVWF  FF6
08EBE:  MOVLW  0C
08EC0:  MOVWF  FF7
08EC2:  MOVLW  10
08EC4:  MOVLB  1
08EC6:  MOVWF  x90
08EC8:  MOVLB  0
08ECA:  CALL   44F0
.................... else printf(lcd_putc, " ~ %cGrupo?          ",143); 
08ECE:  BRA    8F04
08ED0:  MOVLB  1
08ED2:  MOVLW  DC
08ED4:  MOVWF  FF6
08ED6:  MOVLW  0C
08ED8:  MOVWF  FF7
08EDA:  MOVLW  03
08EDC:  MOVWF  x90
08EDE:  MOVLB  0
08EE0:  CALL   44F0
08EE4:  MOVLW  8F
08EE6:  MOVLB  1
08EE8:  MOVWF  x93
08EEA:  MOVLB  0
08EEC:  CALL   3DE6
08EF0:  MOVLW  E1
08EF2:  MOVWF  FF6
08EF4:  MOVLW  0C
08EF6:  MOVWF  FF7
08EF8:  MOVLW  10
08EFA:  MOVLB  1
08EFC:  MOVWF  x90
08EFE:  MOVLB  0
08F00:  CALL   44F0
08F04:  MOVLB  1
08F06:  CLRF   19
08F08:  BTFSC  FF2.7
08F0A:  BSF    19.7
08F0C:  BCF    FF2.7
.................... } 
.................... lcd_gotoxy(1,3); 
08F0E:  MOVLW  01
08F10:  MOVWF  xA0
08F12:  MOVLW  03
08F14:  MOVWF  xA1
08F16:  MOVLB  0
08F18:  CALL   156C
08F1C:  BTFSC  19.7
08F1E:  BSF    FF2.7
.................... if ((submenu > 10) && (submenu < 20)) printf(lcd_putc, " ~ "); 
08F20:  MOVLB  1
08F22:  MOVF   x6D,W
08F24:  SUBLW  0A
08F26:  BC    8F40
08F28:  MOVF   x6D,W
08F2A:  SUBLW  13
08F2C:  BNC   8F40
08F2E:  MOVLW  F2
08F30:  MOVWF  FF6
08F32:  MOVLW  0C
08F34:  MOVWF  FF7
08F36:  MOVLB  0
08F38:  CALL   3E86
.................... else printf(lcd_putc, "   "); 
08F3C:  BRA    8F4E
08F3E:  MOVLB  1
08F40:  MOVLW  F6
08F42:  MOVWF  FF6
08F44:  MOVLW  0C
08F46:  MOVWF  FF7
08F48:  MOVLB  0
08F4A:  CALL   3E86
08F4E:  CLRF   19
08F50:  BTFSC  FF2.7
08F52:  BSF    19.7
08F54:  BCF    FF2.7
.................... lcd_gotoxy(4,3); 
08F56:  MOVLW  04
08F58:  MOVLB  1
08F5A:  MOVWF  xA0
08F5C:  MOVLW  03
08F5E:  MOVWF  xA1
08F60:  MOVLB  0
08F62:  CALL   156C
08F66:  BTFSC  19.7
08F68:  BSF    FF2.7
.................... printf(lcd_putc, "Apagar           "); 
08F6A:  MOVLW  FA
08F6C:  MOVWF  FF6
08F6E:  MOVLW  0C
08F70:  MOVWF  FF7
08F72:  CALL   3E86
08F76:  CLRF   19
08F78:  BTFSC  FF2.7
08F7A:  BSF    19.7
08F7C:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,4); 
08F7E:  MOVLW  01
08F80:  MOVLB  1
08F82:  MOVWF  xA0
08F84:  MOVLW  04
08F86:  MOVWF  xA1
08F88:  MOVLB  0
08F8A:  CALL   156C
08F8E:  BTFSC  19.7
08F90:  BSF    FF2.7
.................... if (submenu > 20) printf(lcd_putc, " ~ "); 
08F92:  MOVLB  1
08F94:  MOVF   x6D,W
08F96:  SUBLW  14
08F98:  BC    8FAC
08F9A:  MOVLW  0C
08F9C:  MOVWF  FF6
08F9E:  MOVLW  0D
08FA0:  MOVWF  FF7
08FA2:  MOVLB  0
08FA4:  CALL   3E86
.................... else printf(lcd_putc, "   "); 
08FA8:  BRA    8FBA
08FAA:  MOVLB  1
08FAC:  MOVLW  10
08FAE:  MOVWF  FF6
08FB0:  MOVLW  0D
08FB2:  MOVWF  FF7
08FB4:  MOVLB  0
08FB6:  CALL   3E86
08FBA:  CLRF   19
08FBC:  BTFSC  FF2.7
08FBE:  BSF    19.7
08FC0:  BCF    FF2.7
.................... lcd_gotoxy(4,4); 
08FC2:  MOVLW  04
08FC4:  MOVLB  1
08FC6:  MOVWF  xA0
08FC8:  MOVWF  xA1
08FCA:  MOVLB  0
08FCC:  CALL   156C
08FD0:  BTFSC  19.7
08FD2:  BSF    FF2.7
.................... printf(lcd_putc, "Encender         "); 
08FD4:  MOVLW  14
08FD6:  MOVWF  FF6
08FD8:  MOVLW  0D
08FDA:  MOVWF  FF7
08FDC:  CALL   3E86
.................... restart_wdt(); 
08FE0:  CLRWDT
.................... } // dentro de while 
08FE2:  MOVLB  1
08FE4:  GOTO   8258
....................  
.................... } // fn 
08FE8:  MOVLB  0
08FEA:  GOTO   E550 (RETURN)
....................  
....................  
.................... void LuzInt(){  // Configura la intensidad de las luces 
....................  
.................... LIMPIARLCD; 
*
0902C:  MOVLW  26
0902E:  MOVWF  FF6
09030:  MOVLW  0D
09032:  MOVWF  FF7
09034:  CALL   3E86
.................... int submenu = 33; 
.................... short editar = false; 
09038:  MOVLW  21
0903A:  MOVLB  1
0903C:  MOVWF  x6D
0903E:  BCF    x6E.0
.................... //short ON[99]; 
....................  
.................... while (submenu < 94){ // hasta llenar todas las luces 
09040:  MOVF   x6D,W
09042:  SUBLW  5D
09044:  BTFSS  FD8.0
09046:  BRA    9622
....................  
.................... restart_wdt(); 
09048:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0904A:  BSF    F93.3
0904C:  BTFSS  F81.3
0904E:  BRA    9062
09050:  BSF    F93.2
09052:  BTFSS  F81.2
09054:  BRA    9062
09056:  BSF    F93.1
09058:  BTFSS  F81.1
0905A:  BRA    9062
0905C:  BSF    F93.0
0905E:  BTFSC  F81.0
09060:  BCF    35.0
....................  
.................... if (Rebote == false){ 
09062:  BTFSC  35.0
09064:  BRA    9078
.................... if (input(OOKK) == 0){  
09066:  BSF    F93.1
09068:  BTFSC  F81.1
0906A:  BRA    9078
.................... if (editar == false) editar = true; 
0906C:  BTFSC  x6E.0
0906E:  BRA    9074
09070:  BSF    x6E.0
.................... else editar = false; 
09072:  BRA    9076
09074:  BCF    x6E.0
.................... Rebote = true; 
09076:  BSF    35.0
.................... } // si ok 
.................... } 
....................  
.................... if (Rebote == false){ 
09078:  BTFSC  35.0
0907A:  BRA    9094
.................... if (input(CANCEL) == 0){ // salgo al toque con cancel 
0907C:  BSF    F93.0
0907E:  BTFSC  F81.0
09080:  BRA    9094
.................... if (editar == true) editar = false; 
09082:  BTFSS  x6E.0
09084:  BRA    908A
09086:  BCF    x6E.0
.................... else { 
09088:  BRA    9092
.................... Menu = 33; 
0908A:  MOVLW  21
0908C:  MOVWF  28
.................... submenu = 95; 
0908E:  MOVLW  5F
09090:  MOVWF  x6D
.................... } 
.................... Rebote = true; 
09092:  BSF    35.0
.................... } // si cancel 
.................... } 
....................  
.................... if (Rebote == false){ 
09094:  BTFSC  35.0
09096:  BRA    91CE
.................... if (input(ABAJO) == 0){ // si abajo 
09098:  BSF    F93.2
0909A:  BTFSC  F81.2
0909C:  BRA    91CE
.................... if (editar){ // editar habilitado 
0909E:  BTFSS  x6E.0
090A0:  BRA    91BC
.................... if ((IntLuz[submenu] != 27) && (IntLuz[submenu] != 127)) IntLuz[submenu] = IntLuz[submenu] + 3; 
090A2:  CLRF   03
090A4:  MOVF   x6D,W
090A6:  ADDLW  4A
090A8:  MOVWF  FE9
090AA:  MOVLW  00
090AC:  ADDWFC 03,W
090AE:  MOVWF  FEA
090B0:  MOVF   FEF,W
090B2:  SUBLW  1B
090B4:  BZ    90F6
090B6:  CLRF   03
090B8:  MOVF   x6D,W
090BA:  ADDLW  4A
090BC:  MOVWF  FE9
090BE:  MOVLW  00
090C0:  ADDWFC 03,W
090C2:  MOVWF  FEA
090C4:  MOVF   FEF,W
090C6:  SUBLW  7F
090C8:  BZ    90F6
090CA:  CLRF   03
090CC:  MOVF   x6D,W
090CE:  ADDLW  4A
090D0:  MOVWF  01
090D2:  MOVLW  00
090D4:  ADDWFC 03,F
090D6:  MOVFF  03,170
090DA:  CLRF   03
090DC:  MOVF   x6D,W
090DE:  ADDLW  4A
090E0:  MOVWF  FE9
090E2:  MOVLW  00
090E4:  ADDWFC 03,W
090E6:  MOVWF  FEA
090E8:  MOVLW  03
090EA:  ADDWF  FEF,W
090EC:  MOVFF  170,FEA
090F0:  MOVFF  01,FE9
090F4:  MOVWF  FEF
.................... if (IntLuz[submenu] > 99) BusData(submenu,IntLuz[submenu]-100); //printf("%c%c%c%c", 250, submenu, IntLuz[submenu]-100, submenu + IntLuz[submenu]-100); // enviamos la intensidad sin el 100 
090F6:  CLRF   03
090F8:  MOVF   x6D,W
090FA:  ADDLW  4A
090FC:  MOVWF  FE9
090FE:  MOVLW  00
09100:  ADDWFC 03,W
09102:  MOVWF  FEA
09104:  MOVF   FEF,W
09106:  SUBLW  63
09108:  BC    9138
0910A:  CLRF   03
0910C:  MOVF   x6D,W
0910E:  ADDLW  4A
09110:  MOVWF  FE9
09112:  MOVLW  00
09114:  ADDWFC 03,W
09116:  MOVWF  FEA
09118:  MOVLW  64
0911A:  SUBWF  FEF,W
0911C:  MOVWF  x6F
0911E:  CLRF   19
09120:  BTFSC  FF2.7
09122:  BSF    19.7
09124:  BCF    FF2.7
09126:  MOVFF  16D,1A3
0912A:  MOVWF  xA4
0912C:  MOVLB  0
0912E:  CALL   15F6
09132:  BTFSC  19.7
09134:  BSF    FF2.7
09136:  MOVLB  1
.................... if (IntLuz[submenu] < 99) BusData(submenu,IntLuz[submenu]); //printf("%c%c%c%c", 250, submenu, IntLuz[submenu], submenu + IntLuz[submenu]); // enviamos la intensidad apagada 
09138:  CLRF   03
0913A:  MOVF   x6D,W
0913C:  ADDLW  4A
0913E:  MOVWF  FE9
09140:  MOVLW  00
09142:  ADDWFC 03,W
09144:  MOVWF  FEA
09146:  MOVF   FEF,W
09148:  SUBLW  62
0914A:  BNC   917A
0914C:  CLRF   03
0914E:  MOVF   x6D,W
09150:  ADDLW  4A
09152:  MOVWF  FE9
09154:  MOVLW  00
09156:  ADDWFC 03,W
09158:  MOVWF  FEA
0915A:  MOVFF  FEF,16F
0915E:  CLRF   19
09160:  BTFSC  FF2.7
09162:  BSF    19.7
09164:  BCF    FF2.7
09166:  MOVFF  16D,1A3
0916A:  MOVFF  16F,1A4
0916E:  MOVLB  0
09170:  CALL   15F6
09174:  BTFSC  19.7
09176:  BSF    FF2.7
09178:  MOVLB  1
.................... write_eeprom(submenu,IntLuz[submenu]); 
0917A:  CLRF   03
0917C:  MOVF   x6D,W
0917E:  ADDLW  4A
09180:  MOVWF  FE9
09182:  MOVLW  00
09184:  ADDWFC 03,W
09186:  MOVWF  FEA
09188:  MOVFF  FEF,16F
0918C:  MOVF   FF2,W
0918E:  MOVWF  00
09190:  BCF    FF2.7
09192:  CLRF   FAA
09194:  MOVFF  16D,FA9
09198:  MOVFF  16F,FA8
0919C:  BCF    FA6.6
0919E:  BCF    FA6.7
091A0:  BSF    FA6.2
091A2:  MOVLB  F
091A4:  MOVLW  55
091A6:  MOVWF  FA7
091A8:  MOVLW  AA
091AA:  MOVWF  FA7
091AC:  BSF    FA6.1
091AE:  BTFSC  FA6.1
091B0:  BRA    91AE
091B2:  BCF    FA6.2
091B4:  MOVF   00,W
091B6:  IORWF  FF2,F
.................... } else { // editar no habilitado 
091B8:  BRA    91CA
091BA:  MOVLB  1
.................... ++submenu; 
091BC:  INCF   x6D,F
.................... if (submenu == 94) submenu = 33; 
091BE:  MOVF   x6D,W
091C0:  SUBLW  5E
091C2:  BNZ   91C8
091C4:  MOVLW  21
091C6:  MOVWF  x6D
091C8:  MOVLB  F
.................... } 
.................... Rebote = true; 
091CA:  BSF    35.0
091CC:  MOVLB  1
.................... } // si Abajo 
.................... } // si rebote 
....................  
....................  
.................... if (Rebote == false){ 
091CE:  BTFSC  35.0
091D0:  BRA    9306
.................... if (input(ARRIBA) == 0){ // si arriba 
091D2:  BSF    F93.3
091D4:  BTFSC  F81.3
091D6:  BRA    9306
.................... if (editar){ // editar habilitado 
091D8:  BTFSS  x6E.0
091DA:  BRA    92F4
.................... if ((IntLuz[submenu] != 0 ) && (IntLuz[submenu] != 100 )) IntLuz[submenu] = IntLuz[submenu] - 3; 
091DC:  CLRF   03
091DE:  MOVF   x6D,W
091E0:  ADDLW  4A
091E2:  MOVWF  FE9
091E4:  MOVLW  00
091E6:  ADDWFC 03,W
091E8:  MOVWF  FEA
091EA:  MOVF   FEF,F
091EC:  BZ    922E
091EE:  CLRF   03
091F0:  MOVF   x6D,W
091F2:  ADDLW  4A
091F4:  MOVWF  FE9
091F6:  MOVLW  00
091F8:  ADDWFC 03,W
091FA:  MOVWF  FEA
091FC:  MOVF   FEF,W
091FE:  SUBLW  64
09200:  BZ    922E
09202:  CLRF   03
09204:  MOVF   x6D,W
09206:  ADDLW  4A
09208:  MOVWF  01
0920A:  MOVLW  00
0920C:  ADDWFC 03,F
0920E:  MOVFF  03,170
09212:  CLRF   03
09214:  MOVF   x6D,W
09216:  ADDLW  4A
09218:  MOVWF  FE9
0921A:  MOVLW  00
0921C:  ADDWFC 03,W
0921E:  MOVWF  FEA
09220:  MOVLW  03
09222:  SUBWF  FEF,W
09224:  MOVFF  170,FEA
09228:  MOVFF  01,FE9
0922C:  MOVWF  FEF
.................... if (IntLuz[submenu] > 99) BusData(submenu,IntLuz[submenu]-100); //printf("%c%c%c%c", 250, submenu, IntLuz[submenu]-100, submenu + IntLuz[submenu]-100); // enviamos la intensidad sin el 100 
0922E:  CLRF   03
09230:  MOVF   x6D,W
09232:  ADDLW  4A
09234:  MOVWF  FE9
09236:  MOVLW  00
09238:  ADDWFC 03,W
0923A:  MOVWF  FEA
0923C:  MOVF   FEF,W
0923E:  SUBLW  63
09240:  BC    9270
09242:  CLRF   03
09244:  MOVF   x6D,W
09246:  ADDLW  4A
09248:  MOVWF  FE9
0924A:  MOVLW  00
0924C:  ADDWFC 03,W
0924E:  MOVWF  FEA
09250:  MOVLW  64
09252:  SUBWF  FEF,W
09254:  MOVWF  x6F
09256:  CLRF   19
09258:  BTFSC  FF2.7
0925A:  BSF    19.7
0925C:  BCF    FF2.7
0925E:  MOVFF  16D,1A3
09262:  MOVWF  xA4
09264:  MOVLB  0
09266:  CALL   15F6
0926A:  BTFSC  19.7
0926C:  BSF    FF2.7
0926E:  MOVLB  1
.................... if (IntLuz[submenu] < 99) BusData(submenu,IntLuz[submenu]); //printf("%c%c%c%c", 250, submenu, IntLuz[submenu], submenu + IntLuz[submenu]); // enviamos la intensidad apagada 
09270:  CLRF   03
09272:  MOVF   x6D,W
09274:  ADDLW  4A
09276:  MOVWF  FE9
09278:  MOVLW  00
0927A:  ADDWFC 03,W
0927C:  MOVWF  FEA
0927E:  MOVF   FEF,W
09280:  SUBLW  62
09282:  BNC   92B2
09284:  CLRF   03
09286:  MOVF   x6D,W
09288:  ADDLW  4A
0928A:  MOVWF  FE9
0928C:  MOVLW  00
0928E:  ADDWFC 03,W
09290:  MOVWF  FEA
09292:  MOVFF  FEF,16F
09296:  CLRF   19
09298:  BTFSC  FF2.7
0929A:  BSF    19.7
0929C:  BCF    FF2.7
0929E:  MOVFF  16D,1A3
092A2:  MOVFF  16F,1A4
092A6:  MOVLB  0
092A8:  CALL   15F6
092AC:  BTFSC  19.7
092AE:  BSF    FF2.7
092B0:  MOVLB  1
.................... write_eeprom(submenu,IntLuz[submenu]); 
092B2:  CLRF   03
092B4:  MOVF   x6D,W
092B6:  ADDLW  4A
092B8:  MOVWF  FE9
092BA:  MOVLW  00
092BC:  ADDWFC 03,W
092BE:  MOVWF  FEA
092C0:  MOVFF  FEF,16F
092C4:  MOVF   FF2,W
092C6:  MOVWF  00
092C8:  BCF    FF2.7
092CA:  CLRF   FAA
092CC:  MOVFF  16D,FA9
092D0:  MOVFF  16F,FA8
092D4:  BCF    FA6.6
092D6:  BCF    FA6.7
092D8:  BSF    FA6.2
092DA:  MOVLB  F
092DC:  MOVLW  55
092DE:  MOVWF  FA7
092E0:  MOVLW  AA
092E2:  MOVWF  FA7
092E4:  BSF    FA6.1
092E6:  BTFSC  FA6.1
092E8:  BRA    92E6
092EA:  BCF    FA6.2
092EC:  MOVF   00,W
092EE:  IORWF  FF2,F
.................... } else { // editar no habilitado 
092F0:  BRA    9302
092F2:  MOVLB  1
.................... --submenu; 
092F4:  DECF   x6D,F
.................... if (submenu == 32) submenu = 93; 
092F6:  MOVF   x6D,W
092F8:  SUBLW  20
092FA:  BNZ   9300
092FC:  MOVLW  5D
092FE:  MOVWF  x6D
09300:  MOVLB  F
.................... } 
.................... Rebote = true; 
09302:  BSF    35.0
09304:  MOVLB  1
09306:  CLRF   19
09308:  BTFSC  FF2.7
0930A:  BSF    19.7
0930C:  BCF    FF2.7
.................... } // si Abajo 
.................... } // si rebote 
....................  
.................... lcd_gotoxy(1,1); 
0930E:  MOVLW  01
09310:  MOVWF  xA0
09312:  MOVWF  xA1
09314:  MOVLB  0
09316:  CALL   156C
0931A:  BTFSC  19.7
0931C:  BSF    FF2.7
.................... printf(lcd_putc, "= Control de luces ="); 
0931E:  MOVLW  28
09320:  MOVWF  FF6
09322:  MOVLW  0D
09324:  MOVWF  FF7
09326:  CALL   3E86
0932A:  CLRF   19
0932C:  BTFSC  FF2.7
0932E:  BSF    19.7
09330:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
09332:  MOVLW  01
09334:  MOVLB  1
09336:  MOVWF  xA0
09338:  MOVLW  02
0933A:  MOVWF  xA1
0933C:  MOVLB  0
0933E:  CALL   156C
09342:  BTFSC  19.7
09344:  BSF    FF2.7
.................... printf(lcd_putc, "   Configurar la    "); 
09346:  MOVLW  3E
09348:  MOVWF  FF6
0934A:  MOVLW  0D
0934C:  MOVWF  FF7
0934E:  CALL   3E86
09352:  CLRF   19
09354:  BTFSC  FF2.7
09356:  BSF    19.7
09358:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0935A:  MOVLW  01
0935C:  MOVLB  1
0935E:  MOVWF  xA0
09360:  MOVLW  03
09362:  MOVWF  xA1
09364:  MOVLB  0
09366:  CALL   156C
0936A:  BTFSC  19.7
0936C:  BSF    FF2.7
.................... if (!editar){ // editar falso 
0936E:  MOVLB  1
09370:  BTFSC  x6E.0
09372:  BRA    93C2
.................... if (bit_test(tiempo1,0)){ 
09374:  BTFSS  49.0
09376:  BRA    93B0
.................... printf(lcd_putc, " intensidad Luz #%02u ",(submenu-32)); 
09378:  MOVLW  20
0937A:  SUBWF  x6D,W
0937C:  MOVWF  x6F
0937E:  MOVLW  54
09380:  MOVWF  FF6
09382:  MOVLW  0D
09384:  MOVWF  FF7
09386:  MOVLW  11
09388:  MOVWF  x90
0938A:  MOVLB  0
0938C:  CALL   44F0
09390:  MOVFF  16F,190
09394:  MOVLW  01
09396:  MOVLB  1
09398:  MOVWF  x91
0939A:  MOVLB  0
0939C:  CALL   46F0
093A0:  MOVLW  20
093A2:  MOVLB  1
093A4:  MOVWF  x93
093A6:  MOVLB  0
093A8:  CALL   3DE6
.................... } else printf(lcd_putc, " intensidad Luz     "); 
093AC:  BRA    93BE
093AE:  MOVLB  1
093B0:  MOVLW  6C
093B2:  MOVWF  FF6
093B4:  MOVLW  0D
093B6:  MOVWF  FF7
093B8:  MOVLB  0
093BA:  CALL   3E86
.................... }else { // editar verdadero 
093BE:  BRA    93F6
093C0:  MOVLB  1
.................... printf(lcd_putc, " intensidad Luz #%02u ",(submenu-32)); 
093C2:  MOVLW  20
093C4:  SUBWF  x6D,W
093C6:  MOVWF  x6F
093C8:  MOVLW  82
093CA:  MOVWF  FF6
093CC:  MOVLW  0D
093CE:  MOVWF  FF7
093D0:  MOVLW  11
093D2:  MOVWF  x90
093D4:  MOVLB  0
093D6:  CALL   44F0
093DA:  MOVFF  16F,190
093DE:  MOVLW  01
093E0:  MOVLB  1
093E2:  MOVWF  x91
093E4:  MOVLB  0
093E6:  CALL   46F0
093EA:  MOVLW  20
093EC:  MOVLB  1
093EE:  MOVWF  x93
093F0:  MOVLB  0
093F2:  CALL   3DE6
093F6:  CLRF   19
093F8:  BTFSC  FF2.7
093FA:  BSF    19.7
093FC:  BCF    FF2.7
.................... } 
.................... lcd_gotoxy(1,4); 
093FE:  MOVLW  01
09400:  MOVLB  1
09402:  MOVWF  xA0
09404:  MOVLW  04
09406:  MOVWF  xA1
09408:  MOVLB  0
0940A:  CALL   156C
0940E:  BTFSC  19.7
09410:  BSF    FF2.7
.................... if (editar) { // si editar prendido 
09412:  MOVLB  1
09414:  BTFSS  x6E.0
09416:  BRA    9528
.................... if (bit_test(tiempo1,0)){ 
09418:  BTFSS  49.0
0941A:  BRA    9516
.................... if (IntLuz[submenu] > 80){ // La luz esta prendida 
0941C:  CLRF   03
0941E:  MOVF   x6D,W
09420:  ADDLW  4A
09422:  MOVWF  FE9
09424:  MOVLW  00
09426:  ADDWFC 03,W
09428:  MOVWF  FEA
0942A:  MOVF   FEF,W
0942C:  SUBLW  50
0942E:  BC    94A4
.................... printf(lcd_putc, "         %u%%        ",( ( 30 - (IntLuz[submenu]-100) ) / 3 ) * 10); 
09430:  CLRF   03
09432:  MOVF   x6D,W
09434:  ADDLW  4A
09436:  MOVWF  FE9
09438:  MOVLW  00
0943A:  ADDWFC 03,W
0943C:  MOVWF  FEA
0943E:  MOVLW  64
09440:  SUBWF  FEF,W
09442:  XORLW  FF
09444:  ADDLW  1F
09446:  MOVWF  x70
09448:  MOVWF  x92
0944A:  MOVLW  03
0944C:  MOVWF  x93
0944E:  MOVLB  0
09450:  CALL   453C
09454:  MOVF   01,W
09456:  MULLW  0A
09458:  MOVFF  FF3,16F
0945C:  MOVLB  1
0945E:  MOVLW  9A
09460:  MOVWF  FF6
09462:  MOVLW  0D
09464:  MOVWF  FF7
09466:  MOVLW  09
09468:  MOVWF  x90
0946A:  MOVLB  0
0946C:  CALL   44F0
09470:  MOVFF  16F,190
09474:  MOVLW  1B
09476:  MOVLB  1
09478:  MOVWF  x91
0947A:  MOVLB  0
0947C:  CALL   46F0
09480:  MOVLW  25
09482:  MOVLB  1
09484:  MOVWF  x93
09486:  MOVLB  0
09488:  CALL   3DE6
0948C:  MOVLW  A7
0948E:  MOVWF  FF6
09490:  MOVLW  0D
09492:  MOVWF  FF7
09494:  MOVLW  08
09496:  MOVLB  1
09498:  MOVWF  x90
0949A:  MOVLB  0
0949C:  CALL   44F0
.................... } else { // Luz apagada 
094A0:  BRA    9512
094A2:  MOVLB  1
.................... printf(lcd_putc, "         %u%%        ",( ( 30 - (IntLuz[submenu]) ) / 3 ) * 10); 
094A4:  CLRF   03
094A6:  MOVF   x6D,W
094A8:  ADDLW  4A
094AA:  MOVWF  FE9
094AC:  MOVLW  00
094AE:  ADDWFC 03,W
094B0:  MOVWF  FEA
094B2:  MOVF   FEF,W
094B4:  XORLW  FF
094B6:  ADDLW  1F
094B8:  MOVWF  x70
094BA:  MOVWF  x92
094BC:  MOVLW  03
094BE:  MOVWF  x93
094C0:  MOVLB  0
094C2:  CALL   453C
094C6:  MOVF   01,W
094C8:  MULLW  0A
094CA:  MOVFF  FF3,16F
094CE:  MOVLB  1
094D0:  MOVLW  B0
094D2:  MOVWF  FF6
094D4:  MOVLW  0D
094D6:  MOVWF  FF7
094D8:  MOVLW  09
094DA:  MOVWF  x90
094DC:  MOVLB  0
094DE:  CALL   44F0
094E2:  MOVFF  16F,190
094E6:  MOVLW  1B
094E8:  MOVLB  1
094EA:  MOVWF  x91
094EC:  MOVLB  0
094EE:  CALL   46F0
094F2:  MOVLW  25
094F4:  MOVLB  1
094F6:  MOVWF  x93
094F8:  MOVLB  0
094FA:  CALL   3DE6
094FE:  MOVLW  BD
09500:  MOVWF  FF6
09502:  MOVLW  0D
09504:  MOVWF  FF7
09506:  MOVLW  08
09508:  MOVLB  1
0950A:  MOVWF  x90
0950C:  MOVLB  0
0950E:  CALL   44F0
.................... } 
.................... } else { // si bit si 
09512:  BRA    9524
09514:  MOVLB  1
.................... printf(lcd_putc, "                    "); 
09516:  MOVLW  C6
09518:  MOVWF  FF6
0951A:  MOVLW  0D
0951C:  MOVWF  FF7
0951E:  MOVLB  0
09520:  CALL   3E86
.................... } 
.................... } else {  // Editar apagado 
09524:  BRA    961E
09526:  MOVLB  1
.................... if (IntLuz[submenu] > 80){ // La luz esta prendida 
09528:  CLRF   03
0952A:  MOVF   x6D,W
0952C:  ADDLW  4A
0952E:  MOVWF  FE9
09530:  MOVLW  00
09532:  ADDWFC 03,W
09534:  MOVWF  FEA
09536:  MOVF   FEF,W
09538:  SUBLW  50
0953A:  BC    95B0
.................... printf(lcd_putc, "         %u%%        ",( ( 30 - (IntLuz[submenu]-100) ) / 3 ) * 10); 
0953C:  CLRF   03
0953E:  MOVF   x6D,W
09540:  ADDLW  4A
09542:  MOVWF  FE9
09544:  MOVLW  00
09546:  ADDWFC 03,W
09548:  MOVWF  FEA
0954A:  MOVLW  64
0954C:  SUBWF  FEF,W
0954E:  XORLW  FF
09550:  ADDLW  1F
09552:  MOVWF  x70
09554:  MOVWF  x92
09556:  MOVLW  03
09558:  MOVWF  x93
0955A:  MOVLB  0
0955C:  CALL   453C
09560:  MOVF   01,W
09562:  MULLW  0A
09564:  MOVFF  FF3,16F
09568:  MOVLB  1
0956A:  MOVLW  DC
0956C:  MOVWF  FF6
0956E:  MOVLW  0D
09570:  MOVWF  FF7
09572:  MOVLW  09
09574:  MOVWF  x90
09576:  MOVLB  0
09578:  CALL   44F0
0957C:  MOVFF  16F,190
09580:  MOVLW  1B
09582:  MOVLB  1
09584:  MOVWF  x91
09586:  MOVLB  0
09588:  CALL   46F0
0958C:  MOVLW  25
0958E:  MOVLB  1
09590:  MOVWF  x93
09592:  MOVLB  0
09594:  CALL   3DE6
09598:  MOVLW  E9
0959A:  MOVWF  FF6
0959C:  MOVLW  0D
0959E:  MOVWF  FF7
095A0:  MOVLW  08
095A2:  MOVLB  1
095A4:  MOVWF  x90
095A6:  MOVLB  0
095A8:  CALL   44F0
.................... } else { // luz apagada 
095AC:  BRA    961E
095AE:  MOVLB  1
.................... printf(lcd_putc, "         %u%%        ",( ( 30 - (IntLuz[submenu]) ) / 3 ) * 10); 
095B0:  CLRF   03
095B2:  MOVF   x6D,W
095B4:  ADDLW  4A
095B6:  MOVWF  FE9
095B8:  MOVLW  00
095BA:  ADDWFC 03,W
095BC:  MOVWF  FEA
095BE:  MOVF   FEF,W
095C0:  XORLW  FF
095C2:  ADDLW  1F
095C4:  MOVWF  x70
095C6:  MOVWF  x92
095C8:  MOVLW  03
095CA:  MOVWF  x93
095CC:  MOVLB  0
095CE:  CALL   453C
095D2:  MOVF   01,W
095D4:  MULLW  0A
095D6:  MOVFF  FF3,16F
095DA:  MOVLB  1
095DC:  MOVLW  F2
095DE:  MOVWF  FF6
095E0:  MOVLW  0D
095E2:  MOVWF  FF7
095E4:  MOVLW  09
095E6:  MOVWF  x90
095E8:  MOVLB  0
095EA:  CALL   44F0
095EE:  MOVFF  16F,190
095F2:  MOVLW  1B
095F4:  MOVLB  1
095F6:  MOVWF  x91
095F8:  MOVLB  0
095FA:  CALL   46F0
095FE:  MOVLW  25
09600:  MOVLB  1
09602:  MOVWF  x93
09604:  MOVLB  0
09606:  CALL   3DE6
0960A:  MOVLW  FF
0960C:  MOVWF  FF6
0960E:  MOVLW  0D
09610:  MOVWF  FF7
09612:  MOVLW  08
09614:  MOVLB  1
09616:  MOVWF  x90
09618:  MOVLB  0
0961A:  CALL   44F0
.................... } 
.................... } // else editar (apagado) 
.................... } // dentro de while 
0961E:  MOVLB  1
09620:  BRA    9040
.................... } // fn 
09622:  MOVLB  0
09624:  GOTO   E55A (RETURN)
....................  
....................  
.................... void LuzOnOff(){ // prender y apagar las luces individualmente 
.................... LIMPIARLCD; 
*
07F4E:  MOVLW  08
07F50:  MOVWF  FF6
07F52:  MOVLW  0E
07F54:  MOVWF  FF7
07F56:  CALL   3E86
.................... restart_wdt(); 
07F5A:  CLRWDT
.................... int submenu = 33; 
07F5C:  MOVLW  21
07F5E:  MOVLB  1
07F60:  MOVWF  x6D
....................  
.................... while (submenu < 94){ // hasta llenar todas las luces 
07F62:  MOVF   x6D,W
07F64:  SUBLW  5D
07F66:  BTFSS  FD8.0
07F68:  BRA    8240
....................  
.................... restart_wdt(); 
07F6A:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
07F6C:  BSF    F93.3
07F6E:  BTFSS  F81.3
07F70:  BRA    7F84
07F72:  BSF    F93.2
07F74:  BTFSS  F81.2
07F76:  BRA    7F84
07F78:  BSF    F93.1
07F7A:  BTFSS  F81.1
07F7C:  BRA    7F84
07F7E:  BSF    F93.0
07F80:  BTFSC  F81.0
07F82:  BCF    35.0
....................  
.................... if (Rebote == false){ 
07F84:  BTFSC  35.0
07F86:  BRA    7FD6
.................... if (input(OOKK) == 0){ // si ok, solo sumo 
07F88:  BSF    F93.1
07F8A:  BTFSC  F81.1
07F8C:  BRA    7FD6
.................... if (IntLuz[submenu] > 80){ // La luz esta prendida 
07F8E:  CLRF   03
07F90:  MOVF   x6D,W
07F92:  ADDLW  4A
07F94:  MOVWF  FE9
07F96:  MOVLW  00
07F98:  ADDWFC 03,W
07F9A:  MOVWF  FEA
07F9C:  MOVF   FEF,W
07F9E:  SUBLW  50
07FA0:  BC    7FBC
07FA2:  CLRF   19
07FA4:  BTFSC  FF2.7
07FA6:  BSF    19.7
07FA8:  BCF    FF2.7
.................... Apagar(submenu); 
07FAA:  MOVFF  16D,1A2
07FAE:  MOVLB  0
07FB0:  CALL   23A6
07FB4:  BTFSC  19.7
07FB6:  BSF    FF2.7
.................... } else { // La luz esta apagada 
07FB8:  BRA    7FD2
07FBA:  MOVLB  1
07FBC:  CLRF   19
07FBE:  BTFSC  FF2.7
07FC0:  BSF    19.7
07FC2:  BCF    FF2.7
.................... Prender(submenu); 
07FC4:  MOVFF  16D,1A2
07FC8:  MOVLB  0
07FCA:  CALL   2304
07FCE:  BTFSC  19.7
07FD0:  BSF    FF2.7
.................... } 
.................... Rebote = true; 
07FD2:  BSF    35.0
07FD4:  MOVLB  1
.................... } // si ok 
.................... } 
....................  
.................... if (Rebote == false){ 
07FD6:  BTFSC  35.0
07FD8:  BRA    7FEA
.................... if (input(CANCEL) == 0){ // salgo al toque con cancel 
07FDA:  BSF    F93.0
07FDC:  BTFSC  F81.0
07FDE:  BRA    7FEA
.................... Rebote = true; 
07FE0:  BSF    35.0
.................... Menu = 31; 
07FE2:  MOVLW  1F
07FE4:  MOVWF  28
.................... submenu = 95; 
07FE6:  MOVLW  5F
07FE8:  MOVWF  x6D
.................... } // si cancel 
.................... } 
....................  
.................... if (Rebote == false){ 
07FEA:  BTFSC  35.0
07FEC:  BRA    8002
.................... if (input(ABAJO) == 0){ // si abajo 
07FEE:  BSF    F93.2
07FF0:  BTFSC  F81.2
07FF2:  BRA    8002
.................... Rebote = true; 
07FF4:  BSF    35.0
.................... ++submenu; 
07FF6:  INCF   x6D,F
.................... if (submenu == 94) submenu = 33; 
07FF8:  MOVF   x6D,W
07FFA:  SUBLW  5E
07FFC:  BNZ   8002
07FFE:  MOVLW  21
08000:  MOVWF  x6D
.................... } // si Abajo 
.................... } // si rebote 
....................  
.................... if (Rebote == false){ 
08002:  BTFSC  35.0
08004:  BRA    801A
.................... if (input(ARRIBA) == 0){ // si abajo 
08006:  BSF    F93.3
08008:  BTFSC  F81.3
0800A:  BRA    801A
.................... Rebote = true; 
0800C:  BSF    35.0
.................... --submenu; 
0800E:  DECF   x6D,F
.................... if (submenu == 32) submenu = 93; 
08010:  MOVF   x6D,W
08012:  SUBLW  20
08014:  BNZ   801A
08016:  MOVLW  5D
08018:  MOVWF  x6D
0801A:  CLRF   19
0801C:  BTFSC  FF2.7
0801E:  BSF    19.7
08020:  BCF    FF2.7
.................... } // si Abajo 
.................... } // si rebote 
....................  
....................  
.................... lcd_gotoxy(1,1); 
08022:  MOVLW  01
08024:  MOVWF  xA0
08026:  MOVWF  xA1
08028:  MOVLB  0
0802A:  CALL   156C
0802E:  BTFSC  19.7
08030:  BSF    FF2.7
.................... printf(lcd_putc, "= Control de luces ="); 
08032:  MOVLW  0A
08034:  MOVWF  FF6
08036:  MOVLW  0E
08038:  MOVWF  FF7
0803A:  CALL   3E86
0803E:  CLRF   19
08040:  BTFSC  FF2.7
08042:  BSF    19.7
08044:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
08046:  MOVLW  01
08048:  MOVLB  1
0804A:  MOVWF  xA0
0804C:  MOVLW  02
0804E:  MOVWF  xA1
08050:  MOVLB  0
08052:  CALL   156C
08056:  BTFSC  19.7
08058:  BSF    FF2.7
.................... printf(lcd_putc, " Estado de Luz #%02u: ",(submenu-32)); 
0805A:  MOVLW  20
0805C:  MOVLB  1
0805E:  SUBWF  x6D,W
08060:  MOVWF  x6E
08062:  MOVLW  20
08064:  MOVWF  FF6
08066:  MOVLW  0E
08068:  MOVWF  FF7
0806A:  MOVLW  10
0806C:  MOVWF  x90
0806E:  MOVLB  0
08070:  CALL   44F0
08074:  MOVFF  16E,190
08078:  MOVLW  01
0807A:  MOVLB  1
0807C:  MOVWF  x91
0807E:  MOVLB  0
08080:  CALL   46F0
08084:  MOVLW  3A
08086:  MOVLB  1
08088:  MOVWF  x93
0808A:  MOVLB  0
0808C:  CALL   3DE6
08090:  MOVLW  20
08092:  MOVLB  1
08094:  MOVWF  x93
08096:  MOVLB  0
08098:  CALL   3DE6
0809C:  CLRF   19
0809E:  BTFSC  FF2.7
080A0:  BSF    19.7
080A2:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
080A4:  MOVLW  01
080A6:  MOVLB  1
080A8:  MOVWF  xA0
080AA:  MOVLW  03
080AC:  MOVWF  xA1
080AE:  MOVLB  0
080B0:  CALL   156C
080B4:  BTFSC  19.7
080B6:  BSF    FF2.7
.................... if (IntLuz[submenu] > 80){ // La luz esta prendida 
080B8:  CLRF   03
080BA:  MOVLB  1
080BC:  MOVF   x6D,W
080BE:  ADDLW  4A
080C0:  MOVWF  FE9
080C2:  MOVLW  00
080C4:  ADDWFC 03,W
080C6:  MOVWF  FEA
080C8:  MOVF   FEF,W
080CA:  SUBLW  50
080CC:  BC    8188
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "     ENCENDIDA      "); 
080CE:  BTFSS  49.0
080D0:  BRA    80E4
080D2:  MOVLW  38
080D4:  MOVWF  FF6
080D6:  MOVLW  0E
080D8:  MOVWF  FF7
080DA:  MOVLB  0
080DC:  CALL   3E86
.................... else printf(lcd_putc, "                    "); 
080E0:  BRA    80F2
080E2:  MOVLB  1
080E4:  MOVLW  4E
080E6:  MOVWF  FF6
080E8:  MOVLW  0E
080EA:  MOVWF  FF7
080EC:  MOVLB  0
080EE:  CALL   3E86
080F2:  CLRF   19
080F4:  BTFSC  FF2.7
080F6:  BSF    19.7
080F8:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
080FA:  MOVLW  01
080FC:  MOVLB  1
080FE:  MOVWF  xA0
08100:  MOVLW  04
08102:  MOVWF  xA1
08104:  MOVLB  0
08106:  CALL   156C
0810A:  BTFSC  19.7
0810C:  BSF    FF2.7
.................... printf(lcd_putc, "  Intensidad: %u%%  ",( ( 30 - (IntLuz[submenu]-100) ) / 3 ) * 10); 
0810E:  CLRF   03
08110:  MOVLB  1
08112:  MOVF   x6D,W
08114:  ADDLW  4A
08116:  MOVWF  FE9
08118:  MOVLW  00
0811A:  ADDWFC 03,W
0811C:  MOVWF  FEA
0811E:  MOVLW  64
08120:  SUBWF  FEF,W
08122:  XORLW  FF
08124:  ADDLW  1F
08126:  MOVWF  x6F
08128:  MOVWF  x92
0812A:  MOVLW  03
0812C:  MOVWF  x93
0812E:  MOVLB  0
08130:  CALL   453C
08134:  MOVF   01,W
08136:  MULLW  0A
08138:  MOVFF  FF3,16E
0813C:  MOVLB  1
0813E:  MOVLW  64
08140:  MOVWF  FF6
08142:  MOVLW  0E
08144:  MOVWF  FF7
08146:  MOVLW  0E
08148:  MOVWF  x90
0814A:  MOVLB  0
0814C:  CALL   44F0
08150:  MOVFF  16E,190
08154:  MOVLW  1B
08156:  MOVLB  1
08158:  MOVWF  x91
0815A:  MOVLB  0
0815C:  CALL   46F0
08160:  MOVLW  25
08162:  MOVLB  1
08164:  MOVWF  x93
08166:  MOVLB  0
08168:  CALL   3DE6
0816C:  MOVLW  20
0816E:  MOVLB  1
08170:  MOVWF  x93
08172:  MOVLB  0
08174:  CALL   3DE6
08178:  MOVLW  20
0817A:  MOVLB  1
0817C:  MOVWF  x93
0817E:  MOVLB  0
08180:  CALL   3DE6
.................... } else { 
08184:  BRA    823C
08186:  MOVLB  1
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "      APAGADA       "); 
08188:  BTFSS  49.0
0818A:  BRA    819E
0818C:  MOVLW  7A
0818E:  MOVWF  FF6
08190:  MOVLW  0E
08192:  MOVWF  FF7
08194:  MOVLB  0
08196:  CALL   3E86
.................... else printf(lcd_putc, "                    "); 
0819A:  BRA    81AC
0819C:  MOVLB  1
0819E:  MOVLW  90
081A0:  MOVWF  FF6
081A2:  MOVLW  0E
081A4:  MOVWF  FF7
081A6:  MOVLB  0
081A8:  CALL   3E86
081AC:  CLRF   19
081AE:  BTFSC  FF2.7
081B0:  BSF    19.7
081B2:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
081B4:  MOVLW  01
081B6:  MOVLB  1
081B8:  MOVWF  xA0
081BA:  MOVLW  04
081BC:  MOVWF  xA1
081BE:  MOVLB  0
081C0:  CALL   156C
081C4:  BTFSC  19.7
081C6:  BSF    FF2.7
.................... printf(lcd_putc, "  Intensidad: %u%%  ",( ( 30 - (IntLuz[submenu]) ) / 3 ) * 10); 
081C8:  CLRF   03
081CA:  MOVLB  1
081CC:  MOVF   x6D,W
081CE:  ADDLW  4A
081D0:  MOVWF  FE9
081D2:  MOVLW  00
081D4:  ADDWFC 03,W
081D6:  MOVWF  FEA
081D8:  MOVF   FEF,W
081DA:  XORLW  FF
081DC:  ADDLW  1F
081DE:  MOVWF  x6F
081E0:  MOVWF  x92
081E2:  MOVLW  03
081E4:  MOVWF  x93
081E6:  MOVLB  0
081E8:  CALL   453C
081EC:  MOVF   01,W
081EE:  MULLW  0A
081F0:  MOVFF  FF3,16E
081F4:  MOVLB  1
081F6:  MOVLW  A6
081F8:  MOVWF  FF6
081FA:  MOVLW  0E
081FC:  MOVWF  FF7
081FE:  MOVLW  0E
08200:  MOVWF  x90
08202:  MOVLB  0
08204:  CALL   44F0
08208:  MOVFF  16E,190
0820C:  MOVLW  1B
0820E:  MOVLB  1
08210:  MOVWF  x91
08212:  MOVLB  0
08214:  CALL   46F0
08218:  MOVLW  25
0821A:  MOVLB  1
0821C:  MOVWF  x93
0821E:  MOVLB  0
08220:  CALL   3DE6
08224:  MOVLW  20
08226:  MOVLB  1
08228:  MOVWF  x93
0822A:  MOVLB  0
0822C:  CALL   3DE6
08230:  MOVLW  20
08232:  MOVLB  1
08234:  MOVWF  x93
08236:  MOVLB  0
08238:  CALL   3DE6
.................... } 
....................  
.................... } // dentro de while 
0823C:  MOVLB  1
0823E:  BRA    7F62
.................... } // fn 
08240:  MOVLB  0
08242:  GOTO   E546 (RETURN)
....................  
....................  
.................... void ActAlarma(){ 
....................  
.................... LIMPIARLCD; 
*
07726:  MOVLW  BC
07728:  MOVWF  FF6
0772A:  MOVLW  0E
0772C:  MOVWF  FF7
0772E:  CALL   3E86
.................... restart_wdt(); 
07732:  CLRWDT
....................  
.................... int submenu = 1; 
.................... int segu; // Auxiliar para contar los segundos 
.................... int tpoo; // tiempo para mostrar 
07734:  MOVLW  01
07736:  MOVLB  1
07738:  MOVWF  x6D
....................  
.................... while (submenu < 3){ // hasta llenar todo 
0773A:  MOVF   x6D,W
0773C:  SUBLW  02
0773E:  BTFSS  FD8.0
07740:  BRA    7992
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
07742:  BSF    F93.3
07744:  BTFSS  F81.3
07746:  BRA    775A
07748:  BSF    F93.2
0774A:  BTFSS  F81.2
0774C:  BRA    775A
0774E:  BSF    F93.1
07750:  BTFSS  F81.1
07752:  BRA    775A
07754:  BSF    F93.0
07756:  BTFSC  F81.0
07758:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0775A:  BTFSC  35.0
0775C:  BRA    776C
.................... if (input(OOKK) == 0){ // si ok, solo sumo 
0775E:  BSF    F93.1
07760:  BTFSC  F81.1
07762:  BRA    776C
.................... if (submenu == 1) ++submenu; 
07764:  DECFSZ x6D,W
07766:  BRA    776A
07768:  INCF   x6D,F
.................... Rebote = true; 
0776A:  BSF    35.0
.................... } // si ok 
.................... } 
....................  
.................... if (Rebote == false){ 
0776C:  BTFSC  35.0
0776E:  BRA    77A0
.................... if (input(CANCEL) == 0){ // si cancel solo resto o salgo con 10 
07770:  BSF    F93.0
07772:  BTFSC  F81.0
07774:  BRA    77A0
.................... if (submenu == 2) ActuaLuz(); 
07776:  MOVF   x6D,W
07778:  SUBLW  02
0777A:  BNZ   7784
0777C:  MOVLB  0
0777E:  CALL   3EA6
07782:  MOVLB  1
.................... if ((submenu == 1) || (submenu == 2)) --submenu; 
07784:  DECFSZ x6D,W
07786:  BRA    778A
07788:  BRA    7790
0778A:  MOVF   x6D,W
0778C:  SUBLW  02
0778E:  BTFSC  FD8.2
07790:  DECF   x6D,F
.................... Rebote = true; 
07792:  BSF    35.0
.................... if (submenu == 0) { 
07794:  MOVF   x6D,F
07796:  BNZ   77A0
.................... submenu=10; 
07798:  MOVLW  0A
0779A:  MOVWF  x6D
.................... Menu = 21; // para salir con el cancel o el error 
0779C:  MOVLW  15
0779E:  MOVWF  28
.................... } 
.................... } // si cancel 
.................... } 
....................  
.................... if (submenu == 1) { 
077A0:  DECFSZ x6D,W
077A2:  BRA    7854
077A4:  CLRF   19
077A6:  BTFSC  FF2.7
077A8:  BSF    19.7
077AA:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
077AC:  MOVLW  01
077AE:  MOVWF  xA0
077B0:  MOVLW  02
077B2:  MOVWF  xA1
077B4:  MOVLB  0
077B6:  CALL   156C
077BA:  BTFSC  19.7
077BC:  BSF    FF2.7
.................... printf(lcd_putc, "   %cDesea activar  ",143); 
077BE:  MOVLW  BE
077C0:  MOVWF  FF6
077C2:  MOVLW  0E
077C4:  MOVWF  FF7
077C6:  MOVLW  03
077C8:  MOVLB  1
077CA:  MOVWF  x90
077CC:  MOVLB  0
077CE:  CALL   44F0
077D2:  MOVLW  8F
077D4:  MOVLB  1
077D6:  MOVWF  x93
077D8:  MOVLB  0
077DA:  CALL   3DE6
077DE:  MOVLW  C3
077E0:  MOVWF  FF6
077E2:  MOVLW  0E
077E4:  MOVWF  FF7
077E6:  MOVLW  0F
077E8:  MOVLB  1
077EA:  MOVWF  x90
077EC:  MOVLB  0
077EE:  CALL   44F0
077F2:  CLRF   19
077F4:  BTFSC  FF2.7
077F6:  BSF    19.7
077F8:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
077FA:  MOVLW  01
077FC:  MOVLB  1
077FE:  MOVWF  xA0
07800:  MOVLW  03
07802:  MOVWF  xA1
07804:  MOVLB  0
07806:  CALL   156C
0780A:  BTFSC  19.7
0780C:  BSF    FF2.7
.................... if (Menu == 121) printf(lcd_putc, "   alarma Total ?   "); 
0780E:  MOVF   28,W
07810:  SUBLW  79
07812:  BNZ   7820
07814:  MOVLW  D4
07816:  MOVWF  FF6
07818:  MOVLW  0E
0781A:  MOVWF  FF7
0781C:  CALL   3E86
.................... if (Menu == 122) printf(lcd_putc, "alarma de CuartosOK?"); 
07820:  MOVF   28,W
07822:  SUBLW  7A
07824:  BNZ   7832
07826:  MOVLW  EA
07828:  MOVWF  FF6
0782A:  MOVLW  0E
0782C:  MOVWF  FF7
0782E:  CALL   3E86
.................... if (Menu == 123) printf(lcd_putc, " alarma en CasaOK?  "); 
07832:  MOVF   28,W
07834:  SUBLW  7B
07836:  BNZ   7844
07838:  MOVLW  00
0783A:  MOVWF  FF6
0783C:  MOVLW  0F
0783E:  MOVWF  FF7
07840:  CALL   3E86
.................... tpoo = (TpoSalida + 1); // tiempo para mostrar 
07844:  MOVLW  01
07846:  MOVLB  1
07848:  ADDWF  x13,W
0784A:  MOVWF  x6F
.................... LuzLED(); 
0784C:  MOVLB  0
0784E:  CALL   4406
07852:  MOVLB  1
.................... } // cuando submenu es 1 (antes de aceptar) 
....................  
.................... if (submenu == 2) { 
07854:  MOVF   x6D,W
07856:  SUBLW  02
07858:  BTFSS  FD8.2
0785A:  BRA    7986
.................... if (bit_test(Tiempo1,0)) ONLCDLED; 
0785C:  BTFSS  49.0
0785E:  BRA    7866
07860:  BCF    F95.6
07862:  BCF    F8C.6
.................... else OFFLCDLED; 
07864:  BRA    786A
07866:  BCF    F95.6
07868:  BSF    F8C.6
.................... TpoSeguro = 60; // regraba el valor 60 hasta que sale del contador 
0786A:  MOVLW  3C
0786C:  MOVWF  x14
0786E:  CLRF   19
07870:  BTFSC  FF2.7
07872:  BSF    19.7
07874:  BCF    FF2.7
.................... //EstadoAl = 2; 
.................... lcd_gotoxy(1,2); 
07876:  MOVLW  01
07878:  MOVWF  xA0
0787A:  MOVLW  02
0787C:  MOVWF  xA1
0787E:  MOVLB  0
07880:  CALL   156C
07884:  BTFSC  19.7
07886:  BSF    FF2.7
.................... printf(lcd_putc, "  Armado de alarma  "); 
07888:  MOVLW  16
0788A:  MOVWF  FF6
0788C:  MOVLW  0F
0788E:  MOVWF  FF7
07890:  CALL   3E86
07894:  CLRF   19
07896:  BTFSC  FF2.7
07898:  BSF    19.7
0789A:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0789C:  MOVLW  01
0789E:  MOVLB  1
078A0:  MOVWF  xA0
078A2:  MOVLW  03
078A4:  MOVWF  xA1
078A6:  MOVLB  0
078A8:  CALL   156C
078AC:  BTFSC  19.7
078AE:  BSF    FF2.7
.................... printf(lcd_putc, "      en: %3u       ",tpoo); 
078B0:  MOVLW  2C
078B2:  MOVWF  FF6
078B4:  MOVLW  0F
078B6:  MOVWF  FF7
078B8:  MOVLW  0A
078BA:  MOVLB  1
078BC:  MOVWF  x90
078BE:  MOVLB  0
078C0:  CALL   44F0
078C4:  MOVFF  16F,190
078C8:  MOVLW  13
078CA:  MOVLB  1
078CC:  MOVWF  x91
078CE:  MOVLB  0
078D0:  CALL   46F0
078D4:  MOVLW  39
078D6:  MOVWF  FF6
078D8:  MOVLW  0F
078DA:  MOVWF  FF7
078DC:  MOVLW  07
078DE:  MOVLB  1
078E0:  MOVWF  x90
078E2:  MOVLB  0
078E4:  CALL   44F0
....................  
.................... /* 
.................... if (tpoo == TpoSalida) { //////// Ejecutamos una vez toda la mugre de red 
....................  
.................... //if ((Menu == 121) || (Menu == 122) || (Menu == 123)) { // TOTAL 
.................... if (tpoo > 10) printf("%c%c%c%c", 250, LLHall, 121, LLHall+121); // Todas oscilan durante activacion de alarma total 
.................... if (tpoo < 10) printf("%c%c%c%c", 250, LLHall, 122, LLHall+122); // Todas oscilan durante activacion de alarma total 
.................... //} 
.................... } ////////////////// Mugre de red 
.................... */ 
....................  
.................... if (sec != segu){ 
078E8:  MOVLB  1
078EA:  MOVF   x6E,W
078EC:  SUBWF  21,W
078EE:  BZ    7986
....................  
.................... if (Menu == 121) { // Total 
078F0:  MOVF   28,W
078F2:  SUBLW  79
078F4:  BNZ   793C
.................... if (tpoo == TpoSalida) { 
078F6:  MOVF   x13,W
078F8:  SUBWF  x6F,W
078FA:  BNZ   7918
078FC:  CLRF   19
078FE:  BTFSC  FF2.7
07900:  BSF    19.7
07902:  BCF    FF2.7
.................... BusData(LLHall,121); //printf("%c%c%c%c", 250, 100, 121, 221); // Todas oscilan durante activacion de alarma total 
07904:  MOVLW  3A
07906:  MOVWF  xA3
07908:  MOVLW  79
0790A:  MOVWF  xA4
0790C:  MOVLB  0
0790E:  CALL   15F6
07912:  BTFSC  19.7
07914:  BSF    FF2.7
07916:  MOVLB  1
.................... //BusData(VentPaMa,80); //printf("%c%c%c%c", 250, VentPaMa, 80, VentPaMa+80); // Apago ventilador papa mama 
.................... //BusData(VentGal,80);  //printf("%c%c%c%c", 250, VentGal, 80, VentGal+80); // Apago ventilador galeria 
.................... } 
.................... if (tpoo == 10) { 
07918:  MOVF   x6F,W
0791A:  SUBLW  0A
0791C:  BNZ   793A
0791E:  CLRF   19
07920:  BTFSC  FF2.7
07922:  BSF    19.7
07924:  BCF    FF2.7
.................... BusData(LLHall,122); //printf("%c%c%c%c", 250, 100, 122, 222); // Todas oscilan durante activacion de alarma total 
07926:  MOVLW  3A
07928:  MOVWF  xA3
0792A:  MOVLW  7A
0792C:  MOVWF  xA4
0792E:  MOVLB  0
07930:  CALL   15F6
07934:  BTFSC  19.7
07936:  BSF    FF2.7
07938:  MOVLB  1
.................... //BusData(VentPaMa,80); //printf("%c%c%c%c", 250, VentPaMa, 80, VentPaMa+80); // Apago ventilador papa mama 
.................... //BusData(VentGal,80); //printf("%c%c%c%c", 250, VentGal, 80, VentGal+80); // Apago ventilador galeria 
.................... } 
.................... } else { // Demas casos 
0793A:  BRA    7980
.................... if (tpoo == TpoSalida) BusData(LLHall,121);  //printf("%c%c%c%c", 250, LLHall, 121, LLHall+121); // Todas oscilan durante activacion de alarma total 
0793C:  MOVF   x13,W
0793E:  SUBWF  x6F,W
07940:  BNZ   795E
07942:  CLRF   19
07944:  BTFSC  FF2.7
07946:  BSF    19.7
07948:  BCF    FF2.7
0794A:  MOVLW  3A
0794C:  MOVWF  xA3
0794E:  MOVLW  79
07950:  MOVWF  xA4
07952:  MOVLB  0
07954:  CALL   15F6
07958:  BTFSC  19.7
0795A:  BSF    FF2.7
0795C:  MOVLB  1
.................... if (tpoo == 10) BusData(LLHall,122);  //printf("%c%c%c%c", 250, LLHall, 122, LLHall+122); // Todas oscilan durante activacion de alarma total 
0795E:  MOVF   x6F,W
07960:  SUBLW  0A
07962:  BNZ   7980
07964:  CLRF   19
07966:  BTFSC  FF2.7
07968:  BSF    19.7
0796A:  BCF    FF2.7
0796C:  MOVLW  3A
0796E:  MOVWF  xA3
07970:  MOVLW  7A
07972:  MOVWF  xA4
07974:  MOVLB  0
07976:  CALL   15F6
0797A:  BTFSC  19.7
0797C:  BSF    FF2.7
0797E:  MOVLB  1
.................... } //Else 
.................... segu = sec; 
07980:  MOVFF  21,16E
.................... --tpoo; 
07984:  DECF   x6F,F
.................... } 
.................... } // cuando submenu es 2 (Alarma ya aceptada) 
....................  
....................  
.................... if (tpoo == 0) submenu = 3; 
07986:  MOVF   x6F,F
07988:  BNZ   798E
0798A:  MOVLW  03
0798C:  MOVWF  x6D
.................... restart_wdt(); 
0798E:  CLRWDT
.................... } // dentro de while 
07990:  BRA    773A
....................  
.................... if (submenu == 3){ // si es 3 es porque se activo, sino seria 10 
07992:  MOVF   x6D,W
07994:  SUBLW  03
07996:  BTFSS  FD8.2
07998:  BRA    7AA4
.................... LuzLED(); 
0799A:  MOVLB  0
0799C:  CALL   4406
.................... if (Menu == 121) { // TOTAL 
079A0:  MOVF   28,W
079A2:  SUBLW  79
079A4:  BNZ   79F6
.................... EstadoAl = 2; 
079A6:  MOVLW  02
079A8:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
079AA:  MOVF   FF2,W
079AC:  MOVWF  00
079AE:  BCF    FF2.7
079B0:  CLRF   FAA
079B2:  MOVLW  02
079B4:  MOVWF  FA9
079B6:  MOVFF  46,FA8
079BA:  BCF    FA6.6
079BC:  BCF    FA6.7
079BE:  BSF    FA6.2
079C0:  MOVLB  F
079C2:  MOVLW  55
079C4:  MOVWF  FA7
079C6:  MOVLW  AA
079C8:  MOVWF  FA7
079CA:  BSF    FA6.1
079CC:  BTFSC  FA6.1
079CE:  BRA    79CC
079D0:  BCF    FA6.2
079D2:  MOVF   00,W
079D4:  IORWF  FF2,F
079D6:  CLRF   19
079D8:  BTFSC  FF2.7
079DA:  BSF    19.7
079DC:  BCF    FF2.7
.................... delay_ms(3); 
079DE:  MOVLW  03
079E0:  MOVLB  1
079E2:  MOVWF  xA8
079E4:  MOVLB  0
079E6:  CALL   1456
079EA:  BTFSC  19.7
079EC:  BSF    FF2.7
.................... ActuaLuz();   // Funcion que actualiza las luces en los modulos segun el valor del servidor 
079EE:  CALL   3EA6
.................... restart_wdt(); 
079F2:  CLRWDT
.................... Menu = 0; 
079F4:  CLRF   28
.................... } 
....................  
.................... if (Menu == 122) { // Nocturna 
079F6:  MOVF   28,W
079F8:  SUBLW  7A
079FA:  BNZ   7A4C
.................... EstadoAl = 3; 
079FC:  MOVLW  03
079FE:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
07A00:  MOVF   FF2,W
07A02:  MOVWF  00
07A04:  BCF    FF2.7
07A06:  CLRF   FAA
07A08:  MOVLW  02
07A0A:  MOVWF  FA9
07A0C:  MOVFF  46,FA8
07A10:  BCF    FA6.6
07A12:  BCF    FA6.7
07A14:  BSF    FA6.2
07A16:  MOVLB  F
07A18:  MOVLW  55
07A1A:  MOVWF  FA7
07A1C:  MOVLW  AA
07A1E:  MOVWF  FA7
07A20:  BSF    FA6.1
07A22:  BTFSC  FA6.1
07A24:  BRA    7A22
07A26:  BCF    FA6.2
07A28:  MOVF   00,W
07A2A:  IORWF  FF2,F
07A2C:  CLRF   19
07A2E:  BTFSC  FF2.7
07A30:  BSF    19.7
07A32:  BCF    FF2.7
.................... delay_ms(3); 
07A34:  MOVLW  03
07A36:  MOVLB  1
07A38:  MOVWF  xA8
07A3A:  MOVLB  0
07A3C:  CALL   1456
07A40:  BTFSC  19.7
07A42:  BSF    FF2.7
.................... ActuaLuz();   // Funcion que actualiza las luces en los modulos segun el valor del servidor 
07A44:  CALL   3EA6
.................... restart_wdt(); 
07A48:  CLRWDT
.................... Menu = 0; 
07A4A:  CLRF   28
.................... } 
....................  
.................... if (Menu == 123) { // Exterior 
07A4C:  MOVF   28,W
07A4E:  SUBLW  7B
07A50:  BNZ   7AA2
.................... EstadoAl = 4; 
07A52:  MOVLW  04
07A54:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
07A56:  MOVF   FF2,W
07A58:  MOVWF  00
07A5A:  BCF    FF2.7
07A5C:  CLRF   FAA
07A5E:  MOVLW  02
07A60:  MOVWF  FA9
07A62:  MOVFF  46,FA8
07A66:  BCF    FA6.6
07A68:  BCF    FA6.7
07A6A:  BSF    FA6.2
07A6C:  MOVLB  F
07A6E:  MOVLW  55
07A70:  MOVWF  FA7
07A72:  MOVLW  AA
07A74:  MOVWF  FA7
07A76:  BSF    FA6.1
07A78:  BTFSC  FA6.1
07A7A:  BRA    7A78
07A7C:  BCF    FA6.2
07A7E:  MOVF   00,W
07A80:  IORWF  FF2,F
07A82:  CLRF   19
07A84:  BTFSC  FF2.7
07A86:  BSF    19.7
07A88:  BCF    FF2.7
.................... delay_ms(3); 
07A8A:  MOVLW  03
07A8C:  MOVLB  1
07A8E:  MOVWF  xA8
07A90:  MOVLB  0
07A92:  CALL   1456
07A96:  BTFSC  19.7
07A98:  BSF    FF2.7
.................... ActuaLuz();   // Funcion que actualiza las luces en los modulos segun el valor del servidor 
07A9A:  CALL   3EA6
.................... restart_wdt(); 
07A9E:  CLRWDT
.................... Menu = 0; 
07AA0:  CLRF   28
07AA2:  MOVLB  1
.................... } 
.................... } // submenu 3 
....................  
.................... } // Fn 
07AA4:  MOVLB  0
07AA6:  GOTO   E532 (RETURN)
....................  
.................... void ConfAlarma(){ 
....................  
.................... LIMPIARLCD; 
07AAA:  MOVLW  42
07AAC:  MOVWF  FF6
07AAE:  MOVLW  0F
07AB0:  MOVWF  FF7
07AB2:  CALL   3E86
.................... restart_wdt(); 
07AB6:  CLRWDT
....................  
.................... int submenu = 1; 
.................... int TiemSal; 
.................... int TiemSil; 
.................... int tpoo; 
.................... int diff; 
.................... short prueba; 
.................... char test[6]; 
07AB8:  MOVLW  01
07ABA:  MOVLB  1
07ABC:  MOVWF  x6D
....................  
.................... TiemSal = TpoSalida; 
07ABE:  MOVFF  113,16E
.................... TiemSil = TpoSilencioso; 
07AC2:  MOVFF  112,16F
.................... prueba = false; 
07AC6:  BCF    x72.0
....................  
....................  
.................... while (submenu < 4){ // hasta llenar todo 
07AC8:  MOVF   x6D,W
07ACA:  SUBLW  03
07ACC:  BTFSS  FD8.0
07ACE:  BRA    7EDE
....................  
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
07AD0:  BSF    F93.3
07AD2:  BTFSS  F81.3
07AD4:  BRA    7AE8
07AD6:  BSF    F93.2
07AD8:  BTFSS  F81.2
07ADA:  BRA    7AE8
07ADC:  BSF    F93.1
07ADE:  BTFSS  F81.1
07AE0:  BRA    7AE8
07AE2:  BSF    F93.0
07AE4:  BTFSC  F81.0
07AE6:  BCF    35.0
....................  
.................... if (Rebote == false){ 
07AE8:  BTFSC  35.0
07AEA:  BRA    7AF6
.................... if (input(OOKK) == 0){ // si ok, solo sumo 
07AEC:  BSF    F93.1
07AEE:  BTFSC  F81.1
07AF0:  BRA    7AF6
.................... ++submenu; 
07AF2:  INCF   x6D,F
.................... Rebote = true; 
07AF4:  BSF    35.0
.................... } // si ok 
.................... } 
....................  
.................... if (Rebote == false){ 
07AF6:  BTFSC  35.0
07AF8:  BRA    7B10
.................... if (input(CANCEL) == 0){ // si cancel solo resto o salgo con 10 
07AFA:  BSF    F93.0
07AFC:  BTFSC  F81.0
07AFE:  BRA    7B10
.................... --submenu; 
07B00:  DECF   x6D,F
.................... Rebote = true; 
07B02:  BSF    35.0
.................... if (submenu == 0) { 
07B04:  MOVF   x6D,F
07B06:  BNZ   7B10
.................... submenu=10; 
07B08:  MOVLW  0A
07B0A:  MOVWF  x6D
.................... Menu = 24; // para salir con el cancel o el error 
07B0C:  MOVLW  18
07B0E:  MOVWF  28
.................... } 
.................... } // si cancel 
.................... } 
....................  
.................... if (Rebote == false){ 
07B10:  BTFSC  35.0
07B12:  BRA    7BC8
.................... if (input(ABAJO) == 0){ // si arriba 
07B14:  BSF    F93.2
07B16:  BTFSC  F81.2
07B18:  BRA    7BC8
.................... Rebote = true; 
07B1A:  BSF    35.0
....................  
....................    if (submenu == 1) { // arriba dentro de dia de la semana 
07B1C:  DECFSZ x6D,W
07B1E:  BRA    7B2C
....................          ++TiemSal; 
07B20:  INCF   x6E,F
....................          if (TiemSal == 181) TiemSal = 1; 
07B22:  MOVF   x6E,W
07B24:  SUBLW  B5
07B26:  BNZ   7B2C
07B28:  MOVLW  01
07B2A:  MOVWF  x6E
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 2) { // arriba dentro de mes 
07B2C:  MOVF   x6D,W
07B2E:  SUBLW  02
07B30:  BNZ   7B3E
....................          ++TiemSil; 
07B32:  INCF   x6F,F
....................          if (TiemSil == 181)  TiemSil= 1; 
07B34:  MOVF   x6F,W
07B36:  SUBLW  B5
07B38:  BNZ   7B3E
07B3A:  MOVLW  01
07B3C:  MOVWF  x6F
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 3) { // arriba dentro de dia 
07B3E:  MOVF   x6D,W
07B40:  SUBLW  03
07B42:  BNZ   7BC8
....................          prueba=True; 
07B44:  BSF    x72.0
....................          tpoo = sec; 
07B46:  MOVFF  21,170
....................          test="ON"; 
07B4A:  MOVLW  01
07B4C:  MOVWF  FEA
07B4E:  MOVLW  73
07B50:  MOVWF  FE9
07B52:  MOVLW  00
07B54:  MOVLB  0
07B56:  CALL   0298
07B5A:  TBLRD*-
07B5C:  TBLRD*+
07B5E:  MOVF   FF5,W
07B60:  MOVWF  FEE
07B62:  IORLW  00
07B64:  BNZ   7B5C
07B66:  CLRF   19
07B68:  BTFSC  FF2.7
07B6A:  BSF    19.7
07B6C:  BCF    FF2.7
....................          printf("%c%c%c%c", 250, 155, 3, 158); // Prendo la sirena por 3 segundos 
07B6E:  MOVLW  FA
07B70:  MOVLB  1
07B72:  MOVWF  xA6
07B74:  MOVLB  0
07B76:  CALL   15D6
07B7A:  BTFSC  19.7
07B7C:  BSF    FF2.7
07B7E:  CLRF   19
07B80:  BTFSC  FF2.7
07B82:  BSF    19.7
07B84:  BCF    FF2.7
07B86:  MOVLW  9B
07B88:  MOVLB  1
07B8A:  MOVWF  xA6
07B8C:  MOVLB  0
07B8E:  CALL   15D6
07B92:  BTFSC  19.7
07B94:  BSF    FF2.7
07B96:  CLRF   19
07B98:  BTFSC  FF2.7
07B9A:  BSF    19.7
07B9C:  BCF    FF2.7
07B9E:  MOVLW  03
07BA0:  MOVLB  1
07BA2:  MOVWF  xA6
07BA4:  MOVLB  0
07BA6:  CALL   15D6
07BAA:  BTFSC  19.7
07BAC:  BSF    FF2.7
07BAE:  CLRF   19
07BB0:  BTFSC  FF2.7
07BB2:  BSF    19.7
07BB4:  BCF    FF2.7
07BB6:  MOVLW  9E
07BB8:  MOVLB  1
07BBA:  MOVWF  xA6
07BBC:  MOVLB  0
07BBE:  CALL   15D6
07BC2:  BTFSC  19.7
07BC4:  BSF    FF2.7
07BC6:  MOVLB  1
....................          } 
.................... } // si Abajo 
.................... } // si rebote 
....................  
.................... if (Rebote == false){ 
07BC8:  BTFSC  35.0
07BCA:  BRA    7C7C
.................... if (input(ARRIBA) == 0){ // si abajo 
07BCC:  BSF    F93.3
07BCE:  BTFSC  F81.3
07BD0:  BRA    7C7C
.................... Rebote = true; 
07BD2:  BSF    35.0
....................  
....................    if (submenu == 1) { // arriba dentro de dia de la semana 
07BD4:  DECFSZ x6D,W
07BD6:  BRA    7BE2
....................          --TiemSal; 
07BD8:  DECF   x6E,F
....................          if (TiemSal == 255) TiemSal = 180; 
07BDA:  INCFSZ x6E,W
07BDC:  BRA    7BE2
07BDE:  MOVLW  B4
07BE0:  MOVWF  x6E
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 2) { // arriba dentro de mes 
07BE2:  MOVF   x6D,W
07BE4:  SUBLW  02
07BE6:  BNZ   7BF2
....................          --TiemSil; 
07BE8:  DECF   x6F,F
....................          if (TiemSil == 255)  TiemSil= 180; 
07BEA:  INCFSZ x6F,W
07BEC:  BRA    7BF2
07BEE:  MOVLW  B4
07BF0:  MOVWF  x6F
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 3) { // arriba dentro de dia 
07BF2:  MOVF   x6D,W
07BF4:  SUBLW  03
07BF6:  BNZ   7C7C
....................          prueba=True; 
07BF8:  BSF    x72.0
....................          tpoo = sec; 
07BFA:  MOVFF  21,170
....................          test="ON"; 
07BFE:  MOVLW  01
07C00:  MOVWF  FEA
07C02:  MOVLW  73
07C04:  MOVWF  FE9
07C06:  MOVLW  00
07C08:  MOVLB  0
07C0A:  CALL   0298
07C0E:  TBLRD*-
07C10:  TBLRD*+
07C12:  MOVF   FF5,W
07C14:  MOVWF  FEE
07C16:  IORLW  00
07C18:  BNZ   7C10
07C1A:  CLRF   19
07C1C:  BTFSC  FF2.7
07C1E:  BSF    19.7
07C20:  BCF    FF2.7
....................          printf("%c%c%c%c", 250, 155, 3, 158); // Prendo la sirena por 3 segundos 
07C22:  MOVLW  FA
07C24:  MOVLB  1
07C26:  MOVWF  xA6
07C28:  MOVLB  0
07C2A:  CALL   15D6
07C2E:  BTFSC  19.7
07C30:  BSF    FF2.7
07C32:  CLRF   19
07C34:  BTFSC  FF2.7
07C36:  BSF    19.7
07C38:  BCF    FF2.7
07C3A:  MOVLW  9B
07C3C:  MOVLB  1
07C3E:  MOVWF  xA6
07C40:  MOVLB  0
07C42:  CALL   15D6
07C46:  BTFSC  19.7
07C48:  BSF    FF2.7
07C4A:  CLRF   19
07C4C:  BTFSC  FF2.7
07C4E:  BSF    19.7
07C50:  BCF    FF2.7
07C52:  MOVLW  03
07C54:  MOVLB  1
07C56:  MOVWF  xA6
07C58:  MOVLB  0
07C5A:  CALL   15D6
07C5E:  BTFSC  19.7
07C60:  BSF    FF2.7
07C62:  CLRF   19
07C64:  BTFSC  FF2.7
07C66:  BSF    19.7
07C68:  BCF    FF2.7
07C6A:  MOVLW  9E
07C6C:  MOVLB  1
07C6E:  MOVWF  xA6
07C70:  MOVLB  0
07C72:  CALL   15D6
07C76:  BTFSC  19.7
07C78:  BSF    FF2.7
07C7A:  MOVLB  1
07C7C:  CLRF   19
07C7E:  BTFSC  FF2.7
07C80:  BSF    19.7
07C82:  BCF    FF2.7
....................          } 
.................... } 
.................... } 
....................  
....................  
.................... lcd_gotoxy(1,1); 
07C84:  MOVLW  01
07C86:  MOVWF  xA0
07C88:  MOVWF  xA1
07C8A:  MOVLB  0
07C8C:  CALL   156C
07C90:  BTFSC  19.7
07C92:  BSF    FF2.7
.................... printf(lcd_putc, "=== Conf. Alarma ==="); 
07C94:  MOVLW  44
07C96:  MOVWF  FF6
07C98:  MOVLW  0F
07C9A:  MOVWF  FF7
07C9C:  CALL   3E86
07CA0:  CLRF   19
07CA2:  BTFSC  FF2.7
07CA4:  BSF    19.7
07CA6:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
07CA8:  MOVLW  01
07CAA:  MOVLB  1
07CAC:  MOVWF  xA0
07CAE:  MOVLW  02
07CB0:  MOVWF  xA1
07CB2:  MOVLB  0
07CB4:  CALL   156C
07CB8:  BTFSC  19.7
07CBA:  BSF    FF2.7
.................... if (submenu == 1){ 
07CBC:  MOVLB  1
07CBE:  DECFSZ x6D,W
07CC0:  BRA    7D0A
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Tpo Salida: %3us", TiemSal); 
07CC2:  BTFSS  49.0
07CC4:  BRA    7CF8
07CC6:  MOVLW  5A
07CC8:  MOVWF  FF6
07CCA:  MOVLW  0F
07CCC:  MOVWF  FF7
07CCE:  MOVLW  0C
07CD0:  MOVWF  x90
07CD2:  MOVLB  0
07CD4:  CALL   44F0
07CD8:  MOVFF  16E,190
07CDC:  MOVLW  13
07CDE:  MOVLB  1
07CE0:  MOVWF  x91
07CE2:  MOVLB  0
07CE4:  CALL   46F0
07CE8:  MOVLW  73
07CEA:  MOVLB  1
07CEC:  MOVWF  x93
07CEE:  MOVLB  0
07CF0:  CALL   3DE6
.................... else printf(lcd_putc, "Tpo Salida:      "); 
07CF4:  BRA    7D06
07CF6:  MOVLB  1
07CF8:  MOVLW  6C
07CFA:  MOVWF  FF6
07CFC:  MOVLW  0F
07CFE:  MOVWF  FF7
07D00:  MOVLB  0
07D02:  CALL   3E86
.................... } else{ 
07D06:  BRA    7D5C
07D08:  MOVLB  1
07D0A:  CLRF   19
07D0C:  BTFSC  FF2.7
07D0E:  BSF    19.7
07D10:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
07D12:  MOVLW  01
07D14:  MOVWF  xA0
07D16:  MOVLW  02
07D18:  MOVWF  xA1
07D1A:  MOVLB  0
07D1C:  CALL   156C
07D20:  BTFSC  19.7
07D22:  BSF    FF2.7
.................... printf(lcd_putc, "Tpo Salida: %3us  ", TiemSal); 
07D24:  MOVLW  7E
07D26:  MOVWF  FF6
07D28:  MOVLW  0F
07D2A:  MOVWF  FF7
07D2C:  MOVLW  0C
07D2E:  MOVLB  1
07D30:  MOVWF  x90
07D32:  MOVLB  0
07D34:  CALL   44F0
07D38:  MOVFF  16E,190
07D3C:  MOVLW  13
07D3E:  MOVLB  1
07D40:  MOVWF  x91
07D42:  MOVLB  0
07D44:  CALL   46F0
07D48:  MOVLW  8D
07D4A:  MOVWF  FF6
07D4C:  MOVLW  0F
07D4E:  MOVWF  FF7
07D50:  MOVLW  03
07D52:  MOVLB  1
07D54:  MOVWF  x90
07D56:  MOVLB  0
07D58:  CALL   44F0
07D5C:  CLRF   19
07D5E:  BTFSC  FF2.7
07D60:  BSF    19.7
07D62:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(1,3); 
07D64:  MOVLW  01
07D66:  MOVLB  1
07D68:  MOVWF  xA0
07D6A:  MOVLW  03
07D6C:  MOVWF  xA1
07D6E:  MOVLB  0
07D70:  CALL   156C
07D74:  BTFSC  19.7
07D76:  BSF    FF2.7
.................... if (submenu == 2){ 
07D78:  MOVLB  1
07D7A:  MOVF   x6D,W
07D7C:  SUBLW  02
07D7E:  BNZ   7DC8
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Tpo Silencio: %3us",TiemSil); 
07D80:  BTFSS  49.0
07D82:  BRA    7DB6
07D84:  MOVLW  92
07D86:  MOVWF  FF6
07D88:  MOVLW  0F
07D8A:  MOVWF  FF7
07D8C:  MOVLW  0E
07D8E:  MOVWF  x90
07D90:  MOVLB  0
07D92:  CALL   44F0
07D96:  MOVFF  16F,190
07D9A:  MOVLW  13
07D9C:  MOVLB  1
07D9E:  MOVWF  x91
07DA0:  MOVLB  0
07DA2:  CALL   46F0
07DA6:  MOVLW  73
07DA8:  MOVLB  1
07DAA:  MOVWF  x93
07DAC:  MOVLB  0
07DAE:  CALL   3DE6
.................... else printf(lcd_putc, "Tpo Silencio:       "); 
07DB2:  BRA    7DC4
07DB4:  MOVLB  1
07DB6:  MOVLW  A6
07DB8:  MOVWF  FF6
07DBA:  MOVLW  0F
07DBC:  MOVWF  FF7
07DBE:  MOVLB  0
07DC0:  CALL   3E86
.................... } else{ 
07DC4:  BRA    7E12
07DC6:  MOVLB  1
07DC8:  CLRF   19
07DCA:  BTFSC  FF2.7
07DCC:  BSF    19.7
07DCE:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
07DD0:  MOVLW  01
07DD2:  MOVWF  xA0
07DD4:  MOVLW  03
07DD6:  MOVWF  xA1
07DD8:  MOVLB  0
07DDA:  CALL   156C
07DDE:  BTFSC  19.7
07DE0:  BSF    FF2.7
.................... printf(lcd_putc, "Tpo Silencio: %3us",TiemSil); 
07DE2:  MOVLW  BC
07DE4:  MOVWF  FF6
07DE6:  MOVLW  0F
07DE8:  MOVWF  FF7
07DEA:  MOVLW  0E
07DEC:  MOVLB  1
07DEE:  MOVWF  x90
07DF0:  MOVLB  0
07DF2:  CALL   44F0
07DF6:  MOVFF  16F,190
07DFA:  MOVLW  13
07DFC:  MOVLB  1
07DFE:  MOVWF  x91
07E00:  MOVLB  0
07E02:  CALL   46F0
07E06:  MOVLW  73
07E08:  MOVLB  1
07E0A:  MOVWF  x93
07E0C:  MOVLB  0
07E0E:  CALL   3DE6
07E12:  CLRF   19
07E14:  BTFSC  FF2.7
07E16:  BSF    19.7
07E18:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(1,4); 
07E1A:  MOVLW  01
07E1C:  MOVLB  1
07E1E:  MOVWF  xA0
07E20:  MOVLW  04
07E22:  MOVWF  xA1
07E24:  MOVLB  0
07E26:  CALL   156C
07E2A:  BTFSC  19.7
07E2C:  BSF    FF2.7
.................... if (submenu == 3){ 
07E2E:  MOVLB  1
07E30:  MOVF   x6D,W
07E32:  SUBLW  03
07E34:  BNZ   7E6E
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Prueba sirena: %s",test); 
07E36:  BTFSS  49.0
07E38:  BRA    7E5C
07E3A:  MOVLW  D0
07E3C:  MOVWF  FF6
07E3E:  MOVLW  0F
07E40:  MOVWF  FF7
07E42:  MOVLW  0F
07E44:  MOVWF  x90
07E46:  MOVLB  0
07E48:  CALL   44F0
07E4C:  MOVLW  01
07E4E:  MOVWF  FEA
07E50:  MOVLW  73
07E52:  MOVWF  FE9
07E54:  CALL   4518
.................... else printf(lcd_putc, "Prueba sirena:        "); 
07E58:  BRA    7E6A
07E5A:  MOVLB  1
07E5C:  MOVLW  E2
07E5E:  MOVWF  FF6
07E60:  MOVLW  0F
07E62:  MOVWF  FF7
07E64:  MOVLB  0
07E66:  CALL   3E86
.................... } else { 
07E6A:  BRA    7EA8
07E6C:  MOVLB  1
07E6E:  CLRF   19
07E70:  BTFSC  FF2.7
07E72:  BSF    19.7
07E74:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
07E76:  MOVLW  01
07E78:  MOVWF  xA0
07E7A:  MOVLW  04
07E7C:  MOVWF  xA1
07E7E:  MOVLB  0
07E80:  CALL   156C
07E84:  BTFSC  19.7
07E86:  BSF    FF2.7
....................  printf(lcd_putc, "Prueba sirena: %s",test); 
07E88:  MOVLW  FA
07E8A:  MOVWF  FF6
07E8C:  MOVLW  0F
07E8E:  MOVWF  FF7
07E90:  MOVLW  0F
07E92:  MOVLB  1
07E94:  MOVWF  x90
07E96:  MOVLB  0
07E98:  CALL   44F0
07E9C:  MOVLW  01
07E9E:  MOVWF  FEA
07EA0:  MOVLW  73
07EA2:  MOVWF  FE9
07EA4:  CALL   4518
.................... } 
....................  
.................... restart_wdt(); 
07EA8:  CLRWDT
....................  
.................... diff = sec - tpoo; 
07EAA:  MOVLB  1
07EAC:  MOVF   x70,W
07EAE:  SUBWF  21,W
07EB0:  MOVWF  x71
....................  
.................... if (diff > 2) prueba = false; 
07EB2:  MOVF   x71,W
07EB4:  SUBLW  02
07EB6:  BTFSS  FD8.0
07EB8:  BCF    x72.0
.................... if (prueba == false) test = "OFF  "; 
07EBA:  BTFSC  x72.0
07EBC:  BRA    7EDC
07EBE:  MOVLW  01
07EC0:  MOVWF  FEA
07EC2:  MOVLW  73
07EC4:  MOVWF  FE9
07EC6:  MOVLW  00
07EC8:  MOVLB  0
07ECA:  CALL   02AC
07ECE:  TBLRD*-
07ED0:  TBLRD*+
07ED2:  MOVF   FF5,W
07ED4:  MOVWF  FEE
07ED6:  IORLW  00
07ED8:  BNZ   7ED0
07EDA:  MOVLB  1
....................  
.................... } // dentro de while 
07EDC:  BRA    7AC8
....................  
.................... if (submenu == 4) { 
07EDE:  MOVF   x6D,W
07EE0:  SUBLW  04
07EE2:  BNZ   7F48
.................... TpoSilencioso = TiemSil;  // Cargamos en RAM 
07EE4:  MOVFF  16F,112
.................... TpoSalida = TiemSal;  // Cargamos en RAM 
07EE8:  MOVFF  16E,113
....................  
.................... write_eeprom(TpoSil,TpoSilencioso); // Guardamos el valor  
07EEC:  MOVF   FF2,W
07EEE:  MOVWF  00
07EF0:  BCF    FF2.7
07EF2:  CLRF   FAA
07EF4:  MOVLW  04
07EF6:  MOVWF  FA9
07EF8:  MOVFF  112,FA8
07EFC:  BCF    FA6.6
07EFE:  BCF    FA6.7
07F00:  BSF    FA6.2
07F02:  MOVLB  F
07F04:  MOVLW  55
07F06:  MOVWF  FA7
07F08:  MOVLW  AA
07F0A:  MOVWF  FA7
07F0C:  BSF    FA6.1
07F0E:  BTFSC  FA6.1
07F10:  BRA    7F0E
07F12:  BCF    FA6.2
07F14:  MOVF   00,W
07F16:  IORWF  FF2,F
.................... write_eeprom(TpoSal,TpoSalida); // Guardamos el valor  
07F18:  MOVFF  FF2,00
07F1C:  BCF    FF2.7
07F1E:  CLRF   FAA
07F20:  MOVLW  05
07F22:  MOVWF  FA9
07F24:  MOVFF  113,FA8
07F28:  BCF    FA6.6
07F2A:  BCF    FA6.7
07F2C:  BSF    FA6.2
07F2E:  MOVLW  55
07F30:  MOVWF  FA7
07F32:  MOVLW  AA
07F34:  MOVWF  FA7
07F36:  BSF    FA6.1
07F38:  BTFSC  FA6.1
07F3A:  BRA    7F38
07F3C:  BCF    FA6.2
07F3E:  MOVF   00,W
07F40:  IORWF  FF2,F
.................... Menu = 1; 
07F42:  MOVLW  01
07F44:  MOVWF  28
07F46:  MOVLB  1
.................... } 
.................... } // fn 
07F48:  MOVLB  0
07F4A:  GOTO   E53C (RETURN)
....................  
....................  
.................... int Autenticar(){ 
....................  
.................... LIMPIARLCD; 
*
06E4C:  MOVLW  0C
06E4E:  MOVWF  FF6
06E50:  MOVLW  10
06E52:  MOVWF  FF7
06E54:  CALL   3E86
.................... restart_wdt(); 
06E58:  CLRWDT
....................  
.................... int PassCheck[2]; 
....................  
.................... PassCheck[0] = PassCheck[1] = 0; 
06E5A:  MOVLB  1
06E5C:  CLRF   x73
06E5E:  MOVFF  173,172
....................  
.................... int submenu = 1; 
06E62:  MOVLW  01
06E64:  MOVWF  x74
....................  
.................... while (submenu < 7){ 
06E66:  MOVF   x74,W
06E68:  SUBLW  06
06E6A:  BTFSS  FD8.0
06E6C:  BRA    71E4
.................... restart_wdt(); 
06E6E:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
06E70:  BSF    F93.3
06E72:  BTFSS  F81.3
06E74:  BRA    6E88
06E76:  BSF    F93.2
06E78:  BTFSS  F81.2
06E7A:  BRA    6E88
06E7C:  BSF    F93.1
06E7E:  BTFSS  F81.1
06E80:  BRA    6E88
06E82:  BSF    F93.0
06E84:  BTFSC  F81.0
06E86:  BCF    35.0
....................  
.................... if (Rebote == False) { 
06E88:  BTFSC  35.0
06E8A:  BRA    6ED8
.................... if (input(OOKK) == 0){ 
06E8C:  BSF    F93.1
06E8E:  BTFSC  F81.1
06E90:  BRA    6ED8
.................... Rebote = True; 
06E92:  BSF    35.0
.................... switch (submenu){ 
06E94:  MOVLW  01
06E96:  SUBWF  x74,W
06E98:  ADDLW  FA
06E9A:  BC    6ED6
06E9C:  ADDLW  06
06E9E:  MOVLB  0
06EA0:  GOTO   730C
....................    case 1: 
....................    bit_clear(PassCheck[0],0); 
06EA4:  MOVLB  1
06EA6:  BCF    x72.0
....................    bit_set(PassCheck[0],1); 
06EA8:  BSF    x72.1
....................    //++submenu; 
....................    break; 
06EAA:  BRA    6ED6
....................  
....................    case 2: 
....................    bit_clear(PassCheck[0],2); 
06EAC:  MOVLB  1
06EAE:  BCF    x72.2
....................    bit_set(PassCheck[0],3); 
06EB0:  BSF    x72.3
....................    //++submenu; 
....................    break; 
06EB2:  BRA    6ED6
....................  
....................    case 3: 
....................    bit_clear(PassCheck[0],4); 
06EB4:  MOVLB  1
06EB6:  BCF    x72.4
....................    bit_set(PassCheck[0],5); 
06EB8:  BSF    x72.5
....................    //++submenu; 
....................    break; 
06EBA:  BRA    6ED6
....................  
....................    case 4: 
....................    bit_clear(PassCheck[0],6); 
06EBC:  MOVLB  1
06EBE:  BCF    x72.6
....................    bit_set(PassCheck[0],7); 
06EC0:  BSF    x72.7
....................    //++submenu; 
....................    break; 
06EC2:  BRA    6ED6
....................     
....................    case 5: 
....................    bit_clear(PassCheck[1],0); 
06EC4:  MOVLB  1
06EC6:  BCF    x73.0
....................    bit_set(PassCheck[1],1); 
06EC8:  BSF    x73.1
....................    //++submenu; 
....................    break; 
06ECA:  BRA    6ED6
....................  
....................    case 6: 
....................    bit_clear(PassCheck[1],2); 
06ECC:  MOVLB  1
06ECE:  BCF    x73.2
....................    bit_set(PassCheck[1],3); 
06ED0:  BSF    x73.3
....................    //++submenu; 
....................    break; 
06ED2:  BRA    6ED6
06ED4:  MOVLB  1
.................... } 
.................... ++submenu; 
06ED6:  INCF   x74,F
.................... } // si OK 
.................... } // rebote falso 
....................  
.................... if (Rebote == False) { 
06ED8:  BTFSC  35.0
06EDA:  BRA    6F28
.................... if (input(CANCEL) == 0){ 
06EDC:  BSF    F93.0
06EDE:  BTFSC  F81.0
06EE0:  BRA    6F28
.................... Rebote = True; 
06EE2:  BSF    35.0
.................... switch (submenu){ 
06EE4:  MOVLW  01
06EE6:  SUBWF  x74,W
06EE8:  ADDLW  FA
06EEA:  BC    6F26
06EEC:  ADDLW  06
06EEE:  MOVLB  0
06EF0:  GOTO   7332
....................    case 1: 
....................    bit_set(PassCheck[0],0); 
06EF4:  MOVLB  1
06EF6:  BSF    x72.0
....................    bit_set(PassCheck[0],1); 
06EF8:  BSF    x72.1
....................    //++submenu; 
....................    break; 
06EFA:  BRA    6F26
....................  
....................    case 2: 
....................    bit_set(PassCheck[0],2); 
06EFC:  MOVLB  1
06EFE:  BSF    x72.2
....................    bit_set(PassCheck[0],3); 
06F00:  BSF    x72.3
....................    //++submenu; 
....................    break; 
06F02:  BRA    6F26
....................  
....................    case 3: 
....................    bit_set(PassCheck[0],4); 
06F04:  MOVLB  1
06F06:  BSF    x72.4
....................    bit_set(PassCheck[0],5); 
06F08:  BSF    x72.5
....................    //++submenu; 
....................    break; 
06F0A:  BRA    6F26
....................  
....................    case 4: 
....................    bit_set(PassCheck[0],6); 
06F0C:  MOVLB  1
06F0E:  BSF    x72.6
....................    bit_set(PassCheck[0],7); 
06F10:  BSF    x72.7
....................    //++submenu; 
....................    break; 
06F12:  BRA    6F26
....................  
....................    case 5: 
....................    bit_set(PassCheck[1],0); 
06F14:  MOVLB  1
06F16:  BSF    x73.0
....................    bit_set(PassCheck[1],1); 
06F18:  BSF    x73.1
....................    //++submenu; 
....................    break; 
06F1A:  BRA    6F26
....................  
....................    case 6: 
....................    bit_set(PassCheck[1],2); 
06F1C:  MOVLB  1
06F1E:  BSF    x73.2
....................    bit_set(PassCheck[1],3); 
06F20:  BSF    x73.3
....................    //++submenu; 
....................    break; 
06F22:  BRA    6F26
06F24:  MOVLB  1
.................... } // switch 
.................... ++submenu; 
06F26:  INCF   x74,F
.................... } // si CANCEL 
.................... } // rebote falso 
....................  
....................  
.................... if (Rebote == False) { 
06F28:  BTFSC  35.0
06F2A:  BRA    6F78
.................... if (input(ARRIBA) == 0){ 
06F2C:  BSF    F93.3
06F2E:  BTFSC  F81.3
06F30:  BRA    6F78
.................... Rebote = True; 
06F32:  BSF    35.0
.................... switch (submenu){ 
06F34:  MOVLW  01
06F36:  SUBWF  x74,W
06F38:  ADDLW  FA
06F3A:  BC    6F76
06F3C:  ADDLW  06
06F3E:  MOVLB  0
06F40:  GOTO   7358
....................    case 1: 
....................    bit_clear(PassCheck[0],0); 
06F44:  MOVLB  1
06F46:  BCF    x72.0
....................    bit_clear(PassCheck[0],1); 
06F48:  BCF    x72.1
....................    //++submenu; 
....................    break; 
06F4A:  BRA    6F76
....................  
....................    case 2: 
....................    bit_clear(PassCheck[0],2); 
06F4C:  MOVLB  1
06F4E:  BCF    x72.2
....................    bit_clear(PassCheck[0],3); 
06F50:  BCF    x72.3
....................    //++submenu; 
....................    break; 
06F52:  BRA    6F76
....................  
....................    case 3: 
....................    bit_clear(PassCheck[0],4); 
06F54:  MOVLB  1
06F56:  BCF    x72.4
....................    bit_clear(PassCheck[0],5); 
06F58:  BCF    x72.5
....................    //++submenu; 
....................    break; 
06F5A:  BRA    6F76
....................  
....................    case 4: 
....................    bit_clear(PassCheck[0],6); 
06F5C:  MOVLB  1
06F5E:  BCF    x72.6
....................    bit_clear(PassCheck[0],7); 
06F60:  BCF    x72.7
....................    //++submenu; 
....................    break; 
06F62:  BRA    6F76
....................  
....................    case 5: 
....................    bit_clear(PassCheck[1],0); 
06F64:  MOVLB  1
06F66:  BCF    x73.0
....................    bit_clear(PassCheck[1],1); 
06F68:  BCF    x73.1
....................    //++submenu; 
....................    break; 
06F6A:  BRA    6F76
....................  
....................    case 6: 
....................    bit_clear(PassCheck[1],2); 
06F6C:  MOVLB  1
06F6E:  BCF    x73.2
....................    bit_clear(PassCheck[1],3); 
06F70:  BCF    x73.3
....................    //++submenu; 
....................    break; 
06F72:  BRA    6F76
06F74:  MOVLB  1
....................  
.................... } // switch 
.................... ++submenu; 
06F76:  INCF   x74,F
.................... } // si ARRIBA 
.................... } // rebote falso 
....................  
....................  
.................... if (Rebote == False) { 
06F78:  BTFSC  35.0
06F7A:  BRA    6FC8
.................... if (input(ABAJO) == 0){ 
06F7C:  BSF    F93.2
06F7E:  BTFSC  F81.2
06F80:  BRA    6FC8
.................... Rebote = True; 
06F82:  BSF    35.0
.................... switch (submenu){ 
06F84:  MOVLW  01
06F86:  SUBWF  x74,W
06F88:  ADDLW  FA
06F8A:  BC    6FC6
06F8C:  ADDLW  06
06F8E:  MOVLB  0
06F90:  GOTO   737E
....................    case 1: 
....................    bit_set(PassCheck[0],0); 
06F94:  MOVLB  1
06F96:  BSF    x72.0
....................    bit_clear(PassCheck[0],1); 
06F98:  BCF    x72.1
....................    //++submenu; 
....................    break; 
06F9A:  BRA    6FC6
....................  
....................    case 2: 
....................    bit_set(PassCheck[0],2); 
06F9C:  MOVLB  1
06F9E:  BSF    x72.2
....................    bit_clear(PassCheck[0],3); 
06FA0:  BCF    x72.3
....................    //++submenu; 
....................    break; 
06FA2:  BRA    6FC6
....................  
....................    case 3: 
....................    bit_set(PassCheck[0],4); 
06FA4:  MOVLB  1
06FA6:  BSF    x72.4
....................    bit_clear(PassCheck[0],5); 
06FA8:  BCF    x72.5
....................    //++submenu; 
....................    break; 
06FAA:  BRA    6FC6
....................  
....................    case 4: 
....................    bit_set(PassCheck[0],6); 
06FAC:  MOVLB  1
06FAE:  BSF    x72.6
....................    bit_clear(PassCheck[0],7); 
06FB0:  BCF    x72.7
....................    //++submenu; 
....................    break; 
06FB2:  BRA    6FC6
....................  
....................    case 5: 
....................    bit_set(PassCheck[1],0); 
06FB4:  MOVLB  1
06FB6:  BSF    x73.0
....................    bit_clear(PassCheck[1],1); 
06FB8:  BCF    x73.1
....................    //++submenu; 
....................    break; 
06FBA:  BRA    6FC6
....................  
....................    case 6: 
....................    bit_set(PassCheck[1],2); 
06FBC:  MOVLB  1
06FBE:  BSF    x73.2
....................    bit_clear(PassCheck[1],3); 
06FC0:  BCF    x73.3
....................    //++submenu; 
....................    break; 
06FC2:  BRA    6FC6
06FC4:  MOVLB  1
....................  
.................... } // switch 
.................... ++submenu; 
06FC6:  INCF   x74,F
06FC8:  CLRF   19
06FCA:  BTFSC  FF2.7
06FCC:  BSF    19.7
06FCE:  BCF    FF2.7
.................... } // si CANCEL 
.................... } // rebote falso 
....................  
.................... //lcd_gotoxy(1,1); 
.................... //printf(lcd_putc, "== Cambiar Clave ==="); 
.................... lcd_gotoxy(1,2); 
06FD0:  MOVLW  01
06FD2:  MOVWF  xA0
06FD4:  MOVLW  02
06FD6:  MOVWF  xA1
06FD8:  MOVLB  0
06FDA:  CALL   156C
06FDE:  BTFSC  19.7
06FE0:  BSF    FF2.7
.................... printf(lcd_putc, " Ingrese la clave:  "); 
06FE2:  MOVLW  0E
06FE4:  MOVWF  FF6
06FE6:  MOVLW  10
06FE8:  MOVWF  FF7
06FEA:  CALL   3E86
....................  
.................... switch (submenu){ 
06FEE:  MOVLW  01
06FF0:  MOVLB  1
06FF2:  SUBWF  x74,W
06FF4:  ADDLW  FA
06FF6:  BTFSC  FD8.0
06FF8:  BRA    71E0
06FFA:  ADDLW  06
06FFC:  MOVLB  0
06FFE:  GOTO   73A4
.................... case 1: 
07002:  CLRF   19
07004:  BTFSC  FF2.7
07006:  BSF    19.7
07008:  BCF    FF2.7
.................... lcd_gotoxy(7,3); 
0700A:  MOVLW  07
0700C:  MOVLB  1
0700E:  MOVWF  xA0
07010:  MOVLW  03
07012:  MOVWF  xA1
07014:  MOVLB  0
07016:  CALL   156C
0701A:  BTFSC  19.7
0701C:  BSF    FF2.7
.................... printf(lcd_putc, " %c_____",199); 
0701E:  MOVLW  20
07020:  MOVLB  1
07022:  MOVWF  x93
07024:  MOVLB  0
07026:  CALL   3DE6
0702A:  MOVLW  C7
0702C:  MOVLB  1
0702E:  MOVWF  x93
07030:  MOVLB  0
07032:  CALL   3DE6
07036:  MOVLW  27
07038:  MOVWF  FF6
0703A:  MOVLW  10
0703C:  MOVWF  FF7
0703E:  MOVLW  05
07040:  MOVLB  1
07042:  MOVWF  x90
07044:  MOVLB  0
07046:  CALL   44F0
.................... break; 
0704A:  MOVLB  1
0704C:  BRA    71E0
.................... case 2: 
0704E:  CLRF   19
07050:  BTFSC  FF2.7
07052:  BSF    19.7
07054:  BCF    FF2.7
.................... lcd_gotoxy(7,3); 
07056:  MOVLW  07
07058:  MOVLB  1
0705A:  MOVWF  xA0
0705C:  MOVLW  03
0705E:  MOVWF  xA1
07060:  MOVLB  0
07062:  CALL   156C
07066:  BTFSC  19.7
07068:  BSF    FF2.7
.................... printf(lcd_putc, " *%c____",199); 
0706A:  MOVLW  20
0706C:  MOVLB  1
0706E:  MOVWF  x93
07070:  MOVLB  0
07072:  CALL   3DE6
07076:  MOVLW  2A
07078:  MOVLB  1
0707A:  MOVWF  x93
0707C:  MOVLB  0
0707E:  CALL   3DE6
07082:  MOVLW  C7
07084:  MOVLB  1
07086:  MOVWF  x93
07088:  MOVLB  0
0708A:  CALL   3DE6
0708E:  MOVLW  32
07090:  MOVWF  FF6
07092:  MOVLW  10
07094:  MOVWF  FF7
07096:  MOVLW  04
07098:  MOVLB  1
0709A:  MOVWF  x90
0709C:  MOVLB  0
0709E:  CALL   44F0
.................... break; 
070A2:  MOVLB  1
070A4:  BRA    71E0
.................... case 3: 
070A6:  CLRF   19
070A8:  BTFSC  FF2.7
070AA:  BSF    19.7
070AC:  BCF    FF2.7
.................... lcd_gotoxy(7,3); 
070AE:  MOVLW  07
070B0:  MOVLB  1
070B2:  MOVWF  xA0
070B4:  MOVLW  03
070B6:  MOVWF  xA1
070B8:  MOVLB  0
070BA:  CALL   156C
070BE:  BTFSC  19.7
070C0:  BSF    FF2.7
.................... printf(lcd_putc, " **%c___",199); 
070C2:  MOVLW  38
070C4:  MOVWF  FF6
070C6:  MOVLW  10
070C8:  MOVWF  FF7
070CA:  MOVLW  03
070CC:  MOVLB  1
070CE:  MOVWF  x90
070D0:  MOVLB  0
070D2:  CALL   44F0
070D6:  MOVLW  C7
070D8:  MOVLB  1
070DA:  MOVWF  x93
070DC:  MOVLB  0
070DE:  CALL   3DE6
070E2:  MOVLW  3D
070E4:  MOVWF  FF6
070E6:  MOVLW  10
070E8:  MOVWF  FF7
070EA:  MOVLW  03
070EC:  MOVLB  1
070EE:  MOVWF  x90
070F0:  MOVLB  0
070F2:  CALL   44F0
.................... break; 
070F6:  MOVLB  1
070F8:  BRA    71E0
.................... case 4: 
070FA:  CLRF   19
070FC:  BTFSC  FF2.7
070FE:  BSF    19.7
07100:  BCF    FF2.7
.................... lcd_gotoxy(7,3); 
07102:  MOVLW  07
07104:  MOVLB  1
07106:  MOVWF  xA0
07108:  MOVLW  03
0710A:  MOVWF  xA1
0710C:  MOVLB  0
0710E:  CALL   156C
07112:  BTFSC  19.7
07114:  BSF    FF2.7
.................... printf(lcd_putc, " ***%c__",199); 
07116:  MOVLW  42
07118:  MOVWF  FF6
0711A:  MOVLW  10
0711C:  MOVWF  FF7
0711E:  MOVLW  04
07120:  MOVLB  1
07122:  MOVWF  x90
07124:  MOVLB  0
07126:  CALL   44F0
0712A:  MOVLW  C7
0712C:  MOVLB  1
0712E:  MOVWF  x93
07130:  MOVLB  0
07132:  CALL   3DE6
07136:  MOVLW  5F
07138:  MOVLB  1
0713A:  MOVWF  x93
0713C:  MOVLB  0
0713E:  CALL   3DE6
07142:  MOVLW  5F
07144:  MOVLB  1
07146:  MOVWF  x93
07148:  MOVLB  0
0714A:  CALL   3DE6
.................... break; 
0714E:  MOVLB  1
07150:  BRA    71E0
.................... case 5: 
07152:  CLRF   19
07154:  BTFSC  FF2.7
07156:  BSF    19.7
07158:  BCF    FF2.7
.................... lcd_gotoxy(7,3); 
0715A:  MOVLW  07
0715C:  MOVLB  1
0715E:  MOVWF  xA0
07160:  MOVLW  03
07162:  MOVWF  xA1
07164:  MOVLB  0
07166:  CALL   156C
0716A:  BTFSC  19.7
0716C:  BSF    FF2.7
.................... printf(lcd_putc, " ****%c_",199); 
0716E:  MOVLW  4C
07170:  MOVWF  FF6
07172:  MOVLW  10
07174:  MOVWF  FF7
07176:  MOVLW  05
07178:  MOVLB  1
0717A:  MOVWF  x90
0717C:  MOVLB  0
0717E:  CALL   44F0
07182:  MOVLW  C7
07184:  MOVLB  1
07186:  MOVWF  x93
07188:  MOVLB  0
0718A:  CALL   3DE6
0718E:  MOVLW  5F
07190:  MOVLB  1
07192:  MOVWF  x93
07194:  MOVLB  0
07196:  CALL   3DE6
.................... break; 
0719A:  MOVLB  1
0719C:  BRA    71E0
.................... case 6: 
0719E:  CLRF   19
071A0:  BTFSC  FF2.7
071A2:  BSF    19.7
071A4:  BCF    FF2.7
.................... lcd_gotoxy(7,3); 
071A6:  MOVLW  07
071A8:  MOVLB  1
071AA:  MOVWF  xA0
071AC:  MOVLW  03
071AE:  MOVWF  xA1
071B0:  MOVLB  0
071B2:  CALL   156C
071B6:  BTFSC  19.7
071B8:  BSF    FF2.7
.................... printf(lcd_putc, " *****%c",199); 
071BA:  MOVLW  56
071BC:  MOVWF  FF6
071BE:  MOVLW  10
071C0:  MOVWF  FF7
071C2:  MOVLW  06
071C4:  MOVLB  1
071C6:  MOVWF  x90
071C8:  MOVLB  0
071CA:  CALL   44F0
071CE:  MOVLW  C7
071D0:  MOVLB  1
071D2:  MOVWF  x93
071D4:  MOVLB  0
071D6:  CALL   3DE6
.................... break; 
071DA:  MOVLB  1
071DC:  BRA    71E0
071DE:  MOVLB  1
....................  
.................... } // Sw subm 
....................  
.................... restart_wdt(); 
071E0:  CLRWDT
....................  
....................  
.................... } // while -- todo lleno cuando salgo de aqui 
071E2:  BRA    6E66
....................  
.................... if ((PassCheck[0] == Passwd[0]) && (PassCheck[1] == Passwd[1]))  { // contraseña comprobada ok 
071E4:  MOVF   x10,W
071E6:  SUBWF  x72,W
071E8:  BNZ   726E
071EA:  MOVF   x11,W
071EC:  SUBWF  x73,W
071EE:  BNZ   726E
.................... int espera = Tiempo1 + 5; 
071F0:  MOVLW  05
071F2:  ADDWF  49,W
071F4:  MOVWF  x75
.................... LIMPIARLCD; 
071F6:  MOVLW  60
071F8:  MOVWF  FF6
071FA:  MOVLW  10
071FC:  MOVWF  FF7
071FE:  MOVLB  0
07200:  CALL   3E86
07204:  CLRF   19
07206:  BTFSC  FF2.7
07208:  BSF    19.7
0720A:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0720C:  MOVLW  01
0720E:  MOVLB  1
07210:  MOVWF  xA0
07212:  MOVLW  02
07214:  MOVWF  xA1
07216:  MOVLB  0
07218:  CALL   156C
0721C:  BTFSC  19.7
0721E:  BSF    FF2.7
.................... printf(lcd_putc, "   Clave correcta   "); 
07220:  MOVLW  62
07222:  MOVWF  FF6
07224:  MOVLW  10
07226:  MOVWF  FF7
07228:  CALL   3E86
0722C:  CLRF   19
0722E:  BTFSC  FF2.7
07230:  BSF    19.7
07232:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
07234:  MOVLW  01
07236:  MOVLB  1
07238:  MOVWF  xA0
0723A:  MOVLW  03
0723C:  MOVWF  xA1
0723E:  MOVLB  0
07240:  CALL   156C
07244:  BTFSC  19.7
07246:  BSF    FF2.7
.................... printf(lcd_putc, "    Bienvenido :)   "); 
07248:  MOVLW  78
0724A:  MOVWF  FF6
0724C:  MOVLW  10
0724E:  MOVWF  FF7
07250:  CALL   3E86
.................... restart_wdt(); 
07254:  CLRWDT
.................... while (espera != Tiempo1) restart_wdt(); 
07256:  MOVF   49,W
07258:  MOVLB  1
0725A:  SUBWF  x75,W
0725C:  BZ    7266
0725E:  CLRWDT
07260:  MOVLB  0
07262:  BRA    7256
07264:  MOVLB  1
.................... return 1; 
07266:  MOVLW  01
07268:  MOVWF  01
0726A:  BRA    7308
.................... } else { // contraseña no comprobada ok 
0726C:  BRA    7308
.................... int espera = Tiempo1 + 5; 
0726E:  MOVLW  05
07270:  ADDWF  49,W
07272:  MOVWF  x76
.................... LIMPIARLCD; 
07274:  MOVLW  8E
07276:  MOVWF  FF6
07278:  MOVLW  10
0727A:  MOVWF  FF7
0727C:  MOVLB  0
0727E:  CALL   3E86
07282:  CLRF   19
07284:  BTFSC  FF2.7
07286:  BSF    19.7
07288:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0728A:  MOVLW  01
0728C:  MOVLB  1
0728E:  MOVWF  xA0
07290:  MOVLW  02
07292:  MOVWF  xA1
07294:  MOVLB  0
07296:  CALL   156C
0729A:  BTFSC  19.7
0729C:  BSF    FF2.7
0729E:  CLRF   19
072A0:  BTFSC  FF2.7
072A2:  BSF    19.7
072A4:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
072A6:  MOVLW  01
072A8:  MOVLB  1
072AA:  MOVWF  xA0
072AC:  MOVLW  02
072AE:  MOVWF  xA1
072B0:  MOVLB  0
072B2:  CALL   156C
072B6:  BTFSC  19.7
072B8:  BSF    FF2.7
.................... printf(lcd_putc, "  Clave incorrecta  "); 
072BA:  MOVLW  90
072BC:  MOVWF  FF6
072BE:  MOVLW  10
072C0:  MOVWF  FF7
072C2:  CALL   3E86
072C6:  CLRF   19
072C8:  BTFSC  FF2.7
072CA:  BSF    19.7
072CC:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
072CE:  MOVLW  01
072D0:  MOVLB  1
072D2:  MOVWF  xA0
072D4:  MOVLW  03
072D6:  MOVWF  xA1
072D8:  MOVLB  0
072DA:  CALL   156C
072DE:  BTFSC  19.7
072E0:  BSF    FF2.7
.................... printf(lcd_putc, " Acceso denegado :( "); 
072E2:  MOVLW  A6
072E4:  MOVWF  FF6
072E6:  MOVLW  10
072E8:  MOVWF  FF7
072EA:  CALL   3E86
.................... restart_wdt(); 
072EE:  CLRWDT
.................... while (espera != Tiempo1) restart_wdt(); 
072F0:  MOVF   49,W
072F2:  MOVLB  1
072F4:  SUBWF  x76,W
072F6:  BZ    7300
072F8:  CLRWDT
072FA:  MOVLB  0
072FC:  BRA    72F0
072FE:  MOVLB  1
.................... //delay_ms(1000); 
.................... Menu = 1; 
07300:  MOVLW  01
07302:  MOVWF  28
.................... return 0; 
07304:  MOVLW  00
07306:  MOVWF  01
.................... } 
.................... } // fn 
07308:  MOVLB  0
0730A:  RETURN 0
....................  
....................  
.................... void CClave(){ 
.................... if (Autenticar()){ 
*
0C78A:  CALL   6E4C
0C78E:  MOVF   01,F
0C790:  BTFSC  FD8.2
0C792:  GOTO   CFC4
.................... restart_wdt(); 
0C796:  CLRWDT
.................... LIMPIARLCD; 
0C798:  MOVLW  BC
0C79A:  MOVWF  FF6
0C79C:  MOVLW  10
0C79E:  MOVWF  FF7
0C7A0:  CALL   3E86
....................  
.................... int PassCheck1[2]; 
.................... int PassCheck2[2]; 
....................  
.................... PassCheck1[0] = PassCheck1[1] = PassCheck2[0] = PassCheck2[1] = 0; 
0C7A4:  MOVLB  1
0C7A6:  CLRF   x70
0C7A8:  MOVFF  170,16F
0C7AC:  MOVFF  16F,16E
0C7B0:  MOVFF  16E,16D
....................  
.................... int submenu = 1; 
0C7B4:  MOVLW  01
0C7B6:  MOVWF  x71
....................  
.................... while (submenu < 13){ 
0C7B8:  MOVF   x71,W
0C7BA:  SUBLW  0C
0C7BC:  BTFSS  FD8.0
0C7BE:  BRA    CE26
....................  
.................... restart_wdt(); 
0C7C0:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0C7C2:  BSF    F93.3
0C7C4:  BTFSS  F81.3
0C7C6:  BRA    C7DA
0C7C8:  BSF    F93.2
0C7CA:  BTFSS  F81.2
0C7CC:  BRA    C7DA
0C7CE:  BSF    F93.1
0C7D0:  BTFSS  F81.1
0C7D2:  BRA    C7DA
0C7D4:  BSF    F93.0
0C7D6:  BTFSC  F81.0
0C7D8:  BCF    35.0
....................  
....................  
.................... if (Rebote == False) { 
0C7DA:  BTFSC  35.0
0C7DC:  BRA    C85A
.................... if (input(OOKK) == 0){ 
0C7DE:  BSF    F93.1
0C7E0:  BTFSC  F81.1
0C7E2:  BRA    C85A
.................... Rebote = True; 
0C7E4:  BSF    35.0
.................... switch (submenu){ 
0C7E6:  MOVLW  01
0C7E8:  SUBWF  x71,W
0C7EA:  ADDLW  F4
0C7EC:  BC    C858
0C7EE:  ADDLW  0C
0C7F0:  MOVLB  0
0C7F2:  GOTO   CFCA
....................    case 1: 
....................    bit_clear(PassCheck1[0],0); 
0C7F6:  MOVLB  1
0C7F8:  BCF    x6D.0
....................    bit_set(PassCheck1[0],1); 
0C7FA:  BSF    x6D.1
....................    //++submenu; 
....................    break; 
0C7FC:  BRA    C858
....................  
.................... case 7: 
....................    bit_clear(PassCheck2[0],0); 
0C7FE:  MOVLB  1
0C800:  BCF    x6F.0
....................    bit_set(PassCheck2[0],1); 
0C802:  BSF    x6F.1
....................    //++submenu; 
....................    break; 
0C804:  BRA    C858
....................    case 2: 
....................    bit_clear(PassCheck1[0],2); 
0C806:  MOVLB  1
0C808:  BCF    x6D.2
....................    bit_set(PassCheck1[0],3); 
0C80A:  BSF    x6D.3
....................    //++submenu; 
....................    break; 
0C80C:  BRA    C858
....................  
....................    case 8: 
....................    bit_clear(PassCheck2[0],2); 
0C80E:  MOVLB  1
0C810:  BCF    x6F.2
....................    bit_set(PassCheck2[0],3); 
0C812:  BSF    x6F.3
....................    //++submenu; 
....................    break; 
0C814:  BRA    C858
....................  
....................    case 3: 
....................    bit_clear(PassCheck1[0],4); 
0C816:  MOVLB  1
0C818:  BCF    x6D.4
....................    bit_set(PassCheck1[0],5); 
0C81A:  BSF    x6D.5
....................    //++submenu; 
....................    break; 
0C81C:  BRA    C858
....................    case 9: 
....................    bit_clear(PassCheck2[0],4); 
0C81E:  MOVLB  1
0C820:  BCF    x6F.4
....................    bit_set(PassCheck2[0],5); 
0C822:  BSF    x6F.5
....................    //++submenu; 
....................    break; 
0C824:  BRA    C858
....................  
....................    case 4: 
....................    bit_clear(PassCheck1[0],6); 
0C826:  MOVLB  1
0C828:  BCF    x6D.6
....................    bit_set(PassCheck1[0],7); 
0C82A:  BSF    x6D.7
....................    //++submenu; 
....................    break; 
0C82C:  BRA    C858
....................    case 10: 
....................    bit_clear(PassCheck2[0],6); 
0C82E:  MOVLB  1
0C830:  BCF    x6F.6
....................    bit_set(PassCheck2[0],7); 
0C832:  BSF    x6F.7
....................    //++submenu; 
....................    break; 
0C834:  BRA    C858
....................  
....................    case 5: 
....................    bit_clear(PassCheck1[1],0); 
0C836:  MOVLB  1
0C838:  BCF    x6E.0
....................    bit_set(PassCheck1[1],1); 
0C83A:  BSF    x6E.1
....................    //++submenu; 
....................    break; 
0C83C:  BRA    C858
....................    case 11: 
....................    bit_clear(PassCheck2[1],0); 
0C83E:  MOVLB  1
0C840:  BCF    x70.0
....................    bit_set(PassCheck2[1],1); 
0C842:  BSF    x70.1
....................    //++submenu; 
....................    break; 
0C844:  BRA    C858
....................  
....................    case 6: 
....................    bit_clear(PassCheck1[1],2); 
0C846:  MOVLB  1
0C848:  BCF    x6E.2
....................    bit_set(PassCheck1[1],3); 
0C84A:  BSF    x6E.3
....................    //++submenu; 
....................    break; 
0C84C:  BRA    C858
....................    case 12: 
....................    bit_clear(PassCheck2[1],2); 
0C84E:  MOVLB  1
0C850:  BCF    x70.2
....................    bit_set(PassCheck2[1],3); 
0C852:  BSF    x70.3
....................    //++submenu; 
....................    break; 
0C854:  BRA    C858
0C856:  MOVLB  1
.................... } 
.................... ++submenu; 
0C858:  INCF   x71,F
.................... } // si OK 
.................... } // rebote falso 
....................  
.................... if (Rebote == False) { 
0C85A:  BTFSC  35.0
0C85C:  BRA    C8DA
.................... if (input(CANCEL) == 0){ 
0C85E:  BSF    F93.0
0C860:  BTFSC  F81.0
0C862:  BRA    C8DA
.................... Rebote = True; 
0C864:  BSF    35.0
.................... switch (submenu){ 
0C866:  MOVLW  01
0C868:  SUBWF  x71,W
0C86A:  ADDLW  F4
0C86C:  BC    C8D8
0C86E:  ADDLW  0C
0C870:  MOVLB  0
0C872:  GOTO   CFFC
....................    case 1: 
....................    bit_set(PassCheck1[0],0); 
0C876:  MOVLB  1
0C878:  BSF    x6D.0
....................    bit_set(PassCheck1[0],1); 
0C87A:  BSF    x6D.1
....................    //++submenu; 
....................    break; 
0C87C:  BRA    C8D8
....................    case 7: 
....................    bit_set(PassCheck2[0],0); 
0C87E:  MOVLB  1
0C880:  BSF    x6F.0
....................    bit_set(PassCheck2[0],1); 
0C882:  BSF    x6F.1
....................    //++submenu; 
....................    break; 
0C884:  BRA    C8D8
....................  
....................    case 2: 
....................    bit_set(PassCheck1[0],2); 
0C886:  MOVLB  1
0C888:  BSF    x6D.2
....................    bit_set(PassCheck1[0],3); 
0C88A:  BSF    x6D.3
....................    //++submenu; 
....................    break; 
0C88C:  BRA    C8D8
....................    case 8: 
....................    bit_set(PassCheck2[0],2); 
0C88E:  MOVLB  1
0C890:  BSF    x6F.2
....................    bit_set(PassCheck2[0],3); 
0C892:  BSF    x6F.3
....................    //++submenu; 
....................    break; 
0C894:  BRA    C8D8
....................  
....................    case 3: 
....................    bit_set(PassCheck1[0],4); 
0C896:  MOVLB  1
0C898:  BSF    x6D.4
....................    bit_set(PassCheck1[0],5); 
0C89A:  BSF    x6D.5
....................    //++submenu; 
....................    break; 
0C89C:  BRA    C8D8
....................    case 9: 
....................    bit_set(PassCheck2[0],4); 
0C89E:  MOVLB  1
0C8A0:  BSF    x6F.4
....................    bit_set(PassCheck2[0],5); 
0C8A2:  BSF    x6F.5
....................    //++submenu; 
....................    break; 
0C8A4:  BRA    C8D8
....................  
....................    case 4: 
....................    bit_set(PassCheck1[0],6); 
0C8A6:  MOVLB  1
0C8A8:  BSF    x6D.6
....................    bit_set(PassCheck1[0],7); 
0C8AA:  BSF    x6D.7
....................    //++submenu; 
....................    break; 
0C8AC:  BRA    C8D8
....................    case 10: 
....................    bit_set(PassCheck2[0],6); 
0C8AE:  MOVLB  1
0C8B0:  BSF    x6F.6
....................    bit_set(PassCheck2[0],7); 
0C8B2:  BSF    x6F.7
....................    //++submenu; 
....................    break; 
0C8B4:  BRA    C8D8
....................  
....................    case 5: 
....................    bit_set(PassCheck1[1],0); 
0C8B6:  MOVLB  1
0C8B8:  BSF    x6E.0
....................    bit_set(PassCheck1[1],1); 
0C8BA:  BSF    x6E.1
....................    //++submenu; 
....................    break; 
0C8BC:  BRA    C8D8
....................    case 11: 
....................    bit_set(PassCheck2[1],0); 
0C8BE:  MOVLB  1
0C8C0:  BSF    x70.0
....................    bit_set(PassCheck2[1],1); 
0C8C2:  BSF    x70.1
....................    //++submenu; 
....................    break; 
0C8C4:  BRA    C8D8
....................  
....................    case 6: 
....................    bit_set(PassCheck1[1],2); 
0C8C6:  MOVLB  1
0C8C8:  BSF    x6E.2
....................    bit_set(PassCheck1[1],3); 
0C8CA:  BSF    x6E.3
....................    //++submenu; 
....................    break; 
0C8CC:  BRA    C8D8
....................    case 12: 
....................    bit_set(PassCheck2[1],2); 
0C8CE:  MOVLB  1
0C8D0:  BSF    x70.2
....................    bit_set(PassCheck2[1],3); 
0C8D2:  BSF    x70.3
....................    //++submenu; 
....................    break; 
0C8D4:  BRA    C8D8
0C8D6:  MOVLB  1
.................... } // switch 
.................... ++submenu; 
0C8D8:  INCF   x71,F
.................... } // si CANCEL 
.................... } // rebote falso 
....................  
....................  
.................... if (Rebote == False) { 
0C8DA:  BTFSC  35.0
0C8DC:  BRA    C95A
.................... if (input(ARRIBA) == 0){ 
0C8DE:  BSF    F93.3
0C8E0:  BTFSC  F81.3
0C8E2:  BRA    C95A
.................... Rebote = True; 
0C8E4:  BSF    35.0
.................... switch (submenu){ 
0C8E6:  MOVLW  01
0C8E8:  SUBWF  x71,W
0C8EA:  ADDLW  F4
0C8EC:  BC    C958
0C8EE:  ADDLW  0C
0C8F0:  MOVLB  0
0C8F2:  GOTO   D02E
....................    case 1: 
....................    bit_clear(PassCheck1[0],0); 
0C8F6:  MOVLB  1
0C8F8:  BCF    x6D.0
....................    bit_clear(PassCheck1[0],1); 
0C8FA:  BCF    x6D.1
....................    //++submenu; 
....................    break; 
0C8FC:  BRA    C958
....................    case 7: 
....................    bit_clear(PassCheck2[0],0); 
0C8FE:  MOVLB  1
0C900:  BCF    x6F.0
....................    bit_clear(PassCheck2[0],1); 
0C902:  BCF    x6F.1
....................    //++submenu; 
....................    break; 
0C904:  BRA    C958
....................  
....................    case 2: 
....................    bit_clear(PassCheck1[0],2); 
0C906:  MOVLB  1
0C908:  BCF    x6D.2
....................    bit_clear(PassCheck1[0],3); 
0C90A:  BCF    x6D.3
....................    //++submenu; 
....................    break; 
0C90C:  BRA    C958
....................    case 8: 
....................    bit_clear(PassCheck2[0],2); 
0C90E:  MOVLB  1
0C910:  BCF    x6F.2
....................    bit_clear(PassCheck2[0],3); 
0C912:  BCF    x6F.3
....................    //++submenu; 
....................    break; 
0C914:  BRA    C958
....................  
....................    case 3: 
....................    bit_clear(PassCheck1[0],4); 
0C916:  MOVLB  1
0C918:  BCF    x6D.4
....................    bit_clear(PassCheck1[0],5); 
0C91A:  BCF    x6D.5
....................    //++submenu; 
....................    break; 
0C91C:  BRA    C958
....................    case 9: 
....................    bit_clear(PassCheck2[0],4); 
0C91E:  MOVLB  1
0C920:  BCF    x6F.4
....................    bit_clear(PassCheck2[0],5); 
0C922:  BCF    x6F.5
....................    //++submenu; 
....................    break; 
0C924:  BRA    C958
....................  
....................    case 4: 
....................    bit_clear(PassCheck1[0],6); 
0C926:  MOVLB  1
0C928:  BCF    x6D.6
....................    bit_clear(PassCheck1[0],7); 
0C92A:  BCF    x6D.7
....................    //++submenu; 
....................    break; 
0C92C:  BRA    C958
....................    case 10: 
....................    bit_clear(PassCheck2[0],6); 
0C92E:  MOVLB  1
0C930:  BCF    x6F.6
....................    bit_clear(PassCheck2[0],7); 
0C932:  BCF    x6F.7
....................    //++submenu; 
....................    break; 
0C934:  BRA    C958
....................  
....................    case 5: 
....................    bit_clear(PassCheck1[1],0); 
0C936:  MOVLB  1
0C938:  BCF    x6E.0
....................    bit_clear(PassCheck1[1],1); 
0C93A:  BCF    x6E.1
....................    //++submenu; 
....................    break; 
0C93C:  BRA    C958
....................    case 11: 
....................    bit_clear(PassCheck2[1],0); 
0C93E:  MOVLB  1
0C940:  BCF    x70.0
....................    bit_clear(PassCheck2[1],1); 
0C942:  BCF    x70.1
....................    //++submenu; 
....................    break; 
0C944:  BRA    C958
....................  
....................    case 6: 
....................    bit_clear(PassCheck1[1],2); 
0C946:  MOVLB  1
0C948:  BCF    x6E.2
....................    bit_clear(PassCheck1[1],3); 
0C94A:  BCF    x6E.3
....................    //++submenu; 
....................    break; 
0C94C:  BRA    C958
....................    case 12: 
....................    bit_clear(PassCheck2[1],2); 
0C94E:  MOVLB  1
0C950:  BCF    x70.2
....................    bit_clear(PassCheck2[1],3); 
0C952:  BCF    x70.3
....................    //++submenu; 
....................    break; 
0C954:  BRA    C958
0C956:  MOVLB  1
.................... } // switch 
.................... ++submenu; 
0C958:  INCF   x71,F
.................... } // si ARRIBA 
.................... } // rebote falso 
....................  
....................  
.................... if (Rebote == False) { 
0C95A:  BTFSC  35.0
0C95C:  BRA    C9DA
.................... if (input(ABAJO) == 0){ 
0C95E:  BSF    F93.2
0C960:  BTFSC  F81.2
0C962:  BRA    C9DA
.................... Rebote = True; 
0C964:  BSF    35.0
.................... switch (submenu){ 
0C966:  MOVLW  01
0C968:  SUBWF  x71,W
0C96A:  ADDLW  F4
0C96C:  BC    C9D8
0C96E:  ADDLW  0C
0C970:  MOVLB  0
0C972:  GOTO   D060
....................    case 1: 
....................    bit_set(PassCheck1[0],0); 
0C976:  MOVLB  1
0C978:  BSF    x6D.0
....................    bit_clear(PassCheck1[0],1); 
0C97A:  BCF    x6D.1
....................    //++submenu; 
....................    break; 
0C97C:  BRA    C9D8
....................    case 7: 
....................    bit_set(PassCheck2[0],0); 
0C97E:  MOVLB  1
0C980:  BSF    x6F.0
....................    bit_clear(PassCheck2[0],1); 
0C982:  BCF    x6F.1
....................    //++submenu; 
....................    break; 
0C984:  BRA    C9D8
....................  
....................    case 2: 
....................    bit_set(PassCheck1[0],2); 
0C986:  MOVLB  1
0C988:  BSF    x6D.2
....................    bit_clear(PassCheck1[0],3); 
0C98A:  BCF    x6D.3
....................    //++submenu; 
....................    break; 
0C98C:  BRA    C9D8
....................    case 8: 
....................    bit_set(PassCheck2[0],2); 
0C98E:  MOVLB  1
0C990:  BSF    x6F.2
....................    bit_clear(PassCheck2[0],3); 
0C992:  BCF    x6F.3
....................    //++submenu; 
....................    break; 
0C994:  BRA    C9D8
....................  
....................    case 3: 
....................    bit_set(PassCheck1[0],4); 
0C996:  MOVLB  1
0C998:  BSF    x6D.4
....................    bit_clear(PassCheck1[0],5); 
0C99A:  BCF    x6D.5
....................    //++submenu; 
....................    break; 
0C99C:  BRA    C9D8
....................    case 9: 
....................    bit_set(PassCheck2[0],4); 
0C99E:  MOVLB  1
0C9A0:  BSF    x6F.4
....................    bit_clear(PassCheck2[0],5); 
0C9A2:  BCF    x6F.5
....................    //++submenu; 
....................    break; 
0C9A4:  BRA    C9D8
....................  
....................    case 4: 
....................    bit_set(PassCheck1[0],6); 
0C9A6:  MOVLB  1
0C9A8:  BSF    x6D.6
....................    bit_clear(PassCheck1[0],7); 
0C9AA:  BCF    x6D.7
....................    //++submenu; 
....................    break; 
0C9AC:  BRA    C9D8
....................    case 10: 
....................    bit_set(PassCheck2[0],6); 
0C9AE:  MOVLB  1
0C9B0:  BSF    x6F.6
....................    bit_clear(PassCheck2[0],7); 
0C9B2:  BCF    x6F.7
....................    //++submenu; 
....................    break; 
0C9B4:  BRA    C9D8
....................  
....................    case 5: 
....................    bit_set(PassCheck1[1],0); 
0C9B6:  MOVLB  1
0C9B8:  BSF    x6E.0
....................    bit_clear(PassCheck1[1],1); 
0C9BA:  BCF    x6E.1
....................    //++submenu; 
....................    break; 
0C9BC:  BRA    C9D8
....................    case 11: 
....................    bit_set(PassCheck2[1],0); 
0C9BE:  MOVLB  1
0C9C0:  BSF    x70.0
....................    bit_clear(PassCheck2[1],1); 
0C9C2:  BCF    x70.1
....................    //++submenu; 
....................    break; 
0C9C4:  BRA    C9D8
....................  
....................    case 6: 
....................    bit_set(PassCheck1[1],2); 
0C9C6:  MOVLB  1
0C9C8:  BSF    x6E.2
....................    bit_clear(PassCheck1[1],3); 
0C9CA:  BCF    x6E.3
....................    //++submenu; 
....................    break; 
0C9CC:  BRA    C9D8
....................    case 12: 
....................    bit_set(PassCheck2[1],2); 
0C9CE:  MOVLB  1
0C9D0:  BSF    x70.2
....................    bit_clear(PassCheck2[1],3); 
0C9D2:  BCF    x70.3
....................    //++submenu; 
....................    break; 
0C9D4:  BRA    C9D8
0C9D6:  MOVLB  1
.................... } // switch 
.................... ++submenu; 
0C9D8:  INCF   x71,F
0C9DA:  CLRF   19
0C9DC:  BTFSC  FF2.7
0C9DE:  BSF    19.7
0C9E0:  BCF    FF2.7
.................... } // si CANCEL 
.................... } // rebote falso 
....................  
.................... lcd_gotoxy(1,1); 
0C9E2:  MOVLW  01
0C9E4:  MOVWF  xA0
0C9E6:  MOVWF  xA1
0C9E8:  MOVLB  0
0C9EA:  CALL   156C
0C9EE:  BTFSC  19.7
0C9F0:  BSF    FF2.7
.................... printf(lcd_putc, "== Cambiar Clave ==="); 
0C9F2:  MOVLW  BE
0C9F4:  MOVWF  FF6
0C9F6:  MOVLW  10
0C9F8:  MOVWF  FF7
0C9FA:  CALL   3E86
0C9FE:  CLRF   19
0CA00:  BTFSC  FF2.7
0CA02:  BSF    19.7
0CA04:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0CA06:  MOVLW  01
0CA08:  MOVLB  1
0CA0A:  MOVWF  xA0
0CA0C:  MOVLW  02
0CA0E:  MOVWF  xA1
0CA10:  MOVLB  0
0CA12:  CALL   156C
0CA16:  BTFSC  19.7
0CA18:  BSF    FF2.7
.................... printf(lcd_putc, "  Nueva: "); 
0CA1A:  MOVLW  D4
0CA1C:  MOVWF  FF6
0CA1E:  MOVLW  10
0CA20:  MOVWF  FF7
0CA22:  CALL   3E86
.................... if (submenu > 6) { 
0CA26:  MOVLB  1
0CA28:  MOVF   x71,W
0CA2A:  SUBLW  06
0CA2C:  BC    CA56
0CA2E:  CLRF   19
0CA30:  BTFSC  FF2.7
0CA32:  BSF    19.7
0CA34:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0CA36:  MOVLW  01
0CA38:  MOVWF  xA0
0CA3A:  MOVLW  03
0CA3C:  MOVWF  xA1
0CA3E:  MOVLB  0
0CA40:  CALL   156C
0CA44:  BTFSC  19.7
0CA46:  BSF    FF2.7
.................... printf(lcd_putc, " Repita: "); 
0CA48:  MOVLW  DE
0CA4A:  MOVWF  FF6
0CA4C:  MOVLW  10
0CA4E:  MOVWF  FF7
0CA50:  CALL   3E86
0CA54:  MOVLB  1
.................... } 
....................  
.................... switch (submenu){ 
0CA56:  MOVLW  01
0CA58:  SUBWF  x71,W
0CA5A:  ADDLW  F4
0CA5C:  BTFSC  FD8.0
0CA5E:  BRA    CE22
0CA60:  ADDLW  0C
0CA62:  MOVLB  0
0CA64:  GOTO   D092
.................... case 1: 
0CA68:  CLRF   19
0CA6A:  BTFSC  FF2.7
0CA6C:  BSF    19.7
0CA6E:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CA70:  MOVLW  0A
0CA72:  MOVLB  1
0CA74:  MOVWF  xA0
0CA76:  MOVLW  02
0CA78:  MOVWF  xA1
0CA7A:  MOVLB  0
0CA7C:  CALL   156C
0CA80:  BTFSC  19.7
0CA82:  BSF    FF2.7
.................... printf(lcd_putc, "%c_____",199); 
0CA84:  MOVLW  C7
0CA86:  MOVLB  1
0CA88:  MOVWF  x93
0CA8A:  MOVLB  0
0CA8C:  CALL   3DE6
0CA90:  MOVLW  EA
0CA92:  MOVWF  FF6
0CA94:  MOVLW  10
0CA96:  MOVWF  FF7
0CA98:  MOVLW  05
0CA9A:  MOVLB  1
0CA9C:  MOVWF  x90
0CA9E:  MOVLB  0
0CAA0:  CALL   44F0
.................... break; 
0CAA4:  MOVLB  1
0CAA6:  BRA    CE22
.................... case 2: 
0CAA8:  CLRF   19
0CAAA:  BTFSC  FF2.7
0CAAC:  BSF    19.7
0CAAE:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CAB0:  MOVLW  0A
0CAB2:  MOVLB  1
0CAB4:  MOVWF  xA0
0CAB6:  MOVLW  02
0CAB8:  MOVWF  xA1
0CABA:  MOVLB  0
0CABC:  CALL   156C
0CAC0:  BTFSC  19.7
0CAC2:  BSF    FF2.7
.................... printf(lcd_putc, "*%c____",199); 
0CAC4:  MOVLW  2A
0CAC6:  MOVLB  1
0CAC8:  MOVWF  x93
0CACA:  MOVLB  0
0CACC:  CALL   3DE6
0CAD0:  MOVLW  C7
0CAD2:  MOVLB  1
0CAD4:  MOVWF  x93
0CAD6:  MOVLB  0
0CAD8:  CALL   3DE6
0CADC:  MOVLW  F3
0CADE:  MOVWF  FF6
0CAE0:  MOVLW  10
0CAE2:  MOVWF  FF7
0CAE4:  MOVLW  04
0CAE6:  MOVLB  1
0CAE8:  MOVWF  x90
0CAEA:  MOVLB  0
0CAEC:  CALL   44F0
.................... break; 
0CAF0:  MOVLB  1
0CAF2:  BRA    CE22
.................... case 3: 
0CAF4:  CLRF   19
0CAF6:  BTFSC  FF2.7
0CAF8:  BSF    19.7
0CAFA:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CAFC:  MOVLW  0A
0CAFE:  MOVLB  1
0CB00:  MOVWF  xA0
0CB02:  MOVLW  02
0CB04:  MOVWF  xA1
0CB06:  MOVLB  0
0CB08:  CALL   156C
0CB0C:  BTFSC  19.7
0CB0E:  BSF    FF2.7
.................... printf(lcd_putc, "**%c___",199); 
0CB10:  MOVLW  2A
0CB12:  MOVLB  1
0CB14:  MOVWF  x93
0CB16:  MOVLB  0
0CB18:  CALL   3DE6
0CB1C:  MOVLW  2A
0CB1E:  MOVLB  1
0CB20:  MOVWF  x93
0CB22:  MOVLB  0
0CB24:  CALL   3DE6
0CB28:  MOVLW  C7
0CB2A:  MOVLB  1
0CB2C:  MOVWF  x93
0CB2E:  MOVLB  0
0CB30:  CALL   3DE6
0CB34:  MOVLW  FC
0CB36:  MOVWF  FF6
0CB38:  MOVLW  10
0CB3A:  MOVWF  FF7
0CB3C:  MOVLW  03
0CB3E:  MOVLB  1
0CB40:  MOVWF  x90
0CB42:  MOVLB  0
0CB44:  CALL   44F0
.................... break; 
0CB48:  MOVLB  1
0CB4A:  BRA    CE22
.................... case 4: 
0CB4C:  CLRF   19
0CB4E:  BTFSC  FF2.7
0CB50:  BSF    19.7
0CB52:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CB54:  MOVLW  0A
0CB56:  MOVLB  1
0CB58:  MOVWF  xA0
0CB5A:  MOVLW  02
0CB5C:  MOVWF  xA1
0CB5E:  MOVLB  0
0CB60:  CALL   156C
0CB64:  BTFSC  19.7
0CB66:  BSF    FF2.7
.................... printf(lcd_putc, "***%c__",199); 
0CB68:  MOVLW  00
0CB6A:  MOVWF  FF6
0CB6C:  MOVLW  11
0CB6E:  MOVWF  FF7
0CB70:  MOVLW  03
0CB72:  MOVLB  1
0CB74:  MOVWF  x90
0CB76:  MOVLB  0
0CB78:  CALL   44F0
0CB7C:  MOVLW  C7
0CB7E:  MOVLB  1
0CB80:  MOVWF  x93
0CB82:  MOVLB  0
0CB84:  CALL   3DE6
0CB88:  MOVLW  5F
0CB8A:  MOVLB  1
0CB8C:  MOVWF  x93
0CB8E:  MOVLB  0
0CB90:  CALL   3DE6
0CB94:  MOVLW  5F
0CB96:  MOVLB  1
0CB98:  MOVWF  x93
0CB9A:  MOVLB  0
0CB9C:  CALL   3DE6
.................... break; 
0CBA0:  MOVLB  1
0CBA2:  BRA    CE22
.................... case 5: 
0CBA4:  CLRF   19
0CBA6:  BTFSC  FF2.7
0CBA8:  BSF    19.7
0CBAA:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CBAC:  MOVLW  0A
0CBAE:  MOVLB  1
0CBB0:  MOVWF  xA0
0CBB2:  MOVLW  02
0CBB4:  MOVWF  xA1
0CBB6:  MOVLB  0
0CBB8:  CALL   156C
0CBBC:  BTFSC  19.7
0CBBE:  BSF    FF2.7
.................... printf(lcd_putc, "****%c_",199); 
0CBC0:  MOVLW  08
0CBC2:  MOVWF  FF6
0CBC4:  MOVLW  11
0CBC6:  MOVWF  FF7
0CBC8:  MOVLW  04
0CBCA:  MOVLB  1
0CBCC:  MOVWF  x90
0CBCE:  MOVLB  0
0CBD0:  CALL   44F0
0CBD4:  MOVLW  C7
0CBD6:  MOVLB  1
0CBD8:  MOVWF  x93
0CBDA:  MOVLB  0
0CBDC:  CALL   3DE6
0CBE0:  MOVLW  5F
0CBE2:  MOVLB  1
0CBE4:  MOVWF  x93
0CBE6:  MOVLB  0
0CBE8:  CALL   3DE6
.................... break; 
0CBEC:  MOVLB  1
0CBEE:  BRA    CE22
.................... case 6: 
0CBF0:  CLRF   19
0CBF2:  BTFSC  FF2.7
0CBF4:  BSF    19.7
0CBF6:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CBF8:  MOVLW  0A
0CBFA:  MOVLB  1
0CBFC:  MOVWF  xA0
0CBFE:  MOVLW  02
0CC00:  MOVWF  xA1
0CC02:  MOVLB  0
0CC04:  CALL   156C
0CC08:  BTFSC  19.7
0CC0A:  BSF    FF2.7
.................... printf(lcd_putc, "*****%c",199); 
0CC0C:  MOVLW  10
0CC0E:  MOVWF  FF6
0CC10:  MOVLW  11
0CC12:  MOVWF  FF7
0CC14:  MOVLW  05
0CC16:  MOVLB  1
0CC18:  MOVWF  x90
0CC1A:  MOVLB  0
0CC1C:  CALL   44F0
0CC20:  MOVLW  C7
0CC22:  MOVLB  1
0CC24:  MOVWF  x93
0CC26:  MOVLB  0
0CC28:  CALL   3DE6
.................... break; 
0CC2C:  MOVLB  1
0CC2E:  BRA    CE22
....................  
.................... case 7: 
0CC30:  CLRF   19
0CC32:  BTFSC  FF2.7
0CC34:  BSF    19.7
0CC36:  BCF    FF2.7
.................... lcd_gotoxy(10,2); 
0CC38:  MOVLW  0A
0CC3A:  MOVLB  1
0CC3C:  MOVWF  xA0
0CC3E:  MOVLW  02
0CC40:  MOVWF  xA1
0CC42:  MOVLB  0
0CC44:  CALL   156C
0CC48:  BTFSC  19.7
0CC4A:  BSF    FF2.7
.................... printf(lcd_putc, "******"); 
0CC4C:  MOVLW  18
0CC4E:  MOVWF  FF6
0CC50:  MOVLW  11
0CC52:  MOVWF  FF7
0CC54:  CALL   3E86
0CC58:  CLRF   19
0CC5A:  BTFSC  FF2.7
0CC5C:  BSF    19.7
0CC5E:  BCF    FF2.7
.................... lcd_gotoxy(10,3); 
0CC60:  MOVLW  0A
0CC62:  MOVLB  1
0CC64:  MOVWF  xA0
0CC66:  MOVLW  03
0CC68:  MOVWF  xA1
0CC6A:  MOVLB  0
0CC6C:  CALL   156C
0CC70:  BTFSC  19.7
0CC72:  BSF    FF2.7
.................... printf(lcd_putc, "%c_____",199); 
0CC74:  MOVLW  C7
0CC76:  MOVLB  1
0CC78:  MOVWF  x93
0CC7A:  MOVLB  0
0CC7C:  CALL   3DE6
0CC80:  MOVLW  22
0CC82:  MOVWF  FF6
0CC84:  MOVLW  11
0CC86:  MOVWF  FF7
0CC88:  MOVLW  05
0CC8A:  MOVLB  1
0CC8C:  MOVWF  x90
0CC8E:  MOVLB  0
0CC90:  CALL   44F0
.................... break; 
0CC94:  MOVLB  1
0CC96:  BRA    CE22
.................... case 8: 
0CC98:  CLRF   19
0CC9A:  BTFSC  FF2.7
0CC9C:  BSF    19.7
0CC9E:  BCF    FF2.7
.................... lcd_gotoxy(10,3); 
0CCA0:  MOVLW  0A
0CCA2:  MOVLB  1
0CCA4:  MOVWF  xA0
0CCA6:  MOVLW  03
0CCA8:  MOVWF  xA1
0CCAA:  MOVLB  0
0CCAC:  CALL   156C
0CCB0:  BTFSC  19.7
0CCB2:  BSF    FF2.7
.................... printf(lcd_putc, "*%c____",199); 
0CCB4:  MOVLW  2A
0CCB6:  MOVLB  1
0CCB8:  MOVWF  x93
0CCBA:  MOVLB  0
0CCBC:  CALL   3DE6
0CCC0:  MOVLW  C7
0CCC2:  MOVLB  1
0CCC4:  MOVWF  x93
0CCC6:  MOVLB  0
0CCC8:  CALL   3DE6
0CCCC:  MOVLW  2B
0CCCE:  MOVWF  FF6
0CCD0:  MOVLW  11
0CCD2:  MOVWF  FF7
0CCD4:  MOVLW  04
0CCD6:  MOVLB  1
0CCD8:  MOVWF  x90
0CCDA:  MOVLB  0
0CCDC:  CALL   44F0
.................... break; 
0CCE0:  MOVLB  1
0CCE2:  BRA    CE22
.................... case 9: 
0CCE4:  CLRF   19
0CCE6:  BTFSC  FF2.7
0CCE8:  BSF    19.7
0CCEA:  BCF    FF2.7
.................... lcd_gotoxy(10,3); 
0CCEC:  MOVLW  0A
0CCEE:  MOVLB  1
0CCF0:  MOVWF  xA0
0CCF2:  MOVLW  03
0CCF4:  MOVWF  xA1
0CCF6:  MOVLB  0
0CCF8:  CALL   156C
0CCFC:  BTFSC  19.7
0CCFE:  BSF    FF2.7
.................... printf(lcd_putc, "**%c___",199); 
0CD00:  MOVLW  2A
0CD02:  MOVLB  1
0CD04:  MOVWF  x93
0CD06:  MOVLB  0
0CD08:  CALL   3DE6
0CD0C:  MOVLW  2A
0CD0E:  MOVLB  1
0CD10:  MOVWF  x93
0CD12:  MOVLB  0
0CD14:  CALL   3DE6
0CD18:  MOVLW  C7
0CD1A:  MOVLB  1
0CD1C:  MOVWF  x93
0CD1E:  MOVLB  0
0CD20:  CALL   3DE6
0CD24:  MOVLW  34
0CD26:  MOVWF  FF6
0CD28:  MOVLW  11
0CD2A:  MOVWF  FF7
0CD2C:  MOVLW  03
0CD2E:  MOVLB  1
0CD30:  MOVWF  x90
0CD32:  MOVLB  0
0CD34:  CALL   44F0
.................... break; 
0CD38:  MOVLB  1
0CD3A:  BRA    CE22
.................... case 10: 
0CD3C:  CLRF   19
0CD3E:  BTFSC  FF2.7
0CD40:  BSF    19.7
0CD42:  BCF    FF2.7
.................... lcd_gotoxy(10,3); 
0CD44:  MOVLW  0A
0CD46:  MOVLB  1
0CD48:  MOVWF  xA0
0CD4A:  MOVLW  03
0CD4C:  MOVWF  xA1
0CD4E:  MOVLB  0
0CD50:  CALL   156C
0CD54:  BTFSC  19.7
0CD56:  BSF    FF2.7
.................... printf(lcd_putc, "***%c__",199); 
0CD58:  MOVLW  38
0CD5A:  MOVWF  FF6
0CD5C:  MOVLW  11
0CD5E:  MOVWF  FF7
0CD60:  MOVLW  03
0CD62:  MOVLB  1
0CD64:  MOVWF  x90
0CD66:  MOVLB  0
0CD68:  CALL   44F0
0CD6C:  MOVLW  C7
0CD6E:  MOVLB  1
0CD70:  MOVWF  x93
0CD72:  MOVLB  0
0CD74:  CALL   3DE6
0CD78:  MOVLW  5F
0CD7A:  MOVLB  1
0CD7C:  MOVWF  x93
0CD7E:  MOVLB  0
0CD80:  CALL   3DE6
0CD84:  MOVLW  5F
0CD86:  MOVLB  1
0CD88:  MOVWF  x93
0CD8A:  MOVLB  0
0CD8C:  CALL   3DE6
.................... break; 
0CD90:  MOVLB  1
0CD92:  BRA    CE22
.................... case 11: 
0CD94:  CLRF   19
0CD96:  BTFSC  FF2.7
0CD98:  BSF    19.7
0CD9A:  BCF    FF2.7
.................... lcd_gotoxy(10,3); 
0CD9C:  MOVLW  0A
0CD9E:  MOVLB  1
0CDA0:  MOVWF  xA0
0CDA2:  MOVLW  03
0CDA4:  MOVWF  xA1
0CDA6:  MOVLB  0
0CDA8:  CALL   156C
0CDAC:  BTFSC  19.7
0CDAE:  BSF    FF2.7
.................... printf(lcd_putc, "****%c_",199); 
0CDB0:  MOVLW  40
0CDB2:  MOVWF  FF6
0CDB4:  MOVLW  11
0CDB6:  MOVWF  FF7
0CDB8:  MOVLW  04
0CDBA:  MOVLB  1
0CDBC:  MOVWF  x90
0CDBE:  MOVLB  0
0CDC0:  CALL   44F0
0CDC4:  MOVLW  C7
0CDC6:  MOVLB  1
0CDC8:  MOVWF  x93
0CDCA:  MOVLB  0
0CDCC:  CALL   3DE6
0CDD0:  MOVLW  5F
0CDD2:  MOVLB  1
0CDD4:  MOVWF  x93
0CDD6:  MOVLB  0
0CDD8:  CALL   3DE6
.................... break; 
0CDDC:  MOVLB  1
0CDDE:  BRA    CE22
.................... case 12: 
0CDE0:  CLRF   19
0CDE2:  BTFSC  FF2.7
0CDE4:  BSF    19.7
0CDE6:  BCF    FF2.7
.................... lcd_gotoxy(10,3); 
0CDE8:  MOVLW  0A
0CDEA:  MOVLB  1
0CDEC:  MOVWF  xA0
0CDEE:  MOVLW  03
0CDF0:  MOVWF  xA1
0CDF2:  MOVLB  0
0CDF4:  CALL   156C
0CDF8:  BTFSC  19.7
0CDFA:  BSF    FF2.7
.................... printf(lcd_putc, "*****%c",199); 
0CDFC:  MOVLW  48
0CDFE:  MOVWF  FF6
0CE00:  MOVLW  11
0CE02:  MOVWF  FF7
0CE04:  MOVLW  05
0CE06:  MOVLB  1
0CE08:  MOVWF  x90
0CE0A:  MOVLB  0
0CE0C:  CALL   44F0
0CE10:  MOVLW  C7
0CE12:  MOVLB  1
0CE14:  MOVWF  x93
0CE16:  MOVLB  0
0CE18:  CALL   3DE6
.................... break; 
0CE1C:  MOVLB  1
0CE1E:  BRA    CE22
0CE20:  MOVLB  1
.................... } // Sw subm 
....................  
.................... restart_wdt(); 
0CE22:  CLRWDT
....................  
....................  
.................... } // while -- todo lleno cuando salgo de aqui 
0CE24:  BRA    C7B8
....................  
.................... if (submenu == 13){ 
0CE26:  MOVF   x71,W
0CE28:  SUBLW  0D
0CE2A:  BTFSS  FD8.2
0CE2C:  BRA    CFC4
.................... if ((PassCheck1[0] == PassCheck2[0]) && (PassCheck1[1] == PassCheck2[1]))  { // contraseña comprobada ok 
0CE2E:  MOVF   x6F,W
0CE30:  SUBWF  x6D,W
0CE32:  BTFSS  FD8.2
0CE34:  BRA    CF3E
0CE36:  MOVF   x70,W
0CE38:  SUBWF  x6E,W
0CE3A:  BTFSS  FD8.2
0CE3C:  BRA    CF3E
.................... LIMPIARLCD; 
0CE3E:  MOVLW  50
0CE40:  MOVWF  FF6
0CE42:  MOVLW  11
0CE44:  MOVWF  FF7
0CE46:  MOVLB  0
0CE48:  CALL   3E86
0CE4C:  CLRF   19
0CE4E:  BTFSC  FF2.7
0CE50:  BSF    19.7
0CE52:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0CE54:  MOVLW  01
0CE56:  MOVLB  1
0CE58:  MOVWF  xA0
0CE5A:  MOVLW  02
0CE5C:  MOVWF  xA1
0CE5E:  MOVLB  0
0CE60:  CALL   156C
0CE64:  BTFSC  19.7
0CE66:  BSF    FF2.7
.................... printf(lcd_putc, "  Clave modificada  "); 
0CE68:  MOVLW  52
0CE6A:  MOVWF  FF6
0CE6C:  MOVLW  11
0CE6E:  MOVWF  FF7
0CE70:  CALL   3E86
0CE74:  CLRF   19
0CE76:  BTFSC  FF2.7
0CE78:  BSF    19.7
0CE7A:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0CE7C:  MOVLW  01
0CE7E:  MOVLB  1
0CE80:  MOVWF  xA0
0CE82:  MOVLW  03
0CE84:  MOVWF  xA1
0CE86:  MOVLB  0
0CE88:  CALL   156C
0CE8C:  BTFSC  19.7
0CE8E:  BSF    FF2.7
.................... printf(lcd_putc, "  correctamente :)  "); 
0CE90:  MOVLW  68
0CE92:  MOVWF  FF6
0CE94:  MOVLW  11
0CE96:  MOVWF  FF7
0CE98:  CALL   3E86
....................  
.................... Passwd[0] = PassCheck1[0];  // Contraseña a RAM 
0CE9C:  MOVFF  16D,110
.................... Passwd[1] = PassCheck1[1];  // Contraseña a RAM 
0CEA0:  MOVFF  16E,111
....................  
.................... write_eeprom(Password,Passwd[0]);  // Contraseña1 de RAM a ROM 
0CEA4:  MOVF   FF2,W
0CEA6:  MOVWF  00
0CEA8:  BCF    FF2.7
0CEAA:  CLRF   FAA
0CEAC:  MOVLW  06
0CEAE:  MOVWF  FA9
0CEB0:  MOVFF  110,FA8
0CEB4:  BCF    FA6.6
0CEB6:  BCF    FA6.7
0CEB8:  BSF    FA6.2
0CEBA:  MOVLB  F
0CEBC:  MOVLW  55
0CEBE:  MOVWF  FA7
0CEC0:  MOVLW  AA
0CEC2:  MOVWF  FA7
0CEC4:  BSF    FA6.1
0CEC6:  BTFSC  FA6.1
0CEC8:  BRA    CEC6
0CECA:  BCF    FA6.2
0CECC:  MOVF   00,W
0CECE:  IORWF  FF2,F
0CED0:  CLRF   19
0CED2:  BTFSC  FF2.7
0CED4:  BSF    19.7
0CED6:  BCF    FF2.7
.................... delay_ms(10); 
0CED8:  MOVLW  0A
0CEDA:  MOVLB  1
0CEDC:  MOVWF  xA8
0CEDE:  MOVLB  0
0CEE0:  CALL   1456
0CEE4:  BTFSC  19.7
0CEE6:  BSF    FF2.7
.................... restart_wdt(); 
0CEE8:  CLRWDT
.................... write_eeprom(Password + 1,Passwd[1]);  // Contraseña2 de RAM a ROM 
0CEEA:  MOVF   FF2,W
0CEEC:  MOVWF  00
0CEEE:  BCF    FF2.7
0CEF0:  CLRF   FAA
0CEF2:  MOVLW  07
0CEF4:  MOVWF  FA9
0CEF6:  MOVFF  111,FA8
0CEFA:  BCF    FA6.6
0CEFC:  BCF    FA6.7
0CEFE:  BSF    FA6.2
0CF00:  MOVLB  F
0CF02:  MOVLW  55
0CF04:  MOVWF  FA7
0CF06:  MOVLW  AA
0CF08:  MOVWF  FA7
0CF0A:  BSF    FA6.1
0CF0C:  BTFSC  FA6.1
0CF0E:  BRA    CF0C
0CF10:  BCF    FA6.2
0CF12:  MOVF   00,W
0CF14:  IORWF  FF2,F
.................... delay_ms(1000); 
0CF16:  MOVLW  04
0CF18:  MOVLB  1
0CF1A:  MOVWF  x72
0CF1C:  CLRF   19
0CF1E:  BTFSC  FF2.7
0CF20:  BSF    19.7
0CF22:  BCF    FF2.7
0CF24:  MOVLW  FA
0CF26:  MOVWF  xA8
0CF28:  MOVLB  0
0CF2A:  CALL   1456
0CF2E:  BTFSC  19.7
0CF30:  BSF    FF2.7
0CF32:  MOVLB  1
0CF34:  DECFSZ x72,F
0CF36:  BRA    CF1C
.................... Menu = 1; 
0CF38:  MOVLW  01
0CF3A:  MOVWF  28
.................... } else { // contraseña no comprobada ok 
0CF3C:  BRA    CFC4
.................... LIMPIARLCD; 
0CF3E:  MOVLW  7E
0CF40:  MOVWF  FF6
0CF42:  MOVLW  11
0CF44:  MOVWF  FF7
0CF46:  MOVLB  0
0CF48:  CALL   3E86
0CF4C:  CLRF   19
0CF4E:  BTFSC  FF2.7
0CF50:  BSF    19.7
0CF52:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0CF54:  MOVLW  01
0CF56:  MOVLB  1
0CF58:  MOVWF  xA0
0CF5A:  MOVLW  02
0CF5C:  MOVWF  xA1
0CF5E:  MOVLB  0
0CF60:  CALL   156C
0CF64:  BTFSC  19.7
0CF66:  BSF    FF2.7
.................... printf(lcd_putc, "  Error: Las claves "); 
0CF68:  MOVLW  80
0CF6A:  MOVWF  FF6
0CF6C:  MOVLW  11
0CF6E:  MOVWF  FF7
0CF70:  CALL   3E86
0CF74:  CLRF   19
0CF76:  BTFSC  FF2.7
0CF78:  BSF    19.7
0CF7A:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0CF7C:  MOVLW  01
0CF7E:  MOVLB  1
0CF80:  MOVWF  xA0
0CF82:  MOVLW  03
0CF84:  MOVWF  xA1
0CF86:  MOVLB  0
0CF88:  CALL   156C
0CF8C:  BTFSC  19.7
0CF8E:  BSF    FF2.7
.................... printf(lcd_putc, "   no coinciden :(  "); 
0CF90:  MOVLW  96
0CF92:  MOVWF  FF6
0CF94:  MOVLW  11
0CF96:  MOVWF  FF7
0CF98:  CALL   3E86
.................... restart_wdt(); 
0CF9C:  CLRWDT
.................... delay_ms(1000); 
0CF9E:  MOVLW  04
0CFA0:  MOVLB  1
0CFA2:  MOVWF  x72
0CFA4:  CLRF   19
0CFA6:  BTFSC  FF2.7
0CFA8:  BSF    19.7
0CFAA:  BCF    FF2.7
0CFAC:  MOVLW  FA
0CFAE:  MOVWF  xA8
0CFB0:  MOVLB  0
0CFB2:  CALL   1456
0CFB6:  BTFSC  19.7
0CFB8:  BSF    FF2.7
0CFBA:  MOVLB  1
0CFBC:  DECFSZ x72,F
0CFBE:  BRA    CFA4
.................... Menu = 1; 
0CFC0:  MOVLW  01
0CFC2:  MOVWF  28
0CFC4:  MOVLB  0
.................... } 
.................... } // if 13 
.................... } // si autenticamos 
.................... } // fn 
0CFC6:  GOTO   E58C (RETURN)
....................  
.................... void Ccasandra(){  // Configuracion de casandra 
....................  
.................... LIMPIARLCD; 
*
09628:  MOVLW  AC
0962A:  MOVWF  FF6
0962C:  MOVLW  11
0962E:  MOVWF  FF7
09630:  CALL   3E86
.................... restart_wdt(); 
09634:  CLRWDT
....................  
.................... char sServ[3]; 
.................... char sAuto1[3]; 
.................... char sAuto2[3]; 
.................... char sAuto3[3]; 
.................... char sAuto4[3]; 
.................... char sWeb[3]; 
....................  
.................... if (bit_test(ConfCas,0)) sServ = "SI"; 
09636:  BTFSS  47.0
09638:  BRA    9656
0963A:  MOVLW  01
0963C:  MOVWF  FEA
0963E:  MOVLW  6D
09640:  MOVWF  FE9
09642:  MOVLW  00
09644:  CALL   018E
09648:  TBLRD*-
0964A:  TBLRD*+
0964C:  MOVF   FF5,W
0964E:  MOVWF  FEE
09650:  IORLW  00
09652:  BNZ   964A
.................... else sServ = "NO"; 
09654:  BRA    9670
09656:  MOVLW  01
09658:  MOVWF  FEA
0965A:  MOVLW  6D
0965C:  MOVWF  FE9
0965E:  MOVLW  00
09660:  CALL   01A2
09664:  TBLRD*-
09666:  TBLRD*+
09668:  MOVF   FF5,W
0966A:  MOVWF  FEE
0966C:  IORLW  00
0966E:  BNZ   9666
.................... if (bit_test(ConfCas,1)) sAuto1 = "SI"; 
09670:  BTFSS  47.1
09672:  BRA    9690
09674:  MOVLW  01
09676:  MOVWF  FEA
09678:  MOVLW  70
0967A:  MOVWF  FE9
0967C:  MOVLW  00
0967E:  CALL   018E
09682:  TBLRD*-
09684:  TBLRD*+
09686:  MOVF   FF5,W
09688:  MOVWF  FEE
0968A:  IORLW  00
0968C:  BNZ   9684
.................... else sAuto1 = "NO"; 
0968E:  BRA    96AA
09690:  MOVLW  01
09692:  MOVWF  FEA
09694:  MOVLW  70
09696:  MOVWF  FE9
09698:  MOVLW  00
0969A:  CALL   01A2
0969E:  TBLRD*-
096A0:  TBLRD*+
096A2:  MOVF   FF5,W
096A4:  MOVWF  FEE
096A6:  IORLW  00
096A8:  BNZ   96A0
.................... if (bit_test(ConfCas,2)) sAuto2 = "SI"; 
096AA:  BTFSS  47.2
096AC:  BRA    96CA
096AE:  MOVLW  01
096B0:  MOVWF  FEA
096B2:  MOVLW  73
096B4:  MOVWF  FE9
096B6:  MOVLW  00
096B8:  CALL   018E
096BC:  TBLRD*-
096BE:  TBLRD*+
096C0:  MOVF   FF5,W
096C2:  MOVWF  FEE
096C4:  IORLW  00
096C6:  BNZ   96BE
.................... else sAuto2 = "NO"; 
096C8:  BRA    96E4
096CA:  MOVLW  01
096CC:  MOVWF  FEA
096CE:  MOVLW  73
096D0:  MOVWF  FE9
096D2:  MOVLW  00
096D4:  CALL   01A2
096D8:  TBLRD*-
096DA:  TBLRD*+
096DC:  MOVF   FF5,W
096DE:  MOVWF  FEE
096E0:  IORLW  00
096E2:  BNZ   96DA
.................... if (bit_test(ConfCas,3)) sAuto3 = "SI"; 
096E4:  BTFSS  47.3
096E6:  BRA    9704
096E8:  MOVLW  01
096EA:  MOVWF  FEA
096EC:  MOVLW  76
096EE:  MOVWF  FE9
096F0:  MOVLW  00
096F2:  CALL   018E
096F6:  TBLRD*-
096F8:  TBLRD*+
096FA:  MOVF   FF5,W
096FC:  MOVWF  FEE
096FE:  IORLW  00
09700:  BNZ   96F8
.................... else sAuto3 = "NO"; 
09702:  BRA    971E
09704:  MOVLW  01
09706:  MOVWF  FEA
09708:  MOVLW  76
0970A:  MOVWF  FE9
0970C:  MOVLW  00
0970E:  CALL   01A2
09712:  TBLRD*-
09714:  TBLRD*+
09716:  MOVF   FF5,W
09718:  MOVWF  FEE
0971A:  IORLW  00
0971C:  BNZ   9714
.................... if (bit_test(ConfCas,4)) sAuto4 = "SI"; 
0971E:  BTFSS  47.4
09720:  BRA    973E
09722:  MOVLW  01
09724:  MOVWF  FEA
09726:  MOVLW  79
09728:  MOVWF  FE9
0972A:  MOVLW  00
0972C:  CALL   018E
09730:  TBLRD*-
09732:  TBLRD*+
09734:  MOVF   FF5,W
09736:  MOVWF  FEE
09738:  IORLW  00
0973A:  BNZ   9732
.................... else sAuto4 = "NO"; 
0973C:  BRA    9758
0973E:  MOVLW  01
09740:  MOVWF  FEA
09742:  MOVLW  79
09744:  MOVWF  FE9
09746:  MOVLW  00
09748:  CALL   01A2
0974C:  TBLRD*-
0974E:  TBLRD*+
09750:  MOVF   FF5,W
09752:  MOVWF  FEE
09754:  IORLW  00
09756:  BNZ   974E
.................... if (bit_test(ConfCas,5)) sWeb = "SI"; 
09758:  BTFSS  47.5
0975A:  BRA    9778
0975C:  MOVLW  01
0975E:  MOVWF  FEA
09760:  MOVLW  7C
09762:  MOVWF  FE9
09764:  MOVLW  00
09766:  CALL   018E
0976A:  TBLRD*-
0976C:  TBLRD*+
0976E:  MOVF   FF5,W
09770:  MOVWF  FEE
09772:  IORLW  00
09774:  BNZ   976C
.................... else sWeb = "NO"; 
09776:  BRA    9792
09778:  MOVLW  01
0977A:  MOVWF  FEA
0977C:  MOVLW  7C
0977E:  MOVWF  FE9
09780:  MOVLW  00
09782:  CALL   01A2
09786:  TBLRD*-
09788:  TBLRD*+
0978A:  MOVF   FF5,W
0978C:  MOVWF  FEE
0978E:  IORLW  00
09790:  BNZ   9788
....................  
.................... int submenu =1; 
09792:  MOVLW  01
09794:  MOVLB  1
09796:  MOVWF  x7F
....................  
.................... while (submenu < 7){ 
09798:  MOVF   x7F,W
0979A:  SUBLW  06
0979C:  BTFSS  FD8.0
0979E:  GOTO   A32E
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
097A2:  BSF    F93.3
097A4:  BTFSS  F81.3
097A6:  BRA    97BA
097A8:  BSF    F93.2
097AA:  BTFSS  F81.2
097AC:  BRA    97BA
097AE:  BSF    F93.1
097B0:  BTFSS  F81.1
097B2:  BRA    97BA
097B4:  BSF    F93.0
097B6:  BTFSC  F81.0
097B8:  BCF    35.0
....................  
.................... if (Rebote == False) { 
097BA:  BTFSC  35.0
097BC:  BRA    97C8
.................... if (input(OOKK) == 0){ 
097BE:  BSF    F93.1
097C0:  BTFSC  F81.1
097C2:  BRA    97C8
.................... Rebote = true; 
097C4:  BSF    35.0
.................... ++submenu; 
097C6:  INCF   x7F,F
.................... } 
.................... } 
....................  
.................... if (Rebote == False) { 
097C8:  BTFSC  35.0
097CA:  BRA    97E2
.................... if (input(CANCEL) == 0){ 
097CC:  BSF    F93.0
097CE:  BTFSC  F81.0
097D0:  BRA    97E2
.................... Rebote = true; 
097D2:  BSF    35.0
.................... --submenu; 
097D4:  DECF   x7F,F
.................... if (submenu == 0){ 
097D6:  MOVF   x7F,F
097D8:  BNZ   97E2
.................... submenu = 8; 
097DA:  MOVLW  08
097DC:  MOVWF  x7F
.................... Menu = 4; 
097DE:  MOVLW  04
097E0:  MOVWF  28
.................... } 
.................... } 
.................... } 
....................  
.................... if (Rebote == False) { 
097E2:  BTFSC  35.0
097E4:  BRA    99BA
.................... if ((input(ABAJO) == 0) || (input(ARRIBA)) == 0) { // si arriba o abajo togleo 
097E6:  BSF    F93.2
097E8:  BTFSS  F81.2
097EA:  BRA    97F2
097EC:  BSF    F93.3
097EE:  BTFSC  F81.3
097F0:  BRA    99BA
.................... Rebote = true; 
097F2:  BSF    35.0
....................    if (submenu == 1) { // dentro de SERV 
097F4:  DECFSZ x7F,W
097F6:  BRA    983E
....................          if (bit_test(ConfCas,0)){ 
097F8:  BTFSS  47.0
097FA:  BRA    981E
....................          bit_clear(ConfCas,0); 
097FC:  BCF    47.0
....................          sServ = "NO"; 
097FE:  MOVLW  01
09800:  MOVWF  FEA
09802:  MOVLW  6D
09804:  MOVWF  FE9
09806:  MOVLW  00
09808:  MOVLB  0
0980A:  CALL   01A2
0980E:  TBLRD*-
09810:  TBLRD*+
09812:  MOVF   FF5,W
09814:  MOVWF  FEE
09816:  IORLW  00
09818:  BNZ   9810
....................          } 
....................          else { 
0981A:  BRA    983C
0981C:  MOVLB  1
....................          bit_set(ConfCas,0); 
0981E:  BSF    47.0
....................          sServ = "SI"; 
09820:  MOVLW  01
09822:  MOVWF  FEA
09824:  MOVLW  6D
09826:  MOVWF  FE9
09828:  MOVLW  00
0982A:  MOVLB  0
0982C:  CALL   018E
09830:  TBLRD*-
09832:  TBLRD*+
09834:  MOVF   FF5,W
09836:  MOVWF  FEE
09838:  IORLW  00
0983A:  BNZ   9832
0983C:  MOVLB  1
....................          } 
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 2) { // dentro de AUTO1 
0983E:  MOVF   x7F,W
09840:  SUBLW  02
09842:  BNZ   988A
....................          if (bit_test(ConfCas,1)){ 
09844:  BTFSS  47.1
09846:  BRA    986A
....................          bit_clear(ConfCas,1); 
09848:  BCF    47.1
....................          sAuto1 = "NO"; 
0984A:  MOVLW  01
0984C:  MOVWF  FEA
0984E:  MOVLW  70
09850:  MOVWF  FE9
09852:  MOVLW  00
09854:  MOVLB  0
09856:  CALL   01A2
0985A:  TBLRD*-
0985C:  TBLRD*+
0985E:  MOVF   FF5,W
09860:  MOVWF  FEE
09862:  IORLW  00
09864:  BNZ   985C
....................          } 
....................          else { 
09866:  BRA    9888
09868:  MOVLB  1
....................          bit_set(ConfCas,1); 
0986A:  BSF    47.1
....................          sAuto1 = "SI"; 
0986C:  MOVLW  01
0986E:  MOVWF  FEA
09870:  MOVLW  70
09872:  MOVWF  FE9
09874:  MOVLW  00
09876:  MOVLB  0
09878:  CALL   018E
0987C:  TBLRD*-
0987E:  TBLRD*+
09880:  MOVF   FF5,W
09882:  MOVWF  FEE
09884:  IORLW  00
09886:  BNZ   987E
09888:  MOVLB  1
....................          } 
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 3) { // dentro de AUTO2 
0988A:  MOVF   x7F,W
0988C:  SUBLW  03
0988E:  BNZ   98D6
....................          if (bit_test(ConfCas,2)){ 
09890:  BTFSS  47.2
09892:  BRA    98B6
....................          bit_clear(ConfCas,2); 
09894:  BCF    47.2
....................          sAuto2 = "NO"; 
09896:  MOVLW  01
09898:  MOVWF  FEA
0989A:  MOVLW  73
0989C:  MOVWF  FE9
0989E:  MOVLW  00
098A0:  MOVLB  0
098A2:  CALL   01A2
098A6:  TBLRD*-
098A8:  TBLRD*+
098AA:  MOVF   FF5,W
098AC:  MOVWF  FEE
098AE:  IORLW  00
098B0:  BNZ   98A8
....................          } 
....................          else { 
098B2:  BRA    98D4
098B4:  MOVLB  1
....................          bit_set(ConfCas,2); 
098B6:  BSF    47.2
....................          sAuto2 = "SI"; 
098B8:  MOVLW  01
098BA:  MOVWF  FEA
098BC:  MOVLW  73
098BE:  MOVWF  FE9
098C0:  MOVLW  00
098C2:  MOVLB  0
098C4:  CALL   018E
098C8:  TBLRD*-
098CA:  TBLRD*+
098CC:  MOVF   FF5,W
098CE:  MOVWF  FEE
098D0:  IORLW  00
098D2:  BNZ   98CA
098D4:  MOVLB  1
....................          } 
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 4) { // dentro de AUTO3 
098D6:  MOVF   x7F,W
098D8:  SUBLW  04
098DA:  BNZ   9922
....................          if (bit_test(ConfCas,3)){ 
098DC:  BTFSS  47.3
098DE:  BRA    9902
....................          bit_clear(ConfCas,3); 
098E0:  BCF    47.3
....................          sAuto3 = "NO"; 
098E2:  MOVLW  01
098E4:  MOVWF  FEA
098E6:  MOVLW  76
098E8:  MOVWF  FE9
098EA:  MOVLW  00
098EC:  MOVLB  0
098EE:  CALL   01A2
098F2:  TBLRD*-
098F4:  TBLRD*+
098F6:  MOVF   FF5,W
098F8:  MOVWF  FEE
098FA:  IORLW  00
098FC:  BNZ   98F4
....................          } 
....................          else { 
098FE:  BRA    9920
09900:  MOVLB  1
....................          bit_set(ConfCas,3); 
09902:  BSF    47.3
....................          sAuto3 = "SI"; 
09904:  MOVLW  01
09906:  MOVWF  FEA
09908:  MOVLW  76
0990A:  MOVWF  FE9
0990C:  MOVLW  00
0990E:  MOVLB  0
09910:  CALL   018E
09914:  TBLRD*-
09916:  TBLRD*+
09918:  MOVF   FF5,W
0991A:  MOVWF  FEE
0991C:  IORLW  00
0991E:  BNZ   9916
09920:  MOVLB  1
....................          } 
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 5) { // dentro de AUTO4 
09922:  MOVF   x7F,W
09924:  SUBLW  05
09926:  BNZ   996E
....................          if (bit_test(ConfCas,4)){ 
09928:  BTFSS  47.4
0992A:  BRA    994E
....................          bit_clear(ConfCas,4); 
0992C:  BCF    47.4
....................          sAuto4 = "NO"; 
0992E:  MOVLW  01
09930:  MOVWF  FEA
09932:  MOVLW  79
09934:  MOVWF  FE9
09936:  MOVLW  00
09938:  MOVLB  0
0993A:  CALL   01A2
0993E:  TBLRD*-
09940:  TBLRD*+
09942:  MOVF   FF5,W
09944:  MOVWF  FEE
09946:  IORLW  00
09948:  BNZ   9940
....................          } 
....................          else { 
0994A:  BRA    996C
0994C:  MOVLB  1
....................          bit_set(ConfCas,4); 
0994E:  BSF    47.4
....................          sAuto4 = "SI"; 
09950:  MOVLW  01
09952:  MOVWF  FEA
09954:  MOVLW  79
09956:  MOVWF  FE9
09958:  MOVLW  00
0995A:  MOVLB  0
0995C:  CALL   018E
09960:  TBLRD*-
09962:  TBLRD*+
09964:  MOVF   FF5,W
09966:  MOVWF  FEE
09968:  IORLW  00
0996A:  BNZ   9962
0996C:  MOVLB  1
....................          } 
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 6) { // Dentro de Web 
0996E:  MOVF   x7F,W
09970:  SUBLW  06
09972:  BNZ   99BA
....................          if (bit_test(ConfCas,5)){ 
09974:  BTFSS  47.5
09976:  BRA    999A
....................          bit_clear(ConfCas,5); 
09978:  BCF    47.5
....................          sWeb = "NO"; 
0997A:  MOVLW  01
0997C:  MOVWF  FEA
0997E:  MOVLW  7C
09980:  MOVWF  FE9
09982:  MOVLW  00
09984:  MOVLB  0
09986:  CALL   01A2
0998A:  TBLRD*-
0998C:  TBLRD*+
0998E:  MOVF   FF5,W
09990:  MOVWF  FEE
09992:  IORLW  00
09994:  BNZ   998C
....................          } 
....................          else { 
09996:  BRA    99B8
09998:  MOVLB  1
....................          bit_set(ConfCas,5); 
0999A:  BSF    47.5
....................          sWeb = "SI"; 
0999C:  MOVLW  01
0999E:  MOVWF  FEA
099A0:  MOVLW  7C
099A2:  MOVWF  FE9
099A4:  MOVLW  00
099A6:  MOVLB  0
099A8:  CALL   018E
099AC:  TBLRD*-
099AE:  TBLRD*+
099B0:  MOVF   FF5,W
099B2:  MOVWF  FEE
099B4:  IORLW  00
099B6:  BNZ   99AE
099B8:  MOVLB  1
099BA:  CLRF   19
099BC:  BTFSC  FF2.7
099BE:  BSF    19.7
099C0:  BCF    FF2.7
....................          } 
....................    } // arriba dentro de mes 
....................  
.................... } // si arriba o abajo 
.................... } // rebote falso 
....................  
....................  
.................... lcd_gotoxy(1,1); 
099C2:  MOVLW  01
099C4:  MOVWF  xA0
099C6:  MOVWF  xA1
099C8:  MOVLB  0
099CA:  CALL   156C
099CE:  BTFSC  19.7
099D0:  BSF    FF2.7
.................... printf(lcd_putc, "== Conf. Casandra =="); 
099D2:  MOVLW  AE
099D4:  MOVWF  FF6
099D6:  MOVLW  11
099D8:  MOVWF  FF7
099DA:  CALL   3E86
.................... if ((submenu == 1) || (submenu == 2) || (submenu == 3)) { 
099DE:  MOVLB  1
099E0:  DECFSZ x7F,W
099E2:  BRA    99E6
099E4:  BRA    99F4
099E6:  MOVF   x7F,W
099E8:  SUBLW  02
099EA:  BZ    99F4
099EC:  MOVF   x7F,W
099EE:  SUBLW  03
099F0:  BTFSS  FD8.2
099F2:  BRA    9C3A
099F4:  CLRF   19
099F6:  BTFSC  FF2.7
099F8:  BSF    19.7
099FA:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
099FC:  MOVLW  01
099FE:  MOVWF  xA0
09A00:  MOVLW  02
09A02:  MOVWF  xA1
09A04:  MOVLB  0
09A06:  CALL   156C
09A0A:  BTFSC  19.7
09A0C:  BSF    FF2.7
.................... printf(lcd_putc, "  Luz Pasillos: "); 
09A0E:  MOVLW  C4
09A10:  MOVWF  FF6
09A12:  MOVLW  11
09A14:  MOVWF  FF7
09A16:  CALL   3E86
09A1A:  CLRF   19
09A1C:  BTFSC  FF2.7
09A1E:  BSF    19.7
09A20:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
09A22:  MOVLW  01
09A24:  MOVLB  1
09A26:  MOVWF  xA0
09A28:  MOVLW  03
09A2A:  MOVWF  xA1
09A2C:  MOVLB  0
09A2E:  CALL   156C
09A32:  BTFSC  19.7
09A34:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 1: "); 
09A36:  MOVLW  D6
09A38:  MOVWF  FF6
09A3A:  MOVLW  11
09A3C:  MOVWF  FF7
09A3E:  CALL   3E86
09A42:  CLRF   19
09A44:  BTFSC  FF2.7
09A46:  BSF    19.7
09A48:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
09A4A:  MOVLW  01
09A4C:  MOVLB  1
09A4E:  MOVWF  xA0
09A50:  MOVLW  04
09A52:  MOVWF  xA1
09A54:  MOVLB  0
09A56:  CALL   156C
09A5A:  BTFSC  19.7
09A5C:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 2: "); 
09A5E:  MOVLW  E8
09A60:  MOVWF  FF6
09A62:  MOVLW  11
09A64:  MOVWF  FF7
09A66:  CALL   3E86
09A6A:  CLRF   19
09A6C:  BTFSC  FF2.7
09A6E:  BSF    19.7
09A70:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,2); 
09A72:  MOVLW  10
09A74:  MOVLB  1
09A76:  MOVWF  xA0
09A78:  MOVLW  02
09A7A:  MOVWF  xA1
09A7C:  MOVLB  0
09A7E:  CALL   156C
09A82:  BTFSC  19.7
09A84:  BSF    FF2.7
.................... if (submenu == 1) { 
09A86:  MOVLB  1
09A88:  DECFSZ x7F,W
09A8A:  BRA    9AD4
....................    if (bit_test(tiempo1,0)){ 
09A8C:  BTFSS  49.0
09A8E:  BRA    9AC2
....................       printf(lcd_putc, " %s  ", sServ); 
09A90:  MOVLW  20
09A92:  MOVWF  x93
09A94:  MOVLB  0
09A96:  CALL   3DE6
09A9A:  MOVLW  01
09A9C:  MOVWF  FEA
09A9E:  MOVLW  6D
09AA0:  MOVWF  FE9
09AA2:  CALL   4518
09AA6:  MOVLW  20
09AA8:  MOVLB  1
09AAA:  MOVWF  x93
09AAC:  MOVLB  0
09AAE:  CALL   3DE6
09AB2:  MOVLW  20
09AB4:  MOVLB  1
09AB6:  MOVWF  x93
09AB8:  MOVLB  0
09ABA:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09ABE:  BRA    9AD0
09AC0:  MOVLB  1
09AC2:  MOVLW  FA
09AC4:  MOVWF  FF6
09AC6:  MOVLW  11
09AC8:  MOVWF  FF7
09ACA:  MOVLB  0
09ACC:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sServ); 
09AD0:  BRA    9B02
09AD2:  MOVLB  1
09AD4:  MOVLW  20
09AD6:  MOVWF  x93
09AD8:  MOVLB  0
09ADA:  CALL   3DE6
09ADE:  MOVLW  01
09AE0:  MOVWF  FEA
09AE2:  MOVLW  6D
09AE4:  MOVWF  FE9
09AE6:  CALL   4518
09AEA:  MOVLW  20
09AEC:  MOVLB  1
09AEE:  MOVWF  x93
09AF0:  MOVLB  0
09AF2:  CALL   3DE6
09AF6:  MOVLW  20
09AF8:  MOVLB  1
09AFA:  MOVWF  x93
09AFC:  MOVLB  0
09AFE:  CALL   3DE6
09B02:  CLRF   19
09B04:  BTFSC  FF2.7
09B06:  BSF    19.7
09B08:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,3); 
09B0A:  MOVLW  10
09B0C:  MOVLB  1
09B0E:  MOVWF  xA0
09B10:  MOVLW  03
09B12:  MOVWF  xA1
09B14:  MOVLB  0
09B16:  CALL   156C
09B1A:  BTFSC  19.7
09B1C:  BSF    FF2.7
.................... if (submenu == 2) { 
09B1E:  MOVLB  1
09B20:  MOVF   x7F,W
09B22:  SUBLW  02
09B24:  BNZ   9B6E
....................    if (bit_test(tiempo1,0)){ 
09B26:  BTFSS  49.0
09B28:  BRA    9B5C
....................       printf(lcd_putc, " %s  ", sAuto1); 
09B2A:  MOVLW  20
09B2C:  MOVWF  x93
09B2E:  MOVLB  0
09B30:  CALL   3DE6
09B34:  MOVLW  01
09B36:  MOVWF  FEA
09B38:  MOVLW  70
09B3A:  MOVWF  FE9
09B3C:  CALL   4518
09B40:  MOVLW  20
09B42:  MOVLB  1
09B44:  MOVWF  x93
09B46:  MOVLB  0
09B48:  CALL   3DE6
09B4C:  MOVLW  20
09B4E:  MOVLB  1
09B50:  MOVWF  x93
09B52:  MOVLB  0
09B54:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09B58:  BRA    9B6A
09B5A:  MOVLB  1
09B5C:  MOVLW  FE
09B5E:  MOVWF  FF6
09B60:  MOVLW  11
09B62:  MOVWF  FF7
09B64:  MOVLB  0
09B66:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto1); 
09B6A:  BRA    9B9C
09B6C:  MOVLB  1
09B6E:  MOVLW  20
09B70:  MOVWF  x93
09B72:  MOVLB  0
09B74:  CALL   3DE6
09B78:  MOVLW  01
09B7A:  MOVWF  FEA
09B7C:  MOVLW  70
09B7E:  MOVWF  FE9
09B80:  CALL   4518
09B84:  MOVLW  20
09B86:  MOVLB  1
09B88:  MOVWF  x93
09B8A:  MOVLB  0
09B8C:  CALL   3DE6
09B90:  MOVLW  20
09B92:  MOVLB  1
09B94:  MOVWF  x93
09B96:  MOVLB  0
09B98:  CALL   3DE6
09B9C:  CLRF   19
09B9E:  BTFSC  FF2.7
09BA0:  BSF    19.7
09BA2:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,4); 
09BA4:  MOVLW  10
09BA6:  MOVLB  1
09BA8:  MOVWF  xA0
09BAA:  MOVLW  04
09BAC:  MOVWF  xA1
09BAE:  MOVLB  0
09BB0:  CALL   156C
09BB4:  BTFSC  19.7
09BB6:  BSF    FF2.7
.................... if (submenu == 3) { 
09BB8:  MOVLB  1
09BBA:  MOVF   x7F,W
09BBC:  SUBLW  03
09BBE:  BNZ   9C08
....................    if (bit_test(tiempo1,0)){ 
09BC0:  BTFSS  49.0
09BC2:  BRA    9BF6
....................       printf(lcd_putc, " %s  ", sAuto2); 
09BC4:  MOVLW  20
09BC6:  MOVWF  x93
09BC8:  MOVLB  0
09BCA:  CALL   3DE6
09BCE:  MOVLW  01
09BD0:  MOVWF  FEA
09BD2:  MOVLW  73
09BD4:  MOVWF  FE9
09BD6:  CALL   4518
09BDA:  MOVLW  20
09BDC:  MOVLB  1
09BDE:  MOVWF  x93
09BE0:  MOVLB  0
09BE2:  CALL   3DE6
09BE6:  MOVLW  20
09BE8:  MOVLB  1
09BEA:  MOVWF  x93
09BEC:  MOVLB  0
09BEE:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09BF2:  BRA    9C04
09BF4:  MOVLB  1
09BF6:  MOVLW  02
09BF8:  MOVWF  FF6
09BFA:  MOVLW  12
09BFC:  MOVWF  FF7
09BFE:  MOVLB  0
09C00:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto2); 
09C04:  BRA    9C36
09C06:  MOVLB  1
09C08:  MOVLW  20
09C0A:  MOVWF  x93
09C0C:  MOVLB  0
09C0E:  CALL   3DE6
09C12:  MOVLW  01
09C14:  MOVWF  FEA
09C16:  MOVLW  73
09C18:  MOVWF  FE9
09C1A:  CALL   4518
09C1E:  MOVLW  20
09C20:  MOVLB  1
09C22:  MOVWF  x93
09C24:  MOVLB  0
09C26:  CALL   3DE6
09C2A:  MOVLW  20
09C2C:  MOVLB  1
09C2E:  MOVWF  x93
09C30:  MOVLB  0
09C32:  CALL   3DE6
....................  
.................... restart_wdt(); 
09C36:  CLRWDT
09C38:  MOVLB  1
.................... } // primeros 3 
....................  
.................... if (submenu == 4) { // mirando el 4to 
09C3A:  MOVF   x7F,W
09C3C:  SUBLW  04
09C3E:  BTFSS  FD8.2
09C40:  BRA    9E8A
09C42:  CLRF   19
09C44:  BTFSC  FF2.7
09C46:  BSF    19.7
09C48:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
09C4A:  MOVLW  01
09C4C:  MOVWF  xA0
09C4E:  MOVLW  02
09C50:  MOVWF  xA1
09C52:  MOVLB  0
09C54:  CALL   156C
09C58:  BTFSC  19.7
09C5A:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 1: "); 
09C5C:  MOVLW  06
09C5E:  MOVWF  FF6
09C60:  MOVLW  12
09C62:  MOVWF  FF7
09C64:  CALL   3E86
09C68:  CLRF   19
09C6A:  BTFSC  FF2.7
09C6C:  BSF    19.7
09C6E:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
09C70:  MOVLW  01
09C72:  MOVLB  1
09C74:  MOVWF  xA0
09C76:  MOVLW  03
09C78:  MOVWF  xA1
09C7A:  MOVLB  0
09C7C:  CALL   156C
09C80:  BTFSC  19.7
09C82:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 2: "); 
09C84:  MOVLW  18
09C86:  MOVWF  FF6
09C88:  MOVLW  12
09C8A:  MOVWF  FF7
09C8C:  CALL   3E86
09C90:  CLRF   19
09C92:  BTFSC  FF2.7
09C94:  BSF    19.7
09C96:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
09C98:  MOVLW  01
09C9A:  MOVLB  1
09C9C:  MOVWF  xA0
09C9E:  MOVLW  04
09CA0:  MOVWF  xA1
09CA2:  MOVLB  0
09CA4:  CALL   156C
09CA8:  BTFSC  19.7
09CAA:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 3: "); 
09CAC:  MOVLW  2A
09CAE:  MOVWF  FF6
09CB0:  MOVLW  12
09CB2:  MOVWF  FF7
09CB4:  CALL   3E86
09CB8:  CLRF   19
09CBA:  BTFSC  FF2.7
09CBC:  BSF    19.7
09CBE:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,2); 
09CC0:  MOVLW  10
09CC2:  MOVLB  1
09CC4:  MOVWF  xA0
09CC6:  MOVLW  02
09CC8:  MOVWF  xA1
09CCA:  MOVLB  0
09CCC:  CALL   156C
09CD0:  BTFSC  19.7
09CD2:  BSF    FF2.7
.................... if (submenu == 2) { 
09CD4:  MOVLB  1
09CD6:  MOVF   x7F,W
09CD8:  SUBLW  02
09CDA:  BNZ   9D24
....................    if (bit_test(tiempo1,0)){ 
09CDC:  BTFSS  49.0
09CDE:  BRA    9D12
....................       printf(lcd_putc, " %s  ", sAuto1); 
09CE0:  MOVLW  20
09CE2:  MOVWF  x93
09CE4:  MOVLB  0
09CE6:  CALL   3DE6
09CEA:  MOVLW  01
09CEC:  MOVWF  FEA
09CEE:  MOVLW  70
09CF0:  MOVWF  FE9
09CF2:  CALL   4518
09CF6:  MOVLW  20
09CF8:  MOVLB  1
09CFA:  MOVWF  x93
09CFC:  MOVLB  0
09CFE:  CALL   3DE6
09D02:  MOVLW  20
09D04:  MOVLB  1
09D06:  MOVWF  x93
09D08:  MOVLB  0
09D0A:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09D0E:  BRA    9D20
09D10:  MOVLB  1
09D12:  MOVLW  3C
09D14:  MOVWF  FF6
09D16:  MOVLW  12
09D18:  MOVWF  FF7
09D1A:  MOVLB  0
09D1C:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto1); 
09D20:  BRA    9D52
09D22:  MOVLB  1
09D24:  MOVLW  20
09D26:  MOVWF  x93
09D28:  MOVLB  0
09D2A:  CALL   3DE6
09D2E:  MOVLW  01
09D30:  MOVWF  FEA
09D32:  MOVLW  70
09D34:  MOVWF  FE9
09D36:  CALL   4518
09D3A:  MOVLW  20
09D3C:  MOVLB  1
09D3E:  MOVWF  x93
09D40:  MOVLB  0
09D42:  CALL   3DE6
09D46:  MOVLW  20
09D48:  MOVLB  1
09D4A:  MOVWF  x93
09D4C:  MOVLB  0
09D4E:  CALL   3DE6
09D52:  CLRF   19
09D54:  BTFSC  FF2.7
09D56:  BSF    19.7
09D58:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,3); 
09D5A:  MOVLW  10
09D5C:  MOVLB  1
09D5E:  MOVWF  xA0
09D60:  MOVLW  03
09D62:  MOVWF  xA1
09D64:  MOVLB  0
09D66:  CALL   156C
09D6A:  BTFSC  19.7
09D6C:  BSF    FF2.7
.................... if (submenu == 3) { 
09D6E:  MOVLB  1
09D70:  MOVF   x7F,W
09D72:  SUBLW  03
09D74:  BNZ   9DBE
....................    if (bit_test(tiempo1,0)){ 
09D76:  BTFSS  49.0
09D78:  BRA    9DAC
....................       printf(lcd_putc, " %s  ", sAuto2); 
09D7A:  MOVLW  20
09D7C:  MOVWF  x93
09D7E:  MOVLB  0
09D80:  CALL   3DE6
09D84:  MOVLW  01
09D86:  MOVWF  FEA
09D88:  MOVLW  73
09D8A:  MOVWF  FE9
09D8C:  CALL   4518
09D90:  MOVLW  20
09D92:  MOVLB  1
09D94:  MOVWF  x93
09D96:  MOVLB  0
09D98:  CALL   3DE6
09D9C:  MOVLW  20
09D9E:  MOVLB  1
09DA0:  MOVWF  x93
09DA2:  MOVLB  0
09DA4:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09DA8:  BRA    9DBA
09DAA:  MOVLB  1
09DAC:  MOVLW  40
09DAE:  MOVWF  FF6
09DB0:  MOVLW  12
09DB2:  MOVWF  FF7
09DB4:  MOVLB  0
09DB6:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto2); 
09DBA:  BRA    9DEC
09DBC:  MOVLB  1
09DBE:  MOVLW  20
09DC0:  MOVWF  x93
09DC2:  MOVLB  0
09DC4:  CALL   3DE6
09DC8:  MOVLW  01
09DCA:  MOVWF  FEA
09DCC:  MOVLW  73
09DCE:  MOVWF  FE9
09DD0:  CALL   4518
09DD4:  MOVLW  20
09DD6:  MOVLB  1
09DD8:  MOVWF  x93
09DDA:  MOVLB  0
09DDC:  CALL   3DE6
09DE0:  MOVLW  20
09DE2:  MOVLB  1
09DE4:  MOVWF  x93
09DE6:  MOVLB  0
09DE8:  CALL   3DE6
09DEC:  CLRF   19
09DEE:  BTFSC  FF2.7
09DF0:  BSF    19.7
09DF2:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,4); 
09DF4:  MOVLW  10
09DF6:  MOVLB  1
09DF8:  MOVWF  xA0
09DFA:  MOVLW  04
09DFC:  MOVWF  xA1
09DFE:  MOVLB  0
09E00:  CALL   156C
09E04:  BTFSC  19.7
09E06:  BSF    FF2.7
.................... if (submenu == 4) { 
09E08:  MOVLB  1
09E0A:  MOVF   x7F,W
09E0C:  SUBLW  04
09E0E:  BNZ   9E58
....................    if (bit_test(tiempo1,0)){ 
09E10:  BTFSS  49.0
09E12:  BRA    9E46
....................       printf(lcd_putc, " %s  ", sAuto3); 
09E14:  MOVLW  20
09E16:  MOVWF  x93
09E18:  MOVLB  0
09E1A:  CALL   3DE6
09E1E:  MOVLW  01
09E20:  MOVWF  FEA
09E22:  MOVLW  76
09E24:  MOVWF  FE9
09E26:  CALL   4518
09E2A:  MOVLW  20
09E2C:  MOVLB  1
09E2E:  MOVWF  x93
09E30:  MOVLB  0
09E32:  CALL   3DE6
09E36:  MOVLW  20
09E38:  MOVLB  1
09E3A:  MOVWF  x93
09E3C:  MOVLB  0
09E3E:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09E42:  BRA    9E54
09E44:  MOVLB  1
09E46:  MOVLW  44
09E48:  MOVWF  FF6
09E4A:  MOVLW  12
09E4C:  MOVWF  FF7
09E4E:  MOVLB  0
09E50:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto3); 
09E54:  BRA    9E86
09E56:  MOVLB  1
09E58:  MOVLW  20
09E5A:  MOVWF  x93
09E5C:  MOVLB  0
09E5E:  CALL   3DE6
09E62:  MOVLW  01
09E64:  MOVWF  FEA
09E66:  MOVLW  76
09E68:  MOVWF  FE9
09E6A:  CALL   4518
09E6E:  MOVLW  20
09E70:  MOVLB  1
09E72:  MOVWF  x93
09E74:  MOVLB  0
09E76:  CALL   3DE6
09E7A:  MOVLW  20
09E7C:  MOVLB  1
09E7E:  MOVWF  x93
09E80:  MOVLB  0
09E82:  CALL   3DE6
....................  
.................... restart_wdt(); 
09E86:  CLRWDT
09E88:  MOVLB  1
.................... } // mirando el 4 
....................  
.................... if (submenu == 5) {  // llegando al ultimo 
09E8A:  MOVF   x7F,W
09E8C:  SUBLW  05
09E8E:  BTFSS  FD8.2
09E90:  BRA    A0DA
09E92:  CLRF   19
09E94:  BTFSC  FF2.7
09E96:  BSF    19.7
09E98:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
09E9A:  MOVLW  01
09E9C:  MOVWF  xA0
09E9E:  MOVLW  02
09EA0:  MOVWF  xA1
09EA2:  MOVLB  0
09EA4:  CALL   156C
09EA8:  BTFSC  19.7
09EAA:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 2: "); 
09EAC:  MOVLW  48
09EAE:  MOVWF  FF6
09EB0:  MOVLW  12
09EB2:  MOVWF  FF7
09EB4:  CALL   3E86
09EB8:  CLRF   19
09EBA:  BTFSC  FF2.7
09EBC:  BSF    19.7
09EBE:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
09EC0:  MOVLW  01
09EC2:  MOVLB  1
09EC4:  MOVWF  xA0
09EC6:  MOVLW  03
09EC8:  MOVWF  xA1
09ECA:  MOVLB  0
09ECC:  CALL   156C
09ED0:  BTFSC  19.7
09ED2:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 3: "); 
09ED4:  MOVLW  5A
09ED6:  MOVWF  FF6
09ED8:  MOVLW  12
09EDA:  MOVWF  FF7
09EDC:  CALL   3E86
09EE0:  CLRF   19
09EE2:  BTFSC  FF2.7
09EE4:  BSF    19.7
09EE6:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
09EE8:  MOVLW  01
09EEA:  MOVLB  1
09EEC:  MOVWF  xA0
09EEE:  MOVLW  04
09EF0:  MOVWF  xA1
09EF2:  MOVLB  0
09EF4:  CALL   156C
09EF8:  BTFSC  19.7
09EFA:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 4: "); 
09EFC:  MOVLW  6C
09EFE:  MOVWF  FF6
09F00:  MOVLW  12
09F02:  MOVWF  FF7
09F04:  CALL   3E86
09F08:  CLRF   19
09F0A:  BTFSC  FF2.7
09F0C:  BSF    19.7
09F0E:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,2); 
09F10:  MOVLW  10
09F12:  MOVLB  1
09F14:  MOVWF  xA0
09F16:  MOVLW  02
09F18:  MOVWF  xA1
09F1A:  MOVLB  0
09F1C:  CALL   156C
09F20:  BTFSC  19.7
09F22:  BSF    FF2.7
.................... if (submenu == 3) { 
09F24:  MOVLB  1
09F26:  MOVF   x7F,W
09F28:  SUBLW  03
09F2A:  BNZ   9F74
....................    if (bit_test(tiempo1,0)){ 
09F2C:  BTFSS  49.0
09F2E:  BRA    9F62
....................       printf(lcd_putc, " %s  ", sAuto2); 
09F30:  MOVLW  20
09F32:  MOVWF  x93
09F34:  MOVLB  0
09F36:  CALL   3DE6
09F3A:  MOVLW  01
09F3C:  MOVWF  FEA
09F3E:  MOVLW  73
09F40:  MOVWF  FE9
09F42:  CALL   4518
09F46:  MOVLW  20
09F48:  MOVLB  1
09F4A:  MOVWF  x93
09F4C:  MOVLB  0
09F4E:  CALL   3DE6
09F52:  MOVLW  20
09F54:  MOVLB  1
09F56:  MOVWF  x93
09F58:  MOVLB  0
09F5A:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09F5E:  BRA    9F70
09F60:  MOVLB  1
09F62:  MOVLW  7E
09F64:  MOVWF  FF6
09F66:  MOVLW  12
09F68:  MOVWF  FF7
09F6A:  MOVLB  0
09F6C:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto2); 
09F70:  BRA    9FA2
09F72:  MOVLB  1
09F74:  MOVLW  20
09F76:  MOVWF  x93
09F78:  MOVLB  0
09F7A:  CALL   3DE6
09F7E:  MOVLW  01
09F80:  MOVWF  FEA
09F82:  MOVLW  73
09F84:  MOVWF  FE9
09F86:  CALL   4518
09F8A:  MOVLW  20
09F8C:  MOVLB  1
09F8E:  MOVWF  x93
09F90:  MOVLB  0
09F92:  CALL   3DE6
09F96:  MOVLW  20
09F98:  MOVLB  1
09F9A:  MOVWF  x93
09F9C:  MOVLB  0
09F9E:  CALL   3DE6
09FA2:  CLRF   19
09FA4:  BTFSC  FF2.7
09FA6:  BSF    19.7
09FA8:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,3); 
09FAA:  MOVLW  10
09FAC:  MOVLB  1
09FAE:  MOVWF  xA0
09FB0:  MOVLW  03
09FB2:  MOVWF  xA1
09FB4:  MOVLB  0
09FB6:  CALL   156C
09FBA:  BTFSC  19.7
09FBC:  BSF    FF2.7
.................... if (submenu == 4) { 
09FBE:  MOVLB  1
09FC0:  MOVF   x7F,W
09FC2:  SUBLW  04
09FC4:  BNZ   A00E
....................    if (bit_test(tiempo1,0)){ 
09FC6:  BTFSS  49.0
09FC8:  BRA    9FFC
....................       printf(lcd_putc, " %s  ", sAuto3); 
09FCA:  MOVLW  20
09FCC:  MOVWF  x93
09FCE:  MOVLB  0
09FD0:  CALL   3DE6
09FD4:  MOVLW  01
09FD6:  MOVWF  FEA
09FD8:  MOVLW  76
09FDA:  MOVWF  FE9
09FDC:  CALL   4518
09FE0:  MOVLW  20
09FE2:  MOVLB  1
09FE4:  MOVWF  x93
09FE6:  MOVLB  0
09FE8:  CALL   3DE6
09FEC:  MOVLW  20
09FEE:  MOVLB  1
09FF0:  MOVWF  x93
09FF2:  MOVLB  0
09FF4:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
09FF8:  BRA    A00A
09FFA:  MOVLB  1
09FFC:  MOVLW  82
09FFE:  MOVWF  FF6
0A000:  MOVLW  12
0A002:  MOVWF  FF7
0A004:  MOVLB  0
0A006:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto3); 
0A00A:  BRA    A03C
0A00C:  MOVLB  1
0A00E:  MOVLW  20
0A010:  MOVWF  x93
0A012:  MOVLB  0
0A014:  CALL   3DE6
0A018:  MOVLW  01
0A01A:  MOVWF  FEA
0A01C:  MOVLW  76
0A01E:  MOVWF  FE9
0A020:  CALL   4518
0A024:  MOVLW  20
0A026:  MOVLB  1
0A028:  MOVWF  x93
0A02A:  MOVLB  0
0A02C:  CALL   3DE6
0A030:  MOVLW  20
0A032:  MOVLB  1
0A034:  MOVWF  x93
0A036:  MOVLB  0
0A038:  CALL   3DE6
0A03C:  CLRF   19
0A03E:  BTFSC  FF2.7
0A040:  BSF    19.7
0A042:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,4); 
0A044:  MOVLW  10
0A046:  MOVLB  1
0A048:  MOVWF  xA0
0A04A:  MOVLW  04
0A04C:  MOVWF  xA1
0A04E:  MOVLB  0
0A050:  CALL   156C
0A054:  BTFSC  19.7
0A056:  BSF    FF2.7
.................... if (submenu == 5) { 
0A058:  MOVLB  1
0A05A:  MOVF   x7F,W
0A05C:  SUBLW  05
0A05E:  BNZ   A0A8
....................    if (bit_test(tiempo1,0)){ 
0A060:  BTFSS  49.0
0A062:  BRA    A096
....................       printf(lcd_putc, " %s  ", sAuto4); 
0A064:  MOVLW  20
0A066:  MOVWF  x93
0A068:  MOVLB  0
0A06A:  CALL   3DE6
0A06E:  MOVLW  01
0A070:  MOVWF  FEA
0A072:  MOVLW  79
0A074:  MOVWF  FE9
0A076:  CALL   4518
0A07A:  MOVLW  20
0A07C:  MOVLB  1
0A07E:  MOVWF  x93
0A080:  MOVLB  0
0A082:  CALL   3DE6
0A086:  MOVLW  20
0A088:  MOVLB  1
0A08A:  MOVWF  x93
0A08C:  MOVLB  0
0A08E:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
0A092:  BRA    A0A4
0A094:  MOVLB  1
0A096:  MOVLW  86
0A098:  MOVWF  FF6
0A09A:  MOVLW  12
0A09C:  MOVWF  FF7
0A09E:  MOVLB  0
0A0A0:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto4); 
0A0A4:  BRA    A0D6
0A0A6:  MOVLB  1
0A0A8:  MOVLW  20
0A0AA:  MOVWF  x93
0A0AC:  MOVLB  0
0A0AE:  CALL   3DE6
0A0B2:  MOVLW  01
0A0B4:  MOVWF  FEA
0A0B6:  MOVLW  79
0A0B8:  MOVWF  FE9
0A0BA:  CALL   4518
0A0BE:  MOVLW  20
0A0C0:  MOVLB  1
0A0C2:  MOVWF  x93
0A0C4:  MOVLB  0
0A0C6:  CALL   3DE6
0A0CA:  MOVLW  20
0A0CC:  MOVLB  1
0A0CE:  MOVWF  x93
0A0D0:  MOVLB  0
0A0D2:  CALL   3DE6
....................  
.................... restart_wdt(); 
0A0D6:  CLRWDT
0A0D8:  MOVLB  1
.................... } // mirando el 5 
....................  
.................... if (submenu == 6) {  // llegando al ultimo 
0A0DA:  MOVF   x7F,W
0A0DC:  SUBLW  06
0A0DE:  BTFSS  FD8.2
0A0E0:  BRA    A32A
0A0E2:  CLRF   19
0A0E4:  BTFSC  FF2.7
0A0E6:  BSF    19.7
0A0E8:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0A0EA:  MOVLW  01
0A0EC:  MOVWF  xA0
0A0EE:  MOVLW  02
0A0F0:  MOVWF  xA1
0A0F2:  MOVLB  0
0A0F4:  CALL   156C
0A0F8:  BTFSC  19.7
0A0FA:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 3: "); 
0A0FC:  MOVLW  8A
0A0FE:  MOVWF  FF6
0A100:  MOVLW  12
0A102:  MOVWF  FF7
0A104:  CALL   3E86
0A108:  CLRF   19
0A10A:  BTFSC  FF2.7
0A10C:  BSF    19.7
0A10E:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0A110:  MOVLW  01
0A112:  MOVLB  1
0A114:  MOVWF  xA0
0A116:  MOVLW  03
0A118:  MOVWF  xA1
0A11A:  MOVLB  0
0A11C:  CALL   156C
0A120:  BTFSC  19.7
0A122:  BSF    FF2.7
.................... printf(lcd_putc, "  Grupo Auto 4: "); 
0A124:  MOVLW  9C
0A126:  MOVWF  FF6
0A128:  MOVLW  12
0A12A:  MOVWF  FF7
0A12C:  CALL   3E86
0A130:  CLRF   19
0A132:  BTFSC  FF2.7
0A134:  BSF    19.7
0A136:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0A138:  MOVLW  01
0A13A:  MOVLB  1
0A13C:  MOVWF  xA0
0A13E:  MOVLW  04
0A140:  MOVWF  xA1
0A142:  MOVLB  0
0A144:  CALL   156C
0A148:  BTFSC  19.7
0A14A:  BSF    FF2.7
.................... printf(lcd_putc, " Ctrl Internet: "); 
0A14C:  MOVLW  AE
0A14E:  MOVWF  FF6
0A150:  MOVLW  12
0A152:  MOVWF  FF7
0A154:  CALL   3E86
0A158:  CLRF   19
0A15A:  BTFSC  FF2.7
0A15C:  BSF    19.7
0A15E:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,2); 
0A160:  MOVLW  10
0A162:  MOVLB  1
0A164:  MOVWF  xA0
0A166:  MOVLW  02
0A168:  MOVWF  xA1
0A16A:  MOVLB  0
0A16C:  CALL   156C
0A170:  BTFSC  19.7
0A172:  BSF    FF2.7
.................... if (submenu == 4) { 
0A174:  MOVLB  1
0A176:  MOVF   x7F,W
0A178:  SUBLW  04
0A17A:  BNZ   A1C4
....................    if (bit_test(tiempo1,0)){ 
0A17C:  BTFSS  49.0
0A17E:  BRA    A1B2
....................       printf(lcd_putc, " %s  ", sAuto3); 
0A180:  MOVLW  20
0A182:  MOVWF  x93
0A184:  MOVLB  0
0A186:  CALL   3DE6
0A18A:  MOVLW  01
0A18C:  MOVWF  FEA
0A18E:  MOVLW  76
0A190:  MOVWF  FE9
0A192:  CALL   4518
0A196:  MOVLW  20
0A198:  MOVLB  1
0A19A:  MOVWF  x93
0A19C:  MOVLB  0
0A19E:  CALL   3DE6
0A1A2:  MOVLW  20
0A1A4:  MOVLB  1
0A1A6:  MOVWF  x93
0A1A8:  MOVLB  0
0A1AA:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
0A1AE:  BRA    A1C0
0A1B0:  MOVLB  1
0A1B2:  MOVLW  C0
0A1B4:  MOVWF  FF6
0A1B6:  MOVLW  12
0A1B8:  MOVWF  FF7
0A1BA:  MOVLB  0
0A1BC:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto3); 
0A1C0:  BRA    A1F2
0A1C2:  MOVLB  1
0A1C4:  MOVLW  20
0A1C6:  MOVWF  x93
0A1C8:  MOVLB  0
0A1CA:  CALL   3DE6
0A1CE:  MOVLW  01
0A1D0:  MOVWF  FEA
0A1D2:  MOVLW  76
0A1D4:  MOVWF  FE9
0A1D6:  CALL   4518
0A1DA:  MOVLW  20
0A1DC:  MOVLB  1
0A1DE:  MOVWF  x93
0A1E0:  MOVLB  0
0A1E2:  CALL   3DE6
0A1E6:  MOVLW  20
0A1E8:  MOVLB  1
0A1EA:  MOVWF  x93
0A1EC:  MOVLB  0
0A1EE:  CALL   3DE6
0A1F2:  CLRF   19
0A1F4:  BTFSC  FF2.7
0A1F6:  BSF    19.7
0A1F8:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,3); 
0A1FA:  MOVLW  10
0A1FC:  MOVLB  1
0A1FE:  MOVWF  xA0
0A200:  MOVLW  03
0A202:  MOVWF  xA1
0A204:  MOVLB  0
0A206:  CALL   156C
0A20A:  BTFSC  19.7
0A20C:  BSF    FF2.7
.................... if (submenu == 5) { 
0A20E:  MOVLB  1
0A210:  MOVF   x7F,W
0A212:  SUBLW  05
0A214:  BNZ   A25E
....................    if (bit_test(tiempo1,0)){ 
0A216:  BTFSS  49.0
0A218:  BRA    A24C
....................       printf(lcd_putc, " %s  ", sAuto4); 
0A21A:  MOVLW  20
0A21C:  MOVWF  x93
0A21E:  MOVLB  0
0A220:  CALL   3DE6
0A224:  MOVLW  01
0A226:  MOVWF  FEA
0A228:  MOVLW  79
0A22A:  MOVWF  FE9
0A22C:  CALL   4518
0A230:  MOVLW  20
0A232:  MOVLB  1
0A234:  MOVWF  x93
0A236:  MOVLB  0
0A238:  CALL   3DE6
0A23C:  MOVLW  20
0A23E:  MOVLB  1
0A240:  MOVWF  x93
0A242:  MOVLB  0
0A244:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
0A248:  BRA    A25A
0A24A:  MOVLB  1
0A24C:  MOVLW  C4
0A24E:  MOVWF  FF6
0A250:  MOVLW  12
0A252:  MOVWF  FF7
0A254:  MOVLB  0
0A256:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sAuto4); 
0A25A:  BRA    A28C
0A25C:  MOVLB  1
0A25E:  MOVLW  20
0A260:  MOVWF  x93
0A262:  MOVLB  0
0A264:  CALL   3DE6
0A268:  MOVLW  01
0A26A:  MOVWF  FEA
0A26C:  MOVLW  79
0A26E:  MOVWF  FE9
0A270:  CALL   4518
0A274:  MOVLW  20
0A276:  MOVLB  1
0A278:  MOVWF  x93
0A27A:  MOVLB  0
0A27C:  CALL   3DE6
0A280:  MOVLW  20
0A282:  MOVLB  1
0A284:  MOVWF  x93
0A286:  MOVLB  0
0A288:  CALL   3DE6
0A28C:  CLRF   19
0A28E:  BTFSC  FF2.7
0A290:  BSF    19.7
0A292:  BCF    FF2.7
....................  
.................... lcd_gotoxy(16,4); 
0A294:  MOVLW  10
0A296:  MOVLB  1
0A298:  MOVWF  xA0
0A29A:  MOVLW  04
0A29C:  MOVWF  xA1
0A29E:  MOVLB  0
0A2A0:  CALL   156C
0A2A4:  BTFSC  19.7
0A2A6:  BSF    FF2.7
.................... if (submenu == 6) { 
0A2A8:  MOVLB  1
0A2AA:  MOVF   x7F,W
0A2AC:  SUBLW  06
0A2AE:  BNZ   A2F8
....................    if (bit_test(tiempo1,0)){ 
0A2B0:  BTFSS  49.0
0A2B2:  BRA    A2E6
....................       printf(lcd_putc, " %s  ", sWeb); 
0A2B4:  MOVLW  20
0A2B6:  MOVWF  x93
0A2B8:  MOVLB  0
0A2BA:  CALL   3DE6
0A2BE:  MOVLW  01
0A2C0:  MOVWF  FEA
0A2C2:  MOVLW  7C
0A2C4:  MOVWF  FE9
0A2C6:  CALL   4518
0A2CA:  MOVLW  20
0A2CC:  MOVLB  1
0A2CE:  MOVWF  x93
0A2D0:  MOVLB  0
0A2D2:  CALL   3DE6
0A2D6:  MOVLW  20
0A2D8:  MOVLB  1
0A2DA:  MOVWF  x93
0A2DC:  MOVLB  0
0A2DE:  CALL   3DE6
....................    } else printf(lcd_putc, "   "); 
0A2E2:  BRA    A2F4
0A2E4:  MOVLB  1
0A2E6:  MOVLW  C8
0A2E8:  MOVWF  FF6
0A2EA:  MOVLW  12
0A2EC:  MOVWF  FF7
0A2EE:  MOVLB  0
0A2F0:  CALL   3E86
.................... } else printf(lcd_putc, " %s  ", sWeb); 
0A2F4:  BRA    A326
0A2F6:  MOVLB  1
0A2F8:  MOVLW  20
0A2FA:  MOVWF  x93
0A2FC:  MOVLB  0
0A2FE:  CALL   3DE6
0A302:  MOVLW  01
0A304:  MOVWF  FEA
0A306:  MOVLW  7C
0A308:  MOVWF  FE9
0A30A:  CALL   4518
0A30E:  MOVLW  20
0A310:  MOVLB  1
0A312:  MOVWF  x93
0A314:  MOVLB  0
0A316:  CALL   3DE6
0A31A:  MOVLW  20
0A31C:  MOVLB  1
0A31E:  MOVWF  x93
0A320:  MOVLB  0
0A322:  CALL   3DE6
....................  
.................... restart_wdt(); 
0A326:  CLRWDT
0A328:  MOVLB  1
.................... } // mirando el Ultimo 
....................  
.................... } // while -- todo lleno cuando salgo de aqui 
0A32A:  GOTO   9798
....................  
.................... if (submenu == 7){ 
0A32E:  MOVF   x7F,W
0A330:  SUBLW  07
0A332:  BNZ   A3BE
.................... write_eeprom(EstCasandra,ConfCas); 
0A334:  MOVF   FF2,W
0A336:  MOVWF  00
0A338:  BCF    FF2.7
0A33A:  CLRF   FAA
0A33C:  MOVLW  03
0A33E:  MOVWF  FA9
0A340:  MOVFF  47,FA8
0A344:  BCF    FA6.6
0A346:  BCF    FA6.7
0A348:  BSF    FA6.2
0A34A:  MOVLB  F
0A34C:  MOVLW  55
0A34E:  MOVWF  FA7
0A350:  MOVLW  AA
0A352:  MOVWF  FA7
0A354:  BSF    FA6.1
0A356:  BTFSC  FA6.1
0A358:  BRA    A356
0A35A:  BCF    FA6.2
0A35C:  MOVF   00,W
0A35E:  IORWF  FF2,F
0A360:  CLRF   19
0A362:  BTFSC  FF2.7
0A364:  BSF    19.7
0A366:  BCF    FF2.7
.................... delay_ms(5); 
0A368:  MOVLW  05
0A36A:  MOVLB  1
0A36C:  MOVWF  xA8
0A36E:  MOVLB  0
0A370:  CALL   1456
0A374:  BTFSC  19.7
0A376:  BSF    FF2.7
....................  
.................... if (bit_test(ConfCas,5)) BusData(150,90);  //printf("%c%c%c%c", 250, 150, 90, 150 + 90); // Webserver activado 
0A378:  BTFSS  47.5
0A37A:  BRA    A398
0A37C:  CLRF   19
0A37E:  BTFSC  FF2.7
0A380:  BSF    19.7
0A382:  BCF    FF2.7
0A384:  MOVLW  96
0A386:  MOVLB  1
0A388:  MOVWF  xA3
0A38A:  MOVLW  5A
0A38C:  MOVWF  xA4
0A38E:  MOVLB  0
0A390:  CALL   15F6
0A394:  BTFSC  19.7
0A396:  BSF    FF2.7
.................... if ((bit_test(ConfCas,5)) == false) BusData(150,80);  //printf("%c%c%c%c", 250, 150, 80, 150 + 80); // Webserver Apagado 
0A398:  BTFSC  47.5
0A39A:  BRA    A3B8
0A39C:  CLRF   19
0A39E:  BTFSC  FF2.7
0A3A0:  BSF    19.7
0A3A2:  BCF    FF2.7
0A3A4:  MOVLW  96
0A3A6:  MOVLB  1
0A3A8:  MOVWF  xA3
0A3AA:  MOVLW  50
0A3AC:  MOVWF  xA4
0A3AE:  MOVLB  0
0A3B0:  CALL   15F6
0A3B4:  BTFSC  19.7
0A3B6:  BSF    FF2.7
....................  
.................... Menu = 1; 
0A3B8:  MOVLW  01
0A3BA:  MOVWF  28
0A3BC:  MOVLB  1
.................... }  
.................... } // Fn 
0A3BE:  MOVLB  0
0A3C0:  GOTO   E564 (RETURN)
....................  
.................... void CReset(){ 
....................  
.................... LIMPIARLCD; 
*
0DC54:  MOVLW  CC
0DC56:  MOVWF  FF6
0DC58:  MOVLW  12
0DC5A:  MOVWF  FF7
0DC5C:  CALL   3E86
.................... short Eleccion = True; 
0DC60:  MOVLB  1
0DC62:  BSF    x6D.0
....................  
.................... if (Autenticar()){ 
0DC64:  MOVLB  0
0DC66:  CALL   6E4C
0DC6A:  MOVF   01,F
0DC6C:  BTFSC  FD8.2
0DC6E:  BRA    DF9A
....................  
.................... while (Eleccion){ 
0DC70:  MOVLB  1
0DC72:  BTFSS  x6D.0
0DC74:  BRA    DF9C
....................  
.................... restart_wdt(); 
0DC76:  CLRWDT
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0DC78:  BSF    F93.3
0DC7A:  BTFSS  F81.3
0DC7C:  BRA    DC90
0DC7E:  BSF    F93.2
0DC80:  BTFSS  F81.2
0DC82:  BRA    DC90
0DC84:  BSF    F93.1
0DC86:  BTFSS  F81.1
0DC88:  BRA    DC90
0DC8A:  BSF    F93.0
0DC8C:  BTFSC  F81.0
0DC8E:  BCF    35.0
....................  
.................... if (Rebote == false) { 
0DC90:  BTFSC  35.0
0DC92:  BRA    DF96
0DC94:  CLRF   19
0DC96:  BTFSC  FF2.7
0DC98:  BSF    19.7
0DC9A:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,1); 
0DC9C:  MOVLW  01
0DC9E:  MOVWF  xA0
0DCA0:  MOVWF  xA1
0DCA2:  MOVLB  0
0DCA4:  CALL   156C
0DCA8:  BTFSC  19.7
0DCAA:  BSF    FF2.7
.................... printf(lcd_putc, "= RESETEAR SISTEMA ="); 
0DCAC:  MOVLW  CE
0DCAE:  MOVWF  FF6
0DCB0:  MOVLW  12
0DCB2:  MOVWF  FF7
0DCB4:  CALL   3E86
0DCB8:  CLRF   19
0DCBA:  BTFSC  FF2.7
0DCBC:  BSF    19.7
0DCBE:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0DCC0:  MOVLW  01
0DCC2:  MOVLB  1
0DCC4:  MOVWF  xA0
0DCC6:  MOVLW  02
0DCC8:  MOVWF  xA1
0DCCA:  MOVLB  0
0DCCC:  CALL   156C
0DCD0:  BTFSC  19.7
0DCD2:  BSF    FF2.7
.................... printf(lcd_putc, "%cSe eliminaran todos",165); 
0DCD4:  MOVLW  A5
0DCD6:  MOVLB  1
0DCD8:  MOVWF  x93
0DCDA:  MOVLB  0
0DCDC:  CALL   3DE6
0DCE0:  MOVLW  E6
0DCE2:  MOVWF  FF6
0DCE4:  MOVLW  12
0DCE6:  MOVWF  FF7
0DCE8:  MOVLW  13
0DCEA:  MOVLB  1
0DCEC:  MOVWF  x90
0DCEE:  MOVLB  0
0DCF0:  CALL   44F0
0DCF4:  CLRF   19
0DCF6:  BTFSC  FF2.7
0DCF8:  BSF    19.7
0DCFA:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0DCFC:  MOVLW  01
0DCFE:  MOVLB  1
0DD00:  MOVWF  xA0
0DD02:  MOVLW  03
0DD04:  MOVWF  xA1
0DD06:  MOVLB  0
0DD08:  CALL   156C
0DD0C:  BTFSC  19.7
0DD0E:  BSF    FF2.7
.................... printf(lcd_putc, "los datos guardados!"); 
0DD10:  MOVLW  FA
0DD12:  MOVWF  FF6
0DD14:  MOVLW  12
0DD16:  MOVWF  FF7
0DD18:  CALL   3E86
0DD1C:  CLRF   19
0DD1E:  BTFSC  FF2.7
0DD20:  BSF    19.7
0DD22:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0DD24:  MOVLW  01
0DD26:  MOVLB  1
0DD28:  MOVWF  xA0
0DD2A:  MOVLW  04
0DD2C:  MOVWF  xA1
0DD2E:  MOVLB  0
0DD30:  CALL   156C
0DD34:  BTFSC  19.7
0DD36:  BSF    FF2.7
.................... printf(lcd_putc, "    %cContinuar?    ",143); 
0DD38:  MOVLW  10
0DD3A:  MOVWF  FF6
0DD3C:  MOVLW  13
0DD3E:  MOVWF  FF7
0DD40:  MOVLW  04
0DD42:  MOVLB  1
0DD44:  MOVWF  x90
0DD46:  MOVLB  0
0DD48:  CALL   44F0
0DD4C:  MOVLW  8F
0DD4E:  MOVLB  1
0DD50:  MOVWF  x93
0DD52:  MOVLB  0
0DD54:  CALL   3DE6
0DD58:  MOVLW  16
0DD5A:  MOVWF  FF6
0DD5C:  MOVLW  13
0DD5E:  MOVWF  FF7
0DD60:  MOVLW  0E
0DD62:  MOVLB  1
0DD64:  MOVWF  x90
0DD66:  MOVLB  0
0DD68:  CALL   44F0
....................  
.................... if (bit_test(Tiempo1,0)) ONLCDLED; 
0DD6C:  BTFSS  49.0
0DD6E:  BRA    DD76
0DD70:  BCF    F95.6
0DD72:  BCF    F8C.6
.................... else OFFLCDLED; 
0DD74:  BRA    DD7A
0DD76:  BCF    F95.6
0DD78:  BSF    F8C.6
....................  
....................  
.................... if (input(ARRIBA)==0 || input(ABAJO)==0 || input(CANCEL)==0){ 
0DD7A:  BSF    F93.3
0DD7C:  BTFSS  F81.3
0DD7E:  BRA    DD8C
0DD80:  BSF    F93.2
0DD82:  BTFSS  F81.2
0DD84:  BRA    DD8C
0DD86:  BSF    F93.0
0DD88:  BTFSC  F81.0
0DD8A:  BRA    DD98
.................... Rebote = True; 
0DD8C:  BSF    35.0
.................... Menu = 1; 
0DD8E:  MOVLW  01
0DD90:  MOVWF  28
.................... Eleccion = False; 
0DD92:  MOVLB  1
0DD94:  BCF    x6D.0
0DD96:  MOVLB  0
.................... } 
....................   
.................... if (input(OOKK)==0){  ///////////////////////////////// Destruir todo YA! 
0DD98:  BSF    F93.1
0DD9A:  BTFSC  F81.1
0DD9C:  BRA    DF98
.................... Rebote = True; 
0DD9E:  BSF    35.0
.................... LIMPIARLCD; // Limpiamos la pantalla 
0DDA0:  MOVLW  26
0DDA2:  MOVWF  FF6
0DDA4:  MOVLW  13
0DDA6:  MOVWF  FF7
0DDA8:  CALL   3E86
.................... ONLCDLED; 
0DDAC:  BCF    F95.6
0DDAE:  BCF    F8C.6
0DDB0:  CLRF   19
0DDB2:  BTFSC  FF2.7
0DDB4:  BSF    19.7
0DDB6:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,2); 
0DDB8:  MOVLW  01
0DDBA:  MOVLB  1
0DDBC:  MOVWF  xA0
0DDBE:  MOVLW  02
0DDC0:  MOVWF  xA1
0DDC2:  MOVLB  0
0DDC4:  CALL   156C
0DDC8:  BTFSC  19.7
0DDCA:  BSF    FF2.7
.................... printf(lcd_putc, " Eliminando datos..."); 
0DDCC:  MOVLW  28
0DDCE:  MOVWF  FF6
0DDD0:  MOVLW  13
0DDD2:  MOVWF  FF7
0DDD4:  CALL   3E86
....................  
.................... int aux1; 
.................... long aux2; 
....................  
.................... for (aux1=0;aux1<5;aux1++){ // llena todo desde el 0 al 4 
0DDD8:  MOVLB  1
0DDDA:  CLRF   x6E
0DDDC:  MOVF   x6E,W
0DDDE:  SUBLW  04
0DDE0:  BNC   DE26
.................... TempMax[aux1]=0;    // Temperatura maxima de la semana - dia - hora - minuto 
0DDE2:  CLRF   03
0DDE4:  MOVF   x6E,W
0DDE6:  ADDLW  29
0DDE8:  MOVWF  FE9
0DDEA:  MOVLW  00
0DDEC:  ADDWFC 03,W
0DDEE:  MOVWF  FEA
0DDF0:  CLRF   FEF
.................... TempMin[aux1]=0;    // Temperatura minima de la semana - dia - hora - minuto  
0DDF2:  CLRF   03
0DDF4:  MOVF   x6E,W
0DDF6:  ADDLW  2D
0DDF8:  MOVWF  FE9
0DDFA:  MOVLW  00
0DDFC:  ADDWFC 03,W
0DDFE:  MOVWF  FEA
0DE00:  CLRF   FEF
.................... SolMax[aux1]=0;     // Maximo nivel de radiacion de sol en la semana - dia - hora - minuto 
0DE02:  CLRF   03
0DE04:  MOVF   x6E,W
0DE06:  ADDLW  31
0DE08:  MOVWF  FE9
0DE0A:  MOVLW  00
0DE0C:  ADDWFC 03,W
0DE0E:  MOVWF  FEA
0DE10:  CLRF   FEF
.................... Comando[aux1]=0;    // Carga de EVENTO y VALOR 
0DE12:  CLRF   03
0DE14:  MOVF   x6E,W
0DE16:  ADDLW  36
0DE18:  MOVWF  FE9
0DE1A:  MOVLW  00
0DE1C:  ADDWFC 03,W
0DE1E:  MOVWF  FEA
0DE20:  CLRF   FEF
.................... } 
0DE22:  INCF   x6E,F
0DE24:  BRA    DDDC
....................  
.................... for (aux2=0;aux2<1024;aux2++){ // llena todo desde el 0 al 255 
0DE26:  CLRF   x70
0DE28:  CLRF   x6F
0DE2A:  MOVF   x70,W
0DE2C:  SUBLW  03
0DE2E:  BNC   DE80
.................... write_eeprom(aux2,0x00);  // la llenamos con 0 
0DE30:  MOVF   FF2,W
0DE32:  MOVWF  00
0DE34:  BCF    FF2.7
0DE36:  MOVFF  170,FAA
0DE3A:  MOVFF  16F,FA9
0DE3E:  CLRF   FA8
0DE40:  BCF    FA6.6
0DE42:  BCF    FA6.7
0DE44:  BSF    FA6.2
0DE46:  MOVLB  F
0DE48:  MOVLW  55
0DE4A:  MOVWF  FA7
0DE4C:  MOVLW  AA
0DE4E:  MOVWF  FA7
0DE50:  BSF    FA6.1
0DE52:  BTFSC  FA6.1
0DE54:  BRA    DE52
0DE56:  BCF    FA6.2
0DE58:  MOVF   00,W
0DE5A:  IORWF  FF2,F
0DE5C:  CLRF   19
0DE5E:  BTFSC  FF2.7
0DE60:  BSF    19.7
0DE62:  BCF    FF2.7
.................... delay_ms(2); 
0DE64:  MOVLW  02
0DE66:  MOVLB  1
0DE68:  MOVWF  xA8
0DE6A:  MOVLB  0
0DE6C:  CALL   1456
0DE70:  BTFSC  19.7
0DE72:  BSF    FF2.7
.................... restart_wdt(); 
0DE74:  CLRWDT
.................... } 
0DE76:  MOVLB  1
0DE78:  INCF   x6F,F
0DE7A:  BTFSC  FD8.2
0DE7C:  INCF   x70,F
0DE7E:  BRA    DE2A
....................  
.................... for (aux1=31;aux1<94;aux1++){ // llena todo desde el 32 al 94  
0DE80:  MOVLW  1F
0DE82:  MOVWF  x6E
0DE84:  MOVF   x6E,W
0DE86:  SUBLW  5D
0DE88:  BNC   DE9E
.................... IntLuz[aux1] = 0; // 100% 
0DE8A:  CLRF   03
0DE8C:  MOVF   x6E,W
0DE8E:  ADDLW  4A
0DE90:  MOVWF  FE9
0DE92:  MOVLW  00
0DE94:  ADDWFC 03,W
0DE96:  MOVWF  FEA
0DE98:  CLRF   FEF
.................... } 
0DE9A:  INCF   x6E,F
0DE9C:  BRA    DE84
....................  
.................... EstadoAl = 1;      // Estado de la alarma 
0DE9E:  MOVLW  01
0DEA0:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); 
0DEA2:  MOVF   FF2,W
0DEA4:  MOVWF  00
0DEA6:  BCF    FF2.7
0DEA8:  CLRF   FAA
0DEAA:  MOVLW  02
0DEAC:  MOVWF  FA9
0DEAE:  MOVFF  46,FA8
0DEB2:  BCF    FA6.6
0DEB4:  BCF    FA6.7
0DEB6:  BSF    FA6.2
0DEB8:  MOVLB  F
0DEBA:  MOVLW  55
0DEBC:  MOVWF  FA7
0DEBE:  MOVLW  AA
0DEC0:  MOVWF  FA7
0DEC2:  BSF    FA6.1
0DEC4:  BTFSC  FA6.1
0DEC6:  BRA    DEC4
0DEC8:  BCF    FA6.2
0DECA:  MOVF   00,W
0DECC:  IORWF  FF2,F
.................... ConfCas=0;       // Estado del nivel de penetracion de Casandra (apagado todo) 
0DECE:  CLRF   47
.................... write_eeprom(EstCasandra,ConfCas); 
0DED0:  MOVFF  FF2,00
0DED4:  BCF    FF2.7
0DED6:  CLRF   FAA
0DED8:  MOVLW  03
0DEDA:  MOVWF  FA9
0DEDC:  MOVFF  47,FA8
0DEE0:  BCF    FA6.6
0DEE2:  BCF    FA6.7
0DEE4:  BSF    FA6.2
0DEE6:  MOVLW  55
0DEE8:  MOVWF  FA7
0DEEA:  MOVLW  AA
0DEEC:  MOVWF  FA7
0DEEE:  BSF    FA6.1
0DEF0:  BTFSC  FA6.1
0DEF2:  BRA    DEF0
0DEF4:  BCF    FA6.2
0DEF6:  MOVF   00,W
0DEF8:  IORWF  FF2,F
.................... TpoSilencioso = 15; 
0DEFA:  MOVLW  0F
0DEFC:  MOVLB  1
0DEFE:  MOVWF  x12
.................... write_eeprom(TpoSil,TpoSilencioso); // Guardamos el valor 
0DF00:  MOVF   FF2,W
0DF02:  MOVWF  00
0DF04:  BCF    FF2.7
0DF06:  CLRF   FAA
0DF08:  MOVLW  04
0DF0A:  MOVWF  FA9
0DF0C:  MOVFF  112,FA8
0DF10:  BCF    FA6.6
0DF12:  BCF    FA6.7
0DF14:  BSF    FA6.2
0DF16:  MOVLB  F
0DF18:  MOVLW  55
0DF1A:  MOVWF  FA7
0DF1C:  MOVLW  AA
0DF1E:  MOVWF  FA7
0DF20:  BSF    FA6.1
0DF22:  BTFSC  FA6.1
0DF24:  BRA    DF22
0DF26:  BCF    FA6.2
0DF28:  MOVF   00,W
0DF2A:  IORWF  FF2,F
.................... TpoSalida = 15; 
0DF2C:  MOVLW  0F
0DF2E:  MOVLB  1
0DF30:  MOVWF  x13
.................... write_eeprom(TpoSal,TpoSalida); // Guardamos el valor 
0DF32:  MOVF   FF2,W
0DF34:  MOVWF  00
0DF36:  BCF    FF2.7
0DF38:  CLRF   FAA
0DF3A:  MOVLW  05
0DF3C:  MOVWF  FA9
0DF3E:  MOVFF  113,FA8
0DF42:  BCF    FA6.6
0DF44:  BCF    FA6.7
0DF46:  BSF    FA6.2
0DF48:  MOVLB  F
0DF4A:  MOVLW  55
0DF4C:  MOVWF  FA7
0DF4E:  MOVLW  AA
0DF50:  MOVWF  FA7
0DF52:  BSF    FA6.1
0DF54:  BTFSC  FA6.1
0DF56:  BRA    DF54
0DF58:  BCF    FA6.2
0DF5A:  MOVF   00,W
0DF5C:  IORWF  FF2,F
....................  
....................  
.................... /* 
.................... port_b_pullups(true); 
.................... setup_wdt(WDT_ON); 
.................... enable_interrupts(global); 
.................... enable_interrupts(int_rda); // Interrupcion de llegada de datos 
.................... enable_interrupts(INT_TIMER1); // Interrupcion por timer 1 
.................... setup_timer_1(T1_INTERNAL | T1_DIV_BY_8); 
.................... set_timer1(0); 
.................... */ 
.................... ds1307_set_date_time(1,1,1,1,0,0,0);  // Inicio de valores para el DS1307 
0DF5E:  MOVLW  01
0DF60:  MOVLB  1
0DF62:  MOVWF  x83
0DF64:  MOVWF  x84
0DF66:  MOVWF  x85
0DF68:  MOVWF  x86
0DF6A:  CLRF   x87
0DF6C:  CLRF   x88
0DF6E:  CLRF   x89
0DF70:  MOVLB  0
0DF72:  CALL   D0C4
0DF76:  CLRF   19
0DF78:  BTFSC  FF2.7
0DF7A:  BSF    19.7
0DF7C:  BCF    FF2.7
.................... delay_ms(5); 
0DF7E:  MOVLW  05
0DF80:  MOVLB  1
0DF82:  MOVWF  xA8
0DF84:  MOVLB  0
0DF86:  CALL   1456
0DF8A:  BTFSC  19.7
0DF8C:  BSF    FF2.7
.................... Menu = 1;      // Posicion dentro del menu 0 
0DF8E:  MOVLW  01
0DF90:  MOVWF  28
.................... Eleccion = False; 
0DF92:  MOVLB  1
0DF94:  BCF    x6D.0
0DF96:  MOVLB  0
.................... } // If eliminar todo confirmado 
.................... } // si rebote es falso 
.................... } // Salimos del while con eleccion 
0DF98:  BRA    DC70
0DF9A:  MOVLB  1
.................... } // si autenticamos correctamente 
.................... } // Fn 
0DF9C:  MOVLB  0
0DF9E:  GOTO   E5AA (RETURN)
....................  
.................... void CHs(){ 
....................  
.................... LIMPIARLCD; 
*
0D218:  MOVLW  3E
0D21A:  MOVWF  FF6
0D21C:  MOVLW  13
0D21E:  MOVWF  FF7
0D220:  CALL   3E86
.................... int mes=month; 
.................... int dia=day; 
.................... int dias=dow; 
.................... int hora=hrs; 
.................... int minuto=min; 
.................... int anio=year; 
.................... char sdia[11]; 
.................... char smes[4]; 
0D224:  MOVFF  25,16D
0D228:  MOVFF  24,16E
0D22C:  MOVFF  27,16F
0D230:  MOVFF  23,170
0D234:  MOVFF  22,171
0D238:  MOVFF  26,172
....................  
.................... restart_wdt(); 
0D23C:  CLRWDT
....................  
.................... int submenu=1; 
0D23E:  MOVLW  01
0D240:  MOVLB  1
0D242:  MOVWF  x82
....................  
.................... Rebote = true; 
0D244:  BSF    35.0
.................... //lcd_putc("\f"); // Limpiamos la pantalla 
....................  
.................... while (submenu < 6){ // hasta llenar todo 
0D246:  MOVF   x82,W
0D248:  SUBLW  05
0D24A:  BTFSS  FD8.0
0D24C:  GOTO   D9DA
....................  
....................  
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
0D250:  BSF    F93.3
0D252:  BTFSS  F81.3
0D254:  BRA    D268
0D256:  BSF    F93.2
0D258:  BTFSS  F81.2
0D25A:  BRA    D268
0D25C:  BSF    F93.1
0D25E:  BTFSS  F81.1
0D260:  BRA    D268
0D262:  BSF    F93.0
0D264:  BTFSC  F81.0
0D266:  BCF    35.0
....................  
.................... if (Rebote == false){ 
0D268:  BTFSC  35.0
0D26A:  BRA    D276
.................... if (input(OOKK) == 0){ // si ok, solo sumo 
0D26C:  BSF    F93.1
0D26E:  BTFSC  F81.1
0D270:  BRA    D276
.................... ++submenu; 
0D272:  INCF   x82,F
.................... Rebote = true; 
0D274:  BSF    35.0
.................... } // si ok 
.................... } 
....................  
.................... if (Rebote == false){ 
0D276:  BTFSC  35.0
0D278:  BRA    D28C
.................... if (input(CANCEL) == 0){ // si cancel solo resto o salgo con 10 
0D27A:  BSF    F93.0
0D27C:  BTFSC  F81.0
0D27E:  BRA    D28C
.................... --submenu; 
0D280:  DECF   x82,F
.................... Rebote = true; 
0D282:  BSF    35.0
.................... if (submenu == 0) { 
0D284:  MOVF   x82,F
0D286:  BNZ   D28C
.................... submenu = 10; 
0D288:  MOVLW  0A
0D28A:  MOVWF  x82
.................... } 
.................... } // si cancel 
.................... } 
....................  
.................... if (Rebote == false){ 
0D28C:  BTFSC  35.0
0D28E:  BRA    D348
.................... if (input(ABAJO) == 0){ // si arriba 
0D290:  BSF    F93.2
0D292:  BTFSC  F81.2
0D294:  BRA    D348
.................... Rebote = true; 
0D296:  BSF    35.0
....................  
....................    if (submenu == 1) { // arriba dentro de dia de la semana 
0D298:  DECFSZ x82,W
0D29A:  BRA    D2A8
....................          ++dias; 
0D29C:  INCF   x6F,F
....................          if (dias == 8) dias = 1; 
0D29E:  MOVF   x6F,W
0D2A0:  SUBLW  08
0D2A2:  BNZ   D2A8
0D2A4:  MOVLW  01
0D2A6:  MOVWF  x6F
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 2) { // arriba dentro de mes 
0D2A8:  MOVF   x82,W
0D2AA:  SUBLW  02
0D2AC:  BNZ   D2BA
....................          ++mes; 
0D2AE:  INCF   x6D,F
....................          if (mes == 13) mes = 1; 
0D2B0:  MOVF   x6D,W
0D2B2:  SUBLW  0D
0D2B4:  BNZ   D2BA
0D2B6:  MOVLW  01
0D2B8:  MOVWF  x6D
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 3) { // arriba dentro de dia 
0D2BA:  MOVF   x82,W
0D2BC:  SUBLW  03
0D2BE:  BNZ   D328
....................          ++dia; 
0D2C0:  INCF   x6E,F
....................          if ((dia >= 32) && ((mes == 1) || (mes == 3) || (mes == 5) || (mes == 7) || (mes == 8) || (mes == 10) || (mes == 12))) dia = 1; 
0D2C2:  MOVF   x6E,W
0D2C4:  SUBLW  1F
0D2C6:  BC    D2F6
0D2C8:  DECFSZ x6D,W
0D2CA:  BRA    D2CE
0D2CC:  BRA    D2F2
0D2CE:  MOVF   x6D,W
0D2D0:  SUBLW  03
0D2D2:  BZ    D2F2
0D2D4:  MOVF   x6D,W
0D2D6:  SUBLW  05
0D2D8:  BZ    D2F2
0D2DA:  MOVF   x6D,W
0D2DC:  SUBLW  07
0D2DE:  BZ    D2F2
0D2E0:  MOVF   x6D,W
0D2E2:  SUBLW  08
0D2E4:  BZ    D2F2
0D2E6:  MOVF   x6D,W
0D2E8:  SUBLW  0A
0D2EA:  BZ    D2F2
0D2EC:  MOVF   x6D,W
0D2EE:  SUBLW  0C
0D2F0:  BNZ   D2F6
0D2F2:  MOVLW  01
0D2F4:  MOVWF  x6E
....................          if ((dia >= 29) && (mes == 2)) dia = 1; 
0D2F6:  MOVF   x6E,W
0D2F8:  SUBLW  1C
0D2FA:  BC    D306
0D2FC:  MOVF   x6D,W
0D2FE:  SUBLW  02
0D300:  BNZ   D306
0D302:  MOVLW  01
0D304:  MOVWF  x6E
....................          if ((dia >= 31) && ((mes == 4) || (mes == 6) || (mes == 9) || (mes == 11))) dia = 1; 
0D306:  MOVF   x6E,W
0D308:  SUBLW  1E
0D30A:  BC    D328
0D30C:  MOVF   x6D,W
0D30E:  SUBLW  04
0D310:  BZ    D324
0D312:  MOVF   x6D,W
0D314:  SUBLW  06
0D316:  BZ    D324
0D318:  MOVF   x6D,W
0D31A:  SUBLW  09
0D31C:  BZ    D324
0D31E:  MOVF   x6D,W
0D320:  SUBLW  0B
0D322:  BNZ   D328
0D324:  MOVLW  01
0D326:  MOVWF  x6E
....................    } // arriba dentro de dia 
....................  
....................    if (submenu == 4) { // arriba dentro de hora 
0D328:  MOVF   x82,W
0D32A:  SUBLW  04
0D32C:  BNZ   D338
....................          ++hora; 
0D32E:  INCF   x70,F
....................          if (hora == 24) hora = 0; 
0D330:  MOVF   x70,W
0D332:  SUBLW  18
0D334:  BTFSC  FD8.2
0D336:  CLRF   x70
....................    } // arriba dentro de hora 
....................  
....................    if (submenu == 5) { // arriba dentro de minuto 
0D338:  MOVF   x82,W
0D33A:  SUBLW  05
0D33C:  BNZ   D348
....................          ++minuto; 
0D33E:  INCF   x71,F
....................          if (minuto == 60) minuto = 0; 
0D340:  MOVF   x71,W
0D342:  SUBLW  3C
0D344:  BTFSC  FD8.2
0D346:  CLRF   x71
....................    } // arriba dentro de minuto 
.................... } 
.................... } 
....................  
.................... if (Rebote == false){ 
0D348:  BTFSC  35.0
0D34A:  BRA    D3FA
.................... if (input(ARRIBA) == 0){ // si abajo 
0D34C:  BSF    F93.3
0D34E:  BTFSC  F81.3
0D350:  BRA    D3FA
.................... Rebote = true; 
0D352:  BSF    35.0
....................  
....................    if (submenu == 1) { // abajo dentro de mes 
0D354:  DECFSZ x82,W
0D356:  BRA    D362
....................          --dias; 
0D358:  DECF   x6F,F
....................          if (dias == 0) dias = 7; 
0D35A:  MOVF   x6F,F
0D35C:  BNZ   D362
0D35E:  MOVLW  07
0D360:  MOVWF  x6F
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 2) { // abajo dentro de mes 
0D362:  MOVF   x82,W
0D364:  SUBLW  02
0D366:  BNZ   D372
....................          --mes; 
0D368:  DECF   x6D,F
....................          if (mes == 0) mes = 12; 
0D36A:  MOVF   x6D,F
0D36C:  BNZ   D372
0D36E:  MOVLW  0C
0D370:  MOVWF  x6D
....................    } // arriba dentro de mes 
....................  
....................    if (submenu == 3) { // arriba dentro de dia 
0D372:  MOVF   x82,W
0D374:  SUBLW  03
0D376:  BNZ   D3DA
....................          --dia; 
0D378:  DECF   x6E,F
....................          if ((dia == 0) && ((mes == 1) || (mes == 3) || (mes == 5) || (mes == 7) || (mes == 8) || (mes == 10) || (mes == 12))) dia = 31; 
0D37A:  MOVF   x6E,F
0D37C:  BNZ   D3AC
0D37E:  DECFSZ x6D,W
0D380:  BRA    D384
0D382:  BRA    D3A8
0D384:  MOVF   x6D,W
0D386:  SUBLW  03
0D388:  BZ    D3A8
0D38A:  MOVF   x6D,W
0D38C:  SUBLW  05
0D38E:  BZ    D3A8
0D390:  MOVF   x6D,W
0D392:  SUBLW  07
0D394:  BZ    D3A8
0D396:  MOVF   x6D,W
0D398:  SUBLW  08
0D39A:  BZ    D3A8
0D39C:  MOVF   x6D,W
0D39E:  SUBLW  0A
0D3A0:  BZ    D3A8
0D3A2:  MOVF   x6D,W
0D3A4:  SUBLW  0C
0D3A6:  BNZ   D3AC
0D3A8:  MOVLW  1F
0D3AA:  MOVWF  x6E
....................          if ((dia == 0) && (mes == 2)) dia = 28; 
0D3AC:  MOVF   x6E,F
0D3AE:  BNZ   D3BA
0D3B0:  MOVF   x6D,W
0D3B2:  SUBLW  02
0D3B4:  BNZ   D3BA
0D3B6:  MOVLW  1C
0D3B8:  MOVWF  x6E
....................          if ((dia == 0) && ((mes == 4) || (mes == 6) || (mes == 9) || (mes == 11))) dia = 30; 
0D3BA:  MOVF   x6E,F
0D3BC:  BNZ   D3DA
0D3BE:  MOVF   x6D,W
0D3C0:  SUBLW  04
0D3C2:  BZ    D3D6
0D3C4:  MOVF   x6D,W
0D3C6:  SUBLW  06
0D3C8:  BZ    D3D6
0D3CA:  MOVF   x6D,W
0D3CC:  SUBLW  09
0D3CE:  BZ    D3D6
0D3D0:  MOVF   x6D,W
0D3D2:  SUBLW  0B
0D3D4:  BNZ   D3DA
0D3D6:  MOVLW  1E
0D3D8:  MOVWF  x6E
....................    } // arriba dentro de dia 
....................  
....................    if (submenu == 4) { // arriba dentro de hora 
0D3DA:  MOVF   x82,W
0D3DC:  SUBLW  04
0D3DE:  BNZ   D3EA
....................          --hora; 
0D3E0:  DECF   x70,F
....................          if (hora == 255) hora = 23; 
0D3E2:  INCFSZ x70,W
0D3E4:  BRA    D3EA
0D3E6:  MOVLW  17
0D3E8:  MOVWF  x70
....................    } // arriba dentro de hora 
....................  
....................    if (submenu == 5) { // arriba dentro de minuto 
0D3EA:  MOVF   x82,W
0D3EC:  SUBLW  05
0D3EE:  BNZ   D3FA
....................          --minuto; 
0D3F0:  DECF   x71,F
....................          if (minuto == 255) minuto = 59; 
0D3F2:  INCFSZ x71,W
0D3F4:  BRA    D3FA
0D3F6:  MOVLW  3B
0D3F8:  MOVWF  x71
....................    } // arriba dentro de minuto 
....................  
.................... } 
.................... } 
....................  
.................... switch (dias){ 
0D3FA:  MOVLW  01
0D3FC:  SUBWF  x6F,W
0D3FE:  ADDLW  F9
0D400:  BTFSC  FD8.0
0D402:  BRA    D4E0
0D404:  ADDLW  07
0D406:  MOVLB  0
0D408:  GOTO   DA16
....................    case 1: 
....................    sdia="Lunes    "; 
0D40C:  MOVLW  01
0D40E:  MOVWF  FEA
0D410:  MOVLW  73
0D412:  MOVWF  FE9
0D414:  MOVLW  00
0D416:  CALL   02C2
0D41A:  TBLRD*-
0D41C:  TBLRD*+
0D41E:  MOVF   FF5,W
0D420:  MOVWF  FEE
0D422:  IORLW  00
0D424:  BNZ   D41C
....................    break; 
0D426:  MOVLB  1
0D428:  BRA    D4E0
....................  
....................    case 2: 
....................    sdia="Martes   "; 
0D42A:  MOVLW  01
0D42C:  MOVWF  FEA
0D42E:  MOVLW  73
0D430:  MOVWF  FE9
0D432:  MOVLW  00
0D434:  CALL   02DC
0D438:  TBLRD*-
0D43A:  TBLRD*+
0D43C:  MOVF   FF5,W
0D43E:  MOVWF  FEE
0D440:  IORLW  00
0D442:  BNZ   D43A
....................    break; 
0D444:  MOVLB  1
0D446:  BRA    D4E0
....................  
....................    case 3: 
....................    sdia="Miercoles"; 
0D448:  MOVLW  01
0D44A:  MOVWF  FEA
0D44C:  MOVLW  73
0D44E:  MOVWF  FE9
0D450:  MOVLW  00
0D452:  CALL   02F6
0D456:  TBLRD*-
0D458:  TBLRD*+
0D45A:  MOVF   FF5,W
0D45C:  MOVWF  FEE
0D45E:  IORLW  00
0D460:  BNZ   D458
....................    break; 
0D462:  MOVLB  1
0D464:  BRA    D4E0
....................  
....................    case 4: 
....................    sdia="Jueves   "; 
0D466:  MOVLW  01
0D468:  MOVWF  FEA
0D46A:  MOVLW  73
0D46C:  MOVWF  FE9
0D46E:  MOVLW  00
0D470:  CALL   0310
0D474:  TBLRD*-
0D476:  TBLRD*+
0D478:  MOVF   FF5,W
0D47A:  MOVWF  FEE
0D47C:  IORLW  00
0D47E:  BNZ   D476
....................    break; 
0D480:  MOVLB  1
0D482:  BRA    D4E0
....................  
....................    case 5: 
....................    sdia="Viernes  "; 
0D484:  MOVLW  01
0D486:  MOVWF  FEA
0D488:  MOVLW  73
0D48A:  MOVWF  FE9
0D48C:  MOVLW  00
0D48E:  CALL   032A
0D492:  TBLRD*-
0D494:  TBLRD*+
0D496:  MOVF   FF5,W
0D498:  MOVWF  FEE
0D49A:  IORLW  00
0D49C:  BNZ   D494
....................    break; 
0D49E:  MOVLB  1
0D4A0:  BRA    D4E0
....................  
....................    case 6: 
....................    sdia="Sabado   "; 
0D4A2:  MOVLW  01
0D4A4:  MOVWF  FEA
0D4A6:  MOVLW  73
0D4A8:  MOVWF  FE9
0D4AA:  MOVLW  00
0D4AC:  CALL   0344
0D4B0:  TBLRD*-
0D4B2:  TBLRD*+
0D4B4:  MOVF   FF5,W
0D4B6:  MOVWF  FEE
0D4B8:  IORLW  00
0D4BA:  BNZ   D4B2
....................    break; 
0D4BC:  MOVLB  1
0D4BE:  BRA    D4E0
....................  
....................    case 7: 
....................    sdia="Domingo  "; 
0D4C0:  MOVLW  01
0D4C2:  MOVWF  FEA
0D4C4:  MOVLW  73
0D4C6:  MOVWF  FE9
0D4C8:  MOVLW  00
0D4CA:  CALL   035E
0D4CE:  TBLRD*-
0D4D0:  TBLRD*+
0D4D2:  MOVF   FF5,W
0D4D4:  MOVWF  FEE
0D4D6:  IORLW  00
0D4D8:  BNZ   D4D0
....................    break; 
0D4DA:  MOVLB  1
0D4DC:  BRA    D4E0
0D4DE:  MOVLB  1
.................... } 
....................  
.................... switch (mes){ 
0D4E0:  MOVLW  01
0D4E2:  SUBWF  x6D,W
0D4E4:  ADDLW  F4
0D4E6:  BTFSC  FD8.0
0D4E8:  BRA    D65C
0D4EA:  ADDLW  0C
0D4EC:  MOVLB  0
0D4EE:  GOTO   DA3E
....................    case 1: 
....................    smes="Ene"; 
0D4F2:  MOVLW  01
0D4F4:  MOVWF  FEA
0D4F6:  MOVLW  7E
0D4F8:  MOVWF  FE9
0D4FA:  MOVLW  00
0D4FC:  CALL   0378
0D500:  TBLRD*-
0D502:  TBLRD*+
0D504:  MOVF   FF5,W
0D506:  MOVWF  FEE
0D508:  IORLW  00
0D50A:  BNZ   D502
....................    break; 
0D50C:  MOVLB  1
0D50E:  BRA    D65C
....................  
....................    case 2: 
....................    smes="Feb"; 
0D510:  MOVLW  01
0D512:  MOVWF  FEA
0D514:  MOVLW  7E
0D516:  MOVWF  FE9
0D518:  MOVLW  00
0D51A:  CALL   038C
0D51E:  TBLRD*-
0D520:  TBLRD*+
0D522:  MOVF   FF5,W
0D524:  MOVWF  FEE
0D526:  IORLW  00
0D528:  BNZ   D520
....................    break; 
0D52A:  MOVLB  1
0D52C:  BRA    D65C
....................  
....................    case 3: 
....................    smes="Mar"; 
0D52E:  MOVLW  01
0D530:  MOVWF  FEA
0D532:  MOVLW  7E
0D534:  MOVWF  FE9
0D536:  MOVLW  00
0D538:  CALL   01DE
0D53C:  TBLRD*-
0D53E:  TBLRD*+
0D540:  MOVF   FF5,W
0D542:  MOVWF  FEE
0D544:  IORLW  00
0D546:  BNZ   D53E
....................    break; 
0D548:  MOVLB  1
0D54A:  BRA    D65C
....................  
....................    case 4: 
....................    smes="Abr"; 
0D54C:  MOVLW  01
0D54E:  MOVWF  FEA
0D550:  MOVLW  7E
0D552:  MOVWF  FE9
0D554:  MOVLW  00
0D556:  CALL   03A0
0D55A:  TBLRD*-
0D55C:  TBLRD*+
0D55E:  MOVF   FF5,W
0D560:  MOVWF  FEE
0D562:  IORLW  00
0D564:  BNZ   D55C
....................    break; 
0D566:  MOVLB  1
0D568:  BRA    D65C
....................  
....................    case 5: 
....................    smes="May"; 
0D56A:  MOVLW  01
0D56C:  MOVWF  FEA
0D56E:  MOVLW  7E
0D570:  MOVWF  FE9
0D572:  MOVLW  00
0D574:  CALL   03B4
0D578:  TBLRD*-
0D57A:  TBLRD*+
0D57C:  MOVF   FF5,W
0D57E:  MOVWF  FEE
0D580:  IORLW  00
0D582:  BNZ   D57A
....................    break; 
0D584:  MOVLB  1
0D586:  BRA    D65C
....................  
....................    case 6: 
....................    smes="Jun"; 
0D588:  MOVLW  01
0D58A:  MOVWF  FEA
0D58C:  MOVLW  7E
0D58E:  MOVWF  FE9
0D590:  MOVLW  00
0D592:  CALL   03C8
0D596:  TBLRD*-
0D598:  TBLRD*+
0D59A:  MOVF   FF5,W
0D59C:  MOVWF  FEE
0D59E:  IORLW  00
0D5A0:  BNZ   D598
....................    break; 
0D5A2:  MOVLB  1
0D5A4:  BRA    D65C
....................  
....................    case 7: 
....................    smes="Jul"; 
0D5A6:  MOVLW  01
0D5A8:  MOVWF  FEA
0D5AA:  MOVLW  7E
0D5AC:  MOVWF  FE9
0D5AE:  MOVLW  00
0D5B0:  CALL   03DC
0D5B4:  TBLRD*-
0D5B6:  TBLRD*+
0D5B8:  MOVF   FF5,W
0D5BA:  MOVWF  FEE
0D5BC:  IORLW  00
0D5BE:  BNZ   D5B6
....................    break; 
0D5C0:  MOVLB  1
0D5C2:  BRA    D65C
....................  
....................    case 8: 
....................    smes="Ago"; 
0D5C4:  MOVLW  01
0D5C6:  MOVWF  FEA
0D5C8:  MOVLW  7E
0D5CA:  MOVWF  FE9
0D5CC:  MOVLW  00
0D5CE:  CALL   03F0
0D5D2:  TBLRD*-
0D5D4:  TBLRD*+
0D5D6:  MOVF   FF5,W
0D5D8:  MOVWF  FEE
0D5DA:  IORLW  00
0D5DC:  BNZ   D5D4
....................    break; 
0D5DE:  MOVLB  1
0D5E0:  BRA    D65C
....................  
....................    case 9: 
....................    smes="Sep"; 
0D5E2:  MOVLW  01
0D5E4:  MOVWF  FEA
0D5E6:  MOVLW  7E
0D5E8:  MOVWF  FE9
0D5EA:  MOVLW  00
0D5EC:  CALL   0404
0D5F0:  TBLRD*-
0D5F2:  TBLRD*+
0D5F4:  MOVF   FF5,W
0D5F6:  MOVWF  FEE
0D5F8:  IORLW  00
0D5FA:  BNZ   D5F2
....................    break; 
0D5FC:  MOVLB  1
0D5FE:  BRA    D65C
....................  
....................    case 10: 
....................    smes="Oct"; 
0D600:  MOVLW  01
0D602:  MOVWF  FEA
0D604:  MOVLW  7E
0D606:  MOVWF  FE9
0D608:  MOVLW  00
0D60A:  CALL   0418
0D60E:  TBLRD*-
0D610:  TBLRD*+
0D612:  MOVF   FF5,W
0D614:  MOVWF  FEE
0D616:  IORLW  00
0D618:  BNZ   D610
....................    break; 
0D61A:  MOVLB  1
0D61C:  BRA    D65C
....................  
....................    case 11: 
....................    smes="Nov"; 
0D61E:  MOVLW  01
0D620:  MOVWF  FEA
0D622:  MOVLW  7E
0D624:  MOVWF  FE9
0D626:  MOVLW  00
0D628:  CALL   042C
0D62C:  TBLRD*-
0D62E:  TBLRD*+
0D630:  MOVF   FF5,W
0D632:  MOVWF  FEE
0D634:  IORLW  00
0D636:  BNZ   D62E
....................    break; 
0D638:  MOVLB  1
0D63A:  BRA    D65C
....................  
....................    case 12: 
....................    smes="Dic"; 
0D63C:  MOVLW  01
0D63E:  MOVWF  FEA
0D640:  MOVLW  7E
0D642:  MOVWF  FE9
0D644:  MOVLW  00
0D646:  CALL   0440
0D64A:  TBLRD*-
0D64C:  TBLRD*+
0D64E:  MOVF   FF5,W
0D650:  MOVWF  FEE
0D652:  IORLW  00
0D654:  BNZ   D64C
....................    break; 
0D656:  MOVLB  1
0D658:  BRA    D65C
0D65A:  MOVLB  1
.................... } 
....................  
.................... lcd_gotoxy(1,1); 
0D65C:  CLRF   19
0D65E:  BTFSC  FF2.7
0D660:  BSF    19.7
0D662:  BCF    FF2.7
0D664:  MOVLW  01
0D666:  MOVWF  xA0
0D668:  MOVWF  xA1
0D66A:  MOVLB  0
0D66C:  CALL   156C
0D670:  BTFSC  19.7
0D672:  BSF    FF2.7
.................... printf(lcd_putc, "=== Fecha y hora ==="); 
0D674:  MOVLW  40
0D676:  MOVWF  FF6
0D678:  MOVLW  13
0D67A:  MOVWF  FF7
0D67C:  CALL   3E86
0D680:  CLRF   19
0D682:  BTFSC  FF2.7
0D684:  BSF    19.7
0D686:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,2); 
0D688:  MOVLW  01
0D68A:  MOVLB  1
0D68C:  MOVWF  xA0
0D68E:  MOVLW  02
0D690:  MOVWF  xA1
0D692:  MOVLB  0
0D694:  CALL   156C
0D698:  BTFSC  19.7
0D69A:  BSF    FF2.7
.................... if (submenu == 1){ 
0D69C:  MOVLB  1
0D69E:  DECFSZ x82,W
0D6A0:  BRA    D6E6
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "   Dia: %s ", sdia); 
0D6A2:  BTFSS  49.0
0D6A4:  BRA    D6D4
0D6A6:  MOVLW  56
0D6A8:  MOVWF  FF6
0D6AA:  MOVLW  13
0D6AC:  MOVWF  FF7
0D6AE:  MOVLW  08
0D6B0:  MOVWF  x90
0D6B2:  MOVLB  0
0D6B4:  CALL   44F0
0D6B8:  MOVLW  01
0D6BA:  MOVWF  FEA
0D6BC:  MOVLW  73
0D6BE:  MOVWF  FE9
0D6C0:  CALL   4518
0D6C4:  MOVLW  20
0D6C6:  MOVLB  1
0D6C8:  MOVWF  x93
0D6CA:  MOVLB  0
0D6CC:  CALL   3DE6
.................... else printf(lcd_putc, "   Dia:             "); 
0D6D0:  BRA    D6E2
0D6D2:  MOVLB  1
0D6D4:  MOVLW  62
0D6D6:  MOVWF  FF6
0D6D8:  MOVLW  13
0D6DA:  MOVWF  FF7
0D6DC:  MOVLB  0
0D6DE:  CALL   3E86
.................... } else{ 
0D6E2:  BRA    D72C
0D6E4:  MOVLB  1
0D6E6:  CLRF   19
0D6E8:  BTFSC  FF2.7
0D6EA:  BSF    19.7
0D6EC:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0D6EE:  MOVLW  01
0D6F0:  MOVWF  xA0
0D6F2:  MOVLW  02
0D6F4:  MOVWF  xA1
0D6F6:  MOVLB  0
0D6F8:  CALL   156C
0D6FC:  BTFSC  19.7
0D6FE:  BSF    FF2.7
.................... printf(lcd_putc, "   Dia: %s ", sdia); 
0D700:  MOVLW  78
0D702:  MOVWF  FF6
0D704:  MOVLW  13
0D706:  MOVWF  FF7
0D708:  MOVLW  08
0D70A:  MOVLB  1
0D70C:  MOVWF  x90
0D70E:  MOVLB  0
0D710:  CALL   44F0
0D714:  MOVLW  01
0D716:  MOVWF  FEA
0D718:  MOVLW  73
0D71A:  MOVWF  FE9
0D71C:  CALL   4518
0D720:  MOVLW  20
0D722:  MOVLB  1
0D724:  MOVWF  x93
0D726:  MOVLB  0
0D728:  CALL   3DE6
0D72C:  CLRF   19
0D72E:  BTFSC  FF2.7
0D730:  BSF    19.7
0D732:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(1,3); 
0D734:  MOVLW  01
0D736:  MOVLB  1
0D738:  MOVWF  xA0
0D73A:  MOVLW  03
0D73C:  MOVWF  xA1
0D73E:  MOVLB  0
0D740:  CALL   156C
0D744:  BTFSC  19.7
0D746:  BSF    FF2.7
.................... if (submenu == 3){ 
0D748:  MOVLB  1
0D74A:  MOVF   x82,W
0D74C:  SUBLW  03
0D74E:  BNZ   D7A0
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, " Nro: %02u   ",dia); 
0D750:  BTFSS  49.0
0D752:  BRA    D78E
0D754:  MOVLW  84
0D756:  MOVWF  FF6
0D758:  MOVLW  13
0D75A:  MOVWF  FF7
0D75C:  MOVLW  06
0D75E:  MOVWF  x90
0D760:  MOVLB  0
0D762:  CALL   44F0
0D766:  MOVFF  16E,190
0D76A:  MOVLW  01
0D76C:  MOVLB  1
0D76E:  MOVWF  x91
0D770:  MOVLB  0
0D772:  CALL   46F0
0D776:  MOVLW  8E
0D778:  MOVWF  FF6
0D77A:  MOVLW  13
0D77C:  MOVWF  FF7
0D77E:  MOVLW  03
0D780:  MOVLB  1
0D782:  MOVWF  x90
0D784:  MOVLB  0
0D786:  CALL   44F0
.................... else printf(lcd_putc, " Nro:     "); 
0D78A:  BRA    D79C
0D78C:  MOVLB  1
0D78E:  MOVLW  92
0D790:  MOVWF  FF6
0D792:  MOVLW  13
0D794:  MOVWF  FF7
0D796:  MOVLB  0
0D798:  CALL   3E86
.................... } else 
0D79C:  BRA    D7EA
0D79E:  MOVLB  1
0D7A0:  CLRF   19
0D7A2:  BTFSC  FF2.7
0D7A4:  BSF    19.7
0D7A6:  BCF    FF2.7
.................... { 
.................... lcd_gotoxy(1,3); 
0D7A8:  MOVLW  01
0D7AA:  MOVWF  xA0
0D7AC:  MOVLW  03
0D7AE:  MOVWF  xA1
0D7B0:  MOVLB  0
0D7B2:  CALL   156C
0D7B6:  BTFSC  19.7
0D7B8:  BSF    FF2.7
.................... printf(lcd_putc, " Nro: %02u ",dia); 
0D7BA:  MOVLW  9E
0D7BC:  MOVWF  FF6
0D7BE:  MOVLW  13
0D7C0:  MOVWF  FF7
0D7C2:  MOVLW  06
0D7C4:  MOVLB  1
0D7C6:  MOVWF  x90
0D7C8:  MOVLB  0
0D7CA:  CALL   44F0
0D7CE:  MOVFF  16E,190
0D7D2:  MOVLW  01
0D7D4:  MOVLB  1
0D7D6:  MOVWF  x91
0D7D8:  MOVLB  0
0D7DA:  CALL   46F0
0D7DE:  MOVLW  20
0D7E0:  MOVLB  1
0D7E2:  MOVWF  x93
0D7E4:  MOVLB  0
0D7E6:  CALL   3DE6
0D7EA:  CLRF   19
0D7EC:  BTFSC  FF2.7
0D7EE:  BSF    19.7
0D7F0:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(11,3); 
0D7F2:  MOVLW  0B
0D7F4:  MOVLB  1
0D7F6:  MOVWF  xA0
0D7F8:  MOVLW  03
0D7FA:  MOVWF  xA1
0D7FC:  MOVLB  0
0D7FE:  CALL   156C
0D802:  BTFSC  19.7
0D804:  BSF    FF2.7
.................... if (submenu == 2){ 
0D806:  MOVLB  1
0D808:  MOVF   x82,W
0D80A:  SUBLW  02
0D80C:  BNZ   D846
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Mes: %s",smes); 
0D80E:  BTFSS  49.0
0D810:  BRA    D834
0D812:  MOVLW  AA
0D814:  MOVWF  FF6
0D816:  MOVLW  13
0D818:  MOVWF  FF7
0D81A:  MOVLW  05
0D81C:  MOVWF  x90
0D81E:  MOVLB  0
0D820:  CALL   44F0
0D824:  MOVLW  01
0D826:  MOVWF  FEA
0D828:  MOVLW  7E
0D82A:  MOVWF  FE9
0D82C:  CALL   4518
.................... else printf(lcd_putc, "Mes:    "); 
0D830:  BRA    D842
0D832:  MOVLB  1
0D834:  MOVLW  B2
0D836:  MOVWF  FF6
0D838:  MOVLW  13
0D83A:  MOVWF  FF7
0D83C:  MOVLB  0
0D83E:  CALL   3E86
.................... } else { 
0D842:  BRA    D880
0D844:  MOVLB  1
0D846:  CLRF   19
0D848:  BTFSC  FF2.7
0D84A:  BSF    19.7
0D84C:  BCF    FF2.7
.................... lcd_gotoxy(11,3); 
0D84E:  MOVLW  0B
0D850:  MOVWF  xA0
0D852:  MOVLW  03
0D854:  MOVWF  xA1
0D856:  MOVLB  0
0D858:  CALL   156C
0D85C:  BTFSC  19.7
0D85E:  BSF    FF2.7
.................... printf(lcd_putc, "Mes: %s",smes); 
0D860:  MOVLW  BC
0D862:  MOVWF  FF6
0D864:  MOVLW  13
0D866:  MOVWF  FF7
0D868:  MOVLW  05
0D86A:  MOVLB  1
0D86C:  MOVWF  x90
0D86E:  MOVLB  0
0D870:  CALL   44F0
0D874:  MOVLW  01
0D876:  MOVWF  FEA
0D878:  MOVLW  7E
0D87A:  MOVWF  FE9
0D87C:  CALL   4518
0D880:  CLRF   19
0D882:  BTFSC  FF2.7
0D884:  BSF    19.7
0D886:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(1,4); 
0D888:  MOVLW  01
0D88A:  MOVLB  1
0D88C:  MOVWF  xA0
0D88E:  MOVLW  04
0D890:  MOVWF  xA1
0D892:  MOVLB  0
0D894:  CALL   156C
0D898:  BTFSC  19.7
0D89A:  BSF    FF2.7
.................... if (submenu == 4){ 
0D89C:  MOVLB  1
0D89E:  MOVF   x82,W
0D8A0:  SUBLW  04
0D8A2:  BNZ   D8EC
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Hora: %02u ",hora); 
0D8A4:  BTFSS  49.0
0D8A6:  BRA    D8DA
0D8A8:  MOVLW  C4
0D8AA:  MOVWF  FF6
0D8AC:  MOVLW  13
0D8AE:  MOVWF  FF7
0D8B0:  MOVLW  06
0D8B2:  MOVWF  x90
0D8B4:  MOVLB  0
0D8B6:  CALL   44F0
0D8BA:  MOVFF  170,190
0D8BE:  MOVLW  01
0D8C0:  MOVLB  1
0D8C2:  MOVWF  x91
0D8C4:  MOVLB  0
0D8C6:  CALL   46F0
0D8CA:  MOVLW  20
0D8CC:  MOVLB  1
0D8CE:  MOVWF  x93
0D8D0:  MOVLB  0
0D8D2:  CALL   3DE6
.................... else printf(lcd_putc, "Hora:    "); 
0D8D6:  BRA    D8E8
0D8D8:  MOVLB  1
0D8DA:  MOVLW  D0
0D8DC:  MOVWF  FF6
0D8DE:  MOVLW  13
0D8E0:  MOVWF  FF7
0D8E2:  MOVLB  0
0D8E4:  CALL   3E86
.................... } else { 
0D8E8:  BRA    D936
0D8EA:  MOVLB  1
0D8EC:  CLRF   19
0D8EE:  BTFSC  FF2.7
0D8F0:  BSF    19.7
0D8F2:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0D8F4:  MOVLW  01
0D8F6:  MOVWF  xA0
0D8F8:  MOVLW  04
0D8FA:  MOVWF  xA1
0D8FC:  MOVLB  0
0D8FE:  CALL   156C
0D902:  BTFSC  19.7
0D904:  BSF    FF2.7
.................... printf(lcd_putc, "Hora: %02u ",hora); 
0D906:  MOVLW  DA
0D908:  MOVWF  FF6
0D90A:  MOVLW  13
0D90C:  MOVWF  FF7
0D90E:  MOVLW  06
0D910:  MOVLB  1
0D912:  MOVWF  x90
0D914:  MOVLB  0
0D916:  CALL   44F0
0D91A:  MOVFF  170,190
0D91E:  MOVLW  01
0D920:  MOVLB  1
0D922:  MOVWF  x91
0D924:  MOVLB  0
0D926:  CALL   46F0
0D92A:  MOVLW  20
0D92C:  MOVLB  1
0D92E:  MOVWF  x93
0D930:  MOVLB  0
0D932:  CALL   3DE6
0D936:  CLRF   19
0D938:  BTFSC  FF2.7
0D93A:  BSF    19.7
0D93C:  BCF    FF2.7
.................... } 
....................  
.................... lcd_gotoxy(10,4); 
0D93E:  MOVLW  0A
0D940:  MOVLB  1
0D942:  MOVWF  xA0
0D944:  MOVLW  04
0D946:  MOVWF  xA1
0D948:  MOVLB  0
0D94A:  CALL   156C
0D94E:  BTFSC  19.7
0D950:  BSF    FF2.7
.................... if (submenu == 5){ 
0D952:  MOVLB  1
0D954:  MOVF   x82,W
0D956:  SUBLW  05
0D958:  BNZ   D996
.................... if (bit_test(tiempo1,0)) printf(lcd_putc, "Minutos: %02u",minuto); 
0D95A:  BTFSS  49.0
0D95C:  BRA    D984
0D95E:  MOVLW  E6
0D960:  MOVWF  FF6
0D962:  MOVLW  13
0D964:  MOVWF  FF7
0D966:  MOVLW  09
0D968:  MOVWF  x90
0D96A:  MOVLB  0
0D96C:  CALL   44F0
0D970:  MOVFF  171,190
0D974:  MOVLW  01
0D976:  MOVLB  1
0D978:  MOVWF  x91
0D97A:  MOVLB  0
0D97C:  CALL   46F0
.................... else printf(lcd_putc, "Minutos:   "); 
0D980:  BRA    D992
0D982:  MOVLB  1
0D984:  MOVLW  F4
0D986:  MOVWF  FF6
0D988:  MOVLW  13
0D98A:  MOVWF  FF7
0D98C:  MOVLB  0
0D98E:  CALL   3E86
.................... } else { 
0D992:  BRA    D9D4
0D994:  MOVLB  1
0D996:  CLRF   19
0D998:  BTFSC  FF2.7
0D99A:  BSF    19.7
0D99C:  BCF    FF2.7
.................... lcd_gotoxy(10,4); 
0D99E:  MOVLW  0A
0D9A0:  MOVWF  xA0
0D9A2:  MOVLW  04
0D9A4:  MOVWF  xA1
0D9A6:  MOVLB  0
0D9A8:  CALL   156C
0D9AC:  BTFSC  19.7
0D9AE:  BSF    FF2.7
.................... printf(lcd_putc, "Minutos: %02u",minuto); 
0D9B0:  MOVLW  00
0D9B2:  MOVWF  FF6
0D9B4:  MOVLW  14
0D9B6:  MOVWF  FF7
0D9B8:  MOVLW  09
0D9BA:  MOVLB  1
0D9BC:  MOVWF  x90
0D9BE:  MOVLB  0
0D9C0:  CALL   44F0
0D9C4:  MOVFF  171,190
0D9C8:  MOVLW  01
0D9CA:  MOVLB  1
0D9CC:  MOVWF  x91
0D9CE:  MOVLB  0
0D9D0:  CALL   46F0
.................... } 
.................... restart_wdt(); 
0D9D4:  CLRWDT
....................  
.................... } // todo lleno cuando salgo de aqui 
0D9D6:  MOVLB  1
0D9D8:  BRA    D246
....................  
.................... if (submenu == 10) Menu = 62; 
0D9DA:  MOVF   x82,W
0D9DC:  SUBLW  0A
0D9DE:  BNZ   D9E4
0D9E0:  MOVLW  3E
0D9E2:  MOVWF  28
.................... if (submenu == 6) { 
0D9E4:  MOVF   x82,W
0D9E6:  SUBLW  06
0D9E8:  BNZ   DA10
.................... Menu = 1; 
0D9EA:  MOVLW  01
0D9EC:  MOVWF  28
.................... ds1307_set_date_time(dia,mes,anio,dias,hora,minuto,0); 
0D9EE:  MOVFF  16E,183
0D9F2:  MOVFF  16D,184
0D9F6:  MOVFF  172,185
0D9FA:  MOVFF  16F,186
0D9FE:  MOVFF  170,187
0DA02:  MOVFF  171,188
0DA06:  CLRF   x89
0DA08:  MOVLB  0
0DA0A:  CALL   D0C4
0DA0E:  MOVLB  1
.................... } 
....................  
.................... } 
0DA10:  MOVLB  0
0DA12:  GOTO   E596 (RETURN)
....................  
.................... void inicio(){  /////////////// INICIO ////////////////////// 
.................... ONLCDLED; 
*
03F66:  BCF    F95.6
03F68:  BCF    F8C.6
.................... //// Pullups para el teclado //// 
.................... port_b_pullups(true); 
03F6A:  BCF    FF1.7
....................  
.................... /////////  Inicio el WatchDog  /////////////// 
.................... setup_wdt(WDT_ON); 
03F6C:  BSF    FD1.0
....................  
.................... //// Interrupciones ///// 
.................... enable_interrupts(global); 
03F6E:  MOVLW  C0
03F70:  IORWF  FF2,F
.................... //disable_interrupts(global); 
.................... enable_interrupts(int_RDA); // Interrupcion de llegada de datos 
03F72:  BSF    F9D.5
.................... enable_interrupts(int_TIMER1); // Interrupcion por timer 1 
03F74:  BSF    F9D.0
....................  
.................... ////// Inicio de dispositivos ////// 
.................... DHT11_init(); 
03F76:  BRA    3B56
.................... DS1307_init(); 
03F78:  BRA    3BA8
.................... lcd_init(); 
03F7A:  BRA    3D34
.................... LIMPIARLCD; 
03F7C:  MOVLW  0E
03F7E:  MOVWF  FF6
03F80:  MOVLW  14
03F82:  MOVWF  FF7
03F84:  RCALL  3E86
03F86:  CLRF   19
03F88:  BTFSC  FF2.7
03F8A:  BSF    19.7
03F8C:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
03F8E:  MOVLW  01
03F90:  MOVLB  1
03F92:  MOVWF  xA0
03F94:  MOVLW  02
03F96:  MOVWF  xA1
03F98:  MOVLB  0
03F9A:  CALL   156C
03F9E:  BTFSC  19.7
03FA0:  BSF    FF2.7
.................... printf(lcd_putc, "      CASANDRA      "); 
03FA2:  MOVLW  10
03FA4:  MOVWF  FF6
03FA6:  MOVLW  14
03FA8:  MOVWF  FF7
03FAA:  RCALL  3E86
03FAC:  CLRF   19
03FAE:  BTFSC  FF2.7
03FB0:  BSF    19.7
03FB2:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
03FB4:  MOVLW  01
03FB6:  MOVLB  1
03FB8:  MOVWF  xA0
03FBA:  MOVLW  03
03FBC:  MOVWF  xA1
03FBE:  MOVLB  0
03FC0:  CALL   156C
03FC4:  BTFSC  19.7
03FC6:  BSF    FF2.7
.................... printf(lcd_putc, "    Iniciando....   "); 
03FC8:  MOVLW  26
03FCA:  MOVWF  FF6
03FCC:  MOVLW  14
03FCE:  MOVWF  FF7
03FD0:  RCALL  3E86
.................... restart_wdt(); 
03FD2:  CLRWDT
03FD4:  CLRF   19
03FD6:  BTFSC  FF2.7
03FD8:  BSF    19.7
03FDA:  BCF    FF2.7
.................... delay_ms(50); 
03FDC:  MOVLW  32
03FDE:  MOVLB  1
03FE0:  MOVWF  xA8
03FE2:  MOVLB  0
03FE4:  CALL   1456
03FE8:  BTFSC  19.7
03FEA:  BSF    FF2.7
....................  
.................... /////////////////////// Arrancamos el timer 1 para medir tiempos internos //////////// 
.................... setup_timer_1(T1_INTERNAL | T1_DIV_BY_8); 
03FEC:  MOVLW  B5
03FEE:  MOVWF  FCD
.................... set_timer1(0); 
03FF0:  CLRF   FCF
03FF2:  CLRF   FCE
....................  
.................... ////// Conversor AD ////// 
.................... setup_adc(ADC_CLOCK_INTERNAL ); 
03FF4:  MOVF   FC0,W
03FF6:  ANDLW  C0
03FF8:  IORLW  07
03FFA:  MOVWF  FC0
03FFC:  BSF    FC0.7
03FFE:  BSF    FC2.0
.................... setup_adc_ports(AN0_TO_AN3); 
04000:  MOVF   FC1,W
04002:  ANDLW  C0
04004:  IORLW  0B
04006:  MOVWF  FC1
....................  
.................... ////// Inicio de variables /////////// 
.................... Menu = 1;      // Posicion dentro del menu 0 
04008:  MOVLW  01
0400A:  MOVWF  28
.................... Tiempo1=0; // Contador de tiempos internos larga en 0 
0400C:  CLRF   49
.................... TempOut=20;    // Temperatura remota (afuera) 
0400E:  MOVLW  14
04010:  MOVWF  43
.................... Sol=50;       // Intensidad del sol (remota, afuera) 
04012:  MOVLW  32
04014:  MOVWF  44
.................... Rebote = false;    // Teclado no presionado 
04016:  BCF    35.0
.................... CuentaPanico = 0;  // Contador de cambios de teclas para panico en 0 
04018:  MOVLB  1
0401A:  CLRF   x51
.................... CuentaLuz = 0; // Arrancamos con todas las luces apagadas 
0401C:  CLRF   x52
.................... CuentaSens = 0; // Arrancamos con todos los sensores apagados 
0401E:  CLRF   x53
.................... zZzZ = false; 
04020:  BCF    x28.2
.................... //Defini(); 
....................  
.................... EstadoAl = read_eeprom(EstAlarma);  // Leo el estado de alarma 
04022:  MOVFF  FF2,170
04026:  BCF    FF2.7
04028:  CLRF   FAA
0402A:  MOVLW  02
0402C:  MOVWF  FA9
0402E:  BCF    FA6.6
04030:  BCF    FA6.7
04032:  BSF    FA6.0
04034:  MOVF   FA8,W
04036:  BTFSC  x70.7
04038:  BSF    FF2.7
0403A:  MOVWF  46
.................... ConfCas = read_eeprom(EstCasandra); 
0403C:  MOVFF  FF2,170
04040:  BCF    FF2.7
04042:  CLRF   FAA
04044:  MOVLW  03
04046:  MOVWF  FA9
04048:  BCF    FA6.6
0404A:  BCF    FA6.7
0404C:  BSF    FA6.0
0404E:  MOVF   FA8,W
04050:  BTFSC  x70.7
04052:  BSF    FF2.7
04054:  MOVWF  47
....................  
.................... if (bit_test(ConfCas,5)) BusData(150,90);  //printf("%c%c%c%c", 250, 150, 90, 150 + 90); // Webserver activado 
04056:  BTFSS  47.5
04058:  BRA    4076
0405A:  CLRF   19
0405C:  BTFSC  FF2.7
0405E:  BSF    19.7
04060:  BCF    FF2.7
04062:  MOVLW  96
04064:  MOVWF  xA3
04066:  MOVLW  5A
04068:  MOVWF  xA4
0406A:  MOVLB  0
0406C:  CALL   15F6
04070:  BTFSC  19.7
04072:  BSF    FF2.7
04074:  MOVLB  1
.................... if ((bit_test(ConfCas,5)) == false) BusData(150,80);  //printf("%c%c%c%c", 250, 150, 80, 150 + 80); // Webserver Apagado 
04076:  BTFSC  47.5
04078:  BRA    4096
0407A:  CLRF   19
0407C:  BTFSC  FF2.7
0407E:  BSF    19.7
04080:  BCF    FF2.7
04082:  MOVLW  96
04084:  MOVWF  xA3
04086:  MOVLW  50
04088:  MOVWF  xA4
0408A:  MOVLB  0
0408C:  CALL   15F6
04090:  BTFSC  19.7
04092:  BSF    FF2.7
04094:  MOVLB  1
....................  
.................... TpoSilencioso = read_eeprom(TpoSil);  // Leo el tiempo silencioso 
04096:  MOVFF  FF2,170
0409A:  BCF    FF2.7
0409C:  CLRF   FAA
0409E:  MOVLW  04
040A0:  MOVWF  FA9
040A2:  BCF    FA6.6
040A4:  BCF    FA6.7
040A6:  BSF    FA6.0
040A8:  MOVF   FA8,W
040AA:  BTFSC  x70.7
040AC:  BSF    FF2.7
040AE:  MOVWF  x12
.................... TpoSalida = read_eeprom(TpoSal);  // Leo el tiempo para salir 
040B0:  MOVFF  FF2,170
040B4:  BCF    FF2.7
040B6:  CLRF   FAA
040B8:  MOVLW  05
040BA:  MOVWF  FA9
040BC:  BCF    FA6.6
040BE:  BCF    FA6.7
040C0:  BSF    FA6.0
040C2:  MOVF   FA8,W
040C4:  BTFSC  x70.7
040C6:  BSF    FF2.7
040C8:  MOVWF  x13
....................  
.................... Passwd[0] = read_eeprom(Password);  // Contraseña1 de ROM a RAM 
040CA:  MOVFF  FF2,170
040CE:  BCF    FF2.7
040D0:  CLRF   FAA
040D2:  MOVLW  06
040D4:  MOVWF  FA9
040D6:  BCF    FA6.6
040D8:  BCF    FA6.7
040DA:  BSF    FA6.0
040DC:  MOVF   FA8,W
040DE:  BTFSC  x70.7
040E0:  BSF    FF2.7
040E2:  MOVWF  x10
.................... Passwd[1] = read_eeprom(Password + 1);  // Contraseña2 de ROM a RAM 
040E4:  MOVFF  FF2,170
040E8:  BCF    FF2.7
040EA:  CLRF   FAA
040EC:  MOVLW  07
040EE:  MOVWF  FA9
040F0:  BCF    FA6.6
040F2:  BCF    FA6.7
040F4:  BSF    FA6.0
040F6:  MOVF   FA8,W
040F8:  BTFSC  x70.7
040FA:  BSF    FF2.7
040FC:  MOVWF  x11
....................  
.................... Gdias[1] = read_eeprom(G1Dias); 
040FE:  MOVFF  FF2,170
04102:  BCF    FF2.7
04104:  CLRF   FAA
04106:  MOVLW  10
04108:  MOVWF  FA9
0410A:  BCF    FA6.6
0410C:  BCF    FA6.7
0410E:  BSF    FA6.0
04110:  MOVF   FA8,W
04112:  BTFSC  x70.7
04114:  BSF    FF2.7
04116:  MOVWF  x20
.................... Gdias[2] = read_eeprom(G2Dias); 
04118:  MOVFF  FF2,170
0411C:  BCF    FF2.7
0411E:  CLRF   FAA
04120:  MOVLW  11
04122:  MOVWF  FA9
04124:  BCF    FA6.6
04126:  BCF    FA6.7
04128:  BSF    FA6.0
0412A:  MOVF   FA8,W
0412C:  BTFSC  x70.7
0412E:  BSF    FF2.7
04130:  MOVWF  x21
.................... Gdias[3] = read_eeprom(G3Dias); 
04132:  MOVFF  FF2,170
04136:  BCF    FF2.7
04138:  CLRF   FAA
0413A:  MOVLW  12
0413C:  MOVWF  FA9
0413E:  BCF    FA6.6
04140:  BCF    FA6.7
04142:  BSF    FA6.0
04144:  MOVF   FA8,W
04146:  BTFSC  x70.7
04148:  BSF    FF2.7
0414A:  MOVWF  x22
.................... Gdias[4] = read_eeprom(G4Dias); 
0414C:  MOVFF  FF2,170
04150:  BCF    FF2.7
04152:  CLRF   FAA
04154:  MOVLW  13
04156:  MOVWF  FA9
04158:  BCF    FA6.6
0415A:  BCF    FA6.7
0415C:  BSF    FA6.0
0415E:  MOVF   FA8,W
04160:  BTFSC  x70.7
04162:  BSF    FF2.7
04164:  MOVWF  x23
.................... GOn[1] = read_eeprom(G1On); 
04166:  MOVFF  FF2,170
0416A:  BCF    FF2.7
0416C:  CLRF   FAA
0416E:  MOVLW  08
04170:  MOVWF  FA9
04172:  BCF    FA6.6
04174:  BCF    FA6.7
04176:  BSF    FA6.0
04178:  MOVF   FA8,W
0417A:  BTFSC  x70.7
0417C:  BSF    FF2.7
0417E:  MOVWF  x16
.................... GOn[2] = read_eeprom(G2On); 
04180:  MOVFF  FF2,170
04184:  BCF    FF2.7
04186:  CLRF   FAA
04188:  MOVLW  09
0418A:  MOVWF  FA9
0418C:  BCF    FA6.6
0418E:  BCF    FA6.7
04190:  BSF    FA6.0
04192:  MOVF   FA8,W
04194:  BTFSC  x70.7
04196:  BSF    FF2.7
04198:  MOVWF  x17
.................... GOn[3] = read_eeprom(G3On); 
0419A:  MOVFF  FF2,170
0419E:  BCF    FF2.7
041A0:  CLRF   FAA
041A2:  MOVLW  0A
041A4:  MOVWF  FA9
041A6:  BCF    FA6.6
041A8:  BCF    FA6.7
041AA:  BSF    FA6.0
041AC:  MOVF   FA8,W
041AE:  BTFSC  x70.7
041B0:  BSF    FF2.7
041B2:  MOVWF  x18
.................... GOn[4] = read_eeprom(G4On); 
041B4:  MOVFF  FF2,170
041B8:  BCF    FF2.7
041BA:  CLRF   FAA
041BC:  MOVLW  0B
041BE:  MOVWF  FA9
041C0:  BCF    FA6.6
041C2:  BCF    FA6.7
041C4:  BSF    FA6.0
041C6:  MOVF   FA8,W
041C8:  BTFSC  x70.7
041CA:  BSF    FF2.7
041CC:  MOVWF  x19
.................... GOff[1] = read_eeprom(G1Off); 
041CE:  MOVFF  FF2,170
041D2:  BCF    FF2.7
041D4:  CLRF   FAA
041D6:  MOVLW  0C
041D8:  MOVWF  FA9
041DA:  BCF    FA6.6
041DC:  BCF    FA6.7
041DE:  BSF    FA6.0
041E0:  MOVF   FA8,W
041E2:  BTFSC  x70.7
041E4:  BSF    FF2.7
041E6:  MOVWF  x1B
.................... GOff[2] = read_eeprom(G2Off); 
041E8:  MOVFF  FF2,170
041EC:  BCF    FF2.7
041EE:  CLRF   FAA
041F0:  MOVLW  0D
041F2:  MOVWF  FA9
041F4:  BCF    FA6.6
041F6:  BCF    FA6.7
041F8:  BSF    FA6.0
041FA:  MOVF   FA8,W
041FC:  BTFSC  x70.7
041FE:  BSF    FF2.7
04200:  MOVWF  x1C
.................... GOff[3] = read_eeprom(G3Off); 
04202:  MOVFF  FF2,170
04206:  BCF    FF2.7
04208:  CLRF   FAA
0420A:  MOVLW  0E
0420C:  MOVWF  FA9
0420E:  BCF    FA6.6
04210:  BCF    FA6.7
04212:  BSF    FA6.0
04214:  MOVF   FA8,W
04216:  BTFSC  x70.7
04218:  BSF    FF2.7
0421A:  MOVWF  x1D
.................... GOff[4] = read_eeprom(G4Off); 
0421C:  MOVFF  FF2,170
04220:  BCF    FF2.7
04222:  CLRF   FAA
04224:  MOVLW  0F
04226:  MOVWF  FA9
04228:  BCF    FA6.6
0422A:  BCF    FA6.7
0422C:  BSF    FA6.0
0422E:  MOVF   FA8,W
04230:  BTFSC  x70.7
04232:  BSF    FF2.7
04234:  MOVWF  x1E
.................... Umbral = read_eeprom(Umbra); 
04236:  MOVFF  FF2,170
0423A:  BCF    FF2.7
0423C:  CLRF   FAA
0423E:  MOVLW  14
04240:  MOVWF  FA9
04242:  BCF    FA6.6
04244:  BCF    FA6.7
04246:  BSF    FA6.0
04248:  MOVF   FA8,W
0424A:  BTFSC  x70.7
0424C:  BSF    FF2.7
0424E:  MOVWF  48
....................  
....................  
.................... //Passwd[0] = 0; 
.................... //Passwd[1] = 0; 
.................... //ds1307_set_date_time(1,1,1,1,0,0,0);  // Inicio de valores para el DS1307 
....................  
.................... restart_wdt(); 
04250:  CLRWDT
....................  
.................... ////////////// Recuperamos intensidades de EEPROM ///////////////// 
.................... int aux1; 
.................... long puntero = 0; 
04252:  CLRF   x6F
04254:  CLRF   x6E
....................  
.................... for (aux1=32;aux1<94;aux1++){ // llena todo desde el 32 al 94  
04256:  MOVLW  20
04258:  MOVWF  x6D
0425A:  MOVF   x6D,W
0425C:  SUBLW  5D
0425E:  BTFSS  FD8.0
04260:  BRA    43CA
.................... restart_wdt(); 
04262:  CLRWDT
.................... IntLuz[aux1] = read_eeprom(aux1); 
04264:  CLRF   03
04266:  MOVF   x6D,W
04268:  ADDLW  4A
0426A:  MOVWF  FE9
0426C:  MOVLW  00
0426E:  ADDWFC 03,W
04270:  MOVWF  FEA
04272:  MOVFF  FF2,172
04276:  BCF    FF2.7
04278:  CLRF   FAA
0427A:  MOVFF  16D,FA9
0427E:  BCF    FA6.6
04280:  BCF    FA6.7
04282:  BSF    FA6.0
04284:  MOVF   FA8,W
04286:  BTFSC  x72.7
04288:  BSF    FF2.7
0428A:  MOVWF  FEF
0428C:  CLRF   19
0428E:  BTFSC  FF2.7
04290:  BSF    19.7
04292:  BCF    FF2.7
.................... delay_ms(5); 
04294:  MOVLW  05
04296:  MOVWF  xA8
04298:  MOVLB  0
0429A:  CALL   1456
0429E:  BTFSC  19.7
042A0:  BSF    FF2.7
.................... if (IntLuz[aux1] > 80) { // La luz estaba encendida 
042A2:  CLRF   03
042A4:  MOVLB  1
042A6:  MOVF   x6D,W
042A8:  ADDLW  4A
042AA:  MOVWF  FE9
042AC:  MOVLW  00
042AE:  ADDWFC 03,W
042B0:  MOVWF  FEA
042B2:  MOVF   FEF,W
042B4:  SUBLW  50
042B6:  BC    4304
.................... BusData(aux1,(IntLuz[aux1]-100));  //printf("%c%c%c%c", 250, aux1, (IntLuz[aux1]-100), aux1+(IntLuz[aux1]-100)); // Le cargo la intensidad 
042B8:  CLRF   03
042BA:  MOVF   x6D,W
042BC:  ADDLW  4A
042BE:  MOVWF  FE9
042C0:  MOVLW  00
042C2:  ADDWFC 03,W
042C4:  MOVWF  FEA
042C6:  MOVLW  64
042C8:  SUBWF  FEF,W
042CA:  MOVWF  x70
042CC:  CLRF   19
042CE:  BTFSC  FF2.7
042D0:  BSF    19.7
042D2:  BCF    FF2.7
042D4:  MOVFF  16D,1A3
042D8:  MOVWF  xA4
042DA:  MOVLB  0
042DC:  CALL   15F6
042E0:  BTFSC  19.7
042E2:  BSF    FF2.7
042E4:  CLRF   19
042E6:  BTFSC  FF2.7
042E8:  BSF    19.7
042EA:  BCF    FF2.7
.................... //delay_ms(5); 
.................... BusData(aux1,90);  //printf("%c%c%c%c", 250, aux1, 90, aux1+90); // La enciendo 
042EC:  MOVFF  16D,1A3
042F0:  MOVLW  5A
042F2:  MOVLB  1
042F4:  MOVWF  xA4
042F6:  MOVLB  0
042F8:  CALL   15F6
042FC:  BTFSC  19.7
042FE:  BSF    FF2.7
.................... //delay_ms(5); 
.................... } else{ // La luz estaba apagada 
04300:  BRA    4330
04302:  MOVLB  1
.................... BusData(aux1,(IntLuz[aux1]));  //printf("%c%c%c%c", 250, aux1, (IntLuz[aux1]), aux1+(IntLuz[aux1])); // Le cargo la intensidad 
04304:  CLRF   03
04306:  MOVF   x6D,W
04308:  ADDLW  4A
0430A:  MOVWF  FE9
0430C:  MOVLW  00
0430E:  ADDWFC 03,W
04310:  MOVWF  FEA
04312:  MOVFF  FEF,170
04316:  CLRF   19
04318:  BTFSC  FF2.7
0431A:  BSF    19.7
0431C:  BCF    FF2.7
0431E:  MOVFF  16D,1A3
04322:  MOVFF  170,1A4
04326:  MOVLB  0
04328:  CALL   15F6
0432C:  BTFSC  19.7
0432E:  BSF    FF2.7
.................... //delay_ms(5); 
.................... } 
.................... restart_wdt(); 
04330:  CLRWDT
....................  
.................... //  Nose porque tengo desactivado esto, habria que probarlo 
.................... puntero = (long) aux1 + 200; 
04332:  MOVLB  1
04334:  CLRF   x71
04336:  MOVLW  C8
04338:  ADDWF  x6D,W
0433A:  MOVWF  x6E
0433C:  MOVLW  00
0433E:  ADDWFC x71,W
04340:  MOVWF  x6F
.................... LGrupo[aux1] = read_eeprom(puntero); 
04342:  CLRF   03
04344:  MOVF   x6D,W
04346:  ADDLW  AD
04348:  MOVWF  FE9
0434A:  MOVLW  00
0434C:  ADDWFC 03,W
0434E:  MOVWF  FEA
04350:  MOVFF  FF2,172
04354:  BCF    FF2.7
04356:  MOVFF  16F,FAA
0435A:  MOVFF  16E,FA9
0435E:  BCF    FA6.6
04360:  BCF    FA6.7
04362:  BSF    FA6.0
04364:  MOVF   FA8,W
04366:  BTFSC  x72.7
04368:  BSF    FF2.7
0436A:  MOVWF  FEF
0436C:  CLRF   19
0436E:  BTFSC  FF2.7
04370:  BSF    19.7
04372:  BCF    FF2.7
.................... delay_ms(5); 
04374:  MOVLW  05
04376:  MOVWF  xA8
04378:  MOVLB  0
0437A:  CALL   1456
0437E:  BTFSC  19.7
04380:  BSF    FF2.7
.................... bit_clear(LGrupo[aux1],1); 
04382:  CLRF   03
04384:  MOVLB  1
04386:  MOVF   x6D,W
04388:  ADDLW  AD
0438A:  MOVWF  01
0438C:  MOVLW  00
0438E:  ADDWFC 03,F
04390:  MOVFF  01,FE9
04394:  MOVFF  03,FEA
04398:  BCF    FEF.1
.................... bit_clear(LGrupo[aux1],2); 
0439A:  CLRF   03
0439C:  MOVF   x6D,W
0439E:  ADDLW  AD
043A0:  MOVWF  01
043A2:  MOVLW  00
043A4:  ADDWFC 03,F
043A6:  MOVFF  01,FE9
043AA:  MOVFF  03,FEA
043AE:  BCF    FEF.2
.................... bit_clear(LGrupo[aux1],3); 
043B0:  CLRF   03
043B2:  MOVF   x6D,W
043B4:  ADDLW  AD
043B6:  MOVWF  01
043B8:  MOVLW  00
043BA:  ADDWFC 03,F
043BC:  MOVFF  01,FE9
043C0:  MOVFF  03,FEA
043C4:  BCF    FEF.3
.................... // 
.................... } 
043C6:  INCF   x6D,F
043C8:  BRA    425A
....................  
.................... /// Definimos las luces de grupos fijos ///     ex Defini(); 
.................... /// Perfimetro J (bit 1) /// 
.................... bit_set(LGrupo[32+36],1);    // 68 Exterior del Estar en red 
043CA:  MOVLB  0
043CC:  BSF    xF1.1
.................... bit_set(LGrupo[32+25],1);    // 59 Exterior del Hall en red 
043CE:  BSF    xE6.1
.................... bit_set(LGrupo[32+50],1);    // 82 Luz Pared de la Galeria 
043D0:  BSF    xFF.1
.................... //bit_set(LGrupo[32+],1);    // 83 Luz Frente a la Parrilla 
.................... //bit_set(LGrupo[32+],1);    // 85 Luz principal y del ventilado de la Galeria 
....................  
.................... /// Perfimetro F (bit 2) /// 
.................... bit_set(LGrupo[32+11],2);    // 43 Luz del perimetro de cuartos 
043D2:  BSF    xD8.2
.................... bit_set(LGrupo[32+25],2);    // 59 Luz de entrada principal y cocina exterior 
043D4:  BSF    xE6.2
....................  
.................... ///    Jardin (bit 3)    /// 
.................... bit_set(LGrupo[32+61],3);    // 93 Luz exterior Jardin vapor de Sodio 
043D6:  MOVLB  1
043D8:  BSF    x0A.3
.................... bit_set(LGrupo[32+24],3);    // 56 Luz ventana del hall 
043DA:  MOVLB  0
043DC:  BSF    xE5.3
.................... ////////////////////////////////////////// 
....................  
.................... ActuaLuz(); // Mas que nada para refrescar el contador 
043DE:  RCALL  3EA6
.................... LIMPIARLCD; // Limpiamos la pantalla 
043E0:  MOVLW  3C
043E2:  MOVWF  FF6
043E4:  MOVLW  14
043E6:  MOVWF  FF7
043E8:  RCALL  3E86
....................  
.................... if ((hrs > 12) && (hrs < 24)) EsNoche = false; 
043EA:  MOVF   23,W
043EC:  SUBLW  0C
043EE:  BC    43FC
043F0:  MOVF   23,W
043F2:  SUBLW  17
043F4:  BNC   43FC
043F6:  MOVLB  1
043F8:  BCF    x28.3
.................... else EsNoche = true; 
043FA:  BRA    4400
043FC:  MOVLB  1
043FE:  BSF    x28.3
....................  
.................... /*while(1){  ///////////////////// Impresion de caracteres 
.................... int kkk; 
....................  
.................... for(kkk=0;kkk<255;++kkk){ 
....................    lcd_gotoxy(1,1); 
....................    printf(lcd_putc, "(%03u)%c (%03u)%c (%03u)%c",kkk,kkk,kkk+1,kkk+1,kkk+2,kkk+2); 
....................    lcd_gotoxy(1,2); 
....................    printf(lcd_putc, "(%03u)%c (%03u)%c (%03u)%c",kkk+3,kkk+3,kkk+4,kkk+4,kkk+5,kkk+5); 
....................    lcd_gotoxy(1,3); 
....................    printf(lcd_putc, "(%03u)%c (%03u)%c (%03u)%c",kkk+6,kkk+6,kkk+7,kkk+7,kkk+8,kkk+8); 
....................    lcd_gotoxy(1,4); 
....................    printf(lcd_putc, "(%03u)%c (%03u)%c (%03u)%c",kkk+9,kkk+9,kkk+10,kkk+10,kkk+11,kkk+11); 
.................... delay_ms(2000); 
.................... } 
.................... */ 
.................... }  // Fn inicio 
04400:  MOVLB  0
04402:  GOTO   E3DE (RETURN)
....................  
....................  
.................... void DHT11_init(){ 
.................... output_float(DHT11_pin); 
*
03B56:  BSF    F93.5
.................... delay_ms(1000); 
03B58:  MOVLW  04
03B5A:  MOVLB  1
03B5C:  MOVWF  x70
03B5E:  CLRF   19
03B60:  BTFSC  FF2.7
03B62:  BSF    19.7
03B64:  BCF    FF2.7
03B66:  MOVLW  FA
03B68:  MOVWF  xA8
03B6A:  MOVLB  0
03B6C:  CALL   1456
03B70:  BTFSC  19.7
03B72:  BSF    FF2.7
03B74:  MOVLB  1
03B76:  DECFSZ x70,F
03B78:  BRA    3B5E
.................... } 
03B7A:  MOVLB  0
03B7C:  GOTO   3F78 (RETURN)
....................  
.................... unsigned char get_byte(){ 
*
02AAC:  MOVLB  1
02AAE:  CLRF   xA8
02AB0:  CLRF   xA9
.................... unsigned char s=0; 
.................... unsigned char value=0; 
....................  
.................... for(s=0;s<8;s+=1) 
02AB2:  CLRF   xA8
02AB4:  MOVF   xA8,W
02AB6:  SUBLW  07
02AB8:  BNC   2AE2
.................... { 
.................... value<<=1; 
02ABA:  BCF    FD8.0
02ABC:  RLCF   xA9,F
.................... while(!input(DHT11_pin)); 
02ABE:  BSF    F93.5
02AC0:  BTFSS  F81.5
02AC2:  BRA    2ABE
.................... delay_us(30); 
02AC4:  MOVLW  09
02AC6:  MOVWF  00
02AC8:  DECFSZ 00,F
02ACA:  BRA    2AC8
02ACC:  BRA    2ACE
....................  
.................... if(input(DHT11_pin)) 
02ACE:  BSF    F93.5
02AD0:  BTFSS  F81.5
02AD2:  BRA    2AD6
.................... { 
.................... value|=1; 
02AD4:  BSF    xA9.0
.................... } 
.................... while(input(DHT11_pin)); 
02AD6:  BSF    F93.5
02AD8:  BTFSC  F81.5
02ADA:  BRA    2AD6
.................... } 
02ADC:  MOVLW  01
02ADE:  ADDWF  xA8,F
02AE0:  BRA    2AB4
.................... return value; 
02AE2:  MOVFF  1A9,01
.................... } 
02AE6:  MOVLB  0
02AE8:  GOTO   2B6E (RETURN)
....................  
.................... unsigned char get_data(){ 
02AEC:  MOVLB  1
02AEE:  BCF    xA3.0
02AF0:  CLRF   xA4
02AF2:  CLRF   xA5
.................... short chk=0; 
.................... unsigned char s=0; 
.................... unsigned char check_sum=0; 
....................  
.................... output_high(DHT11_pin); 
02AF4:  BCF    F93.5
02AF6:  BSF    F8A.5
.................... output_low(DHT11_pin); 
02AF8:  BCF    F93.5
02AFA:  BCF    F8A.5
.................... delay_ms(18); 
02AFC:  MOVLW  12
02AFE:  MOVWF  xA8
02B00:  MOVLB  0
02B02:  CALL   1456
.................... output_high(DHT11_pin); 
02B06:  BCF    F93.5
02B08:  BSF    F8A.5
.................... delay_us(26); 
02B0A:  MOVLW  08
02B0C:  MOVWF  00
02B0E:  DECFSZ 00,F
02B10:  BRA    2B0E
02B12:  NOP   
....................  
.................... chk=input(DHT11_pin); 
02B14:  BSF    F93.5
02B16:  MOVLB  1
02B18:  BCF    xA3.0
02B1A:  BTFSC  F81.5
02B1C:  BSF    xA3.0
.................... if(chk) 
02B1E:  BTFSS  xA3.0
02B20:  BRA    2B28
.................... { 
.................... return 1; 
02B22:  MOVLW  01
02B24:  MOVWF  01
02B26:  BRA    2BB8
.................... } 
.................... delay_us(80); 
02B28:  MOVLW  1A
02B2A:  MOVWF  00
02B2C:  DECFSZ 00,F
02B2E:  BRA    2B2C
02B30:  NOP   
....................  
.................... chk=input(DHT11_pin); 
02B32:  BSF    F93.5
02B34:  BCF    xA3.0
02B36:  BTFSC  F81.5
02B38:  BSF    xA3.0
.................... if(!chk) 
02B3A:  BTFSC  xA3.0
02B3C:  BRA    2B44
.................... { 
.................... return 2; 
02B3E:  MOVLW  02
02B40:  MOVWF  01
02B42:  BRA    2BB8
.................... } 
.................... delay_us(80); 
02B44:  MOVLW  1A
02B46:  MOVWF  00
02B48:  DECFSZ 00,F
02B4A:  BRA    2B48
02B4C:  NOP   
....................  
.................... for(s=0;s<=4;s+=1) 
02B4E:  CLRF   xA4
02B50:  MOVF   xA4,W
02B52:  SUBLW  04
02B54:  BNC   2B82
.................... { 
.................... values[s]=get_byte(); 
02B56:  CLRF   03
02B58:  MOVF   xA4,W
02B5A:  ADDLW  1B
02B5C:  MOVWF  01
02B5E:  MOVLW  00
02B60:  ADDWFC 03,F
02B62:  MOVFF  01,1A6
02B66:  MOVFF  03,1A7
02B6A:  MOVLB  0
02B6C:  BRA    2AAC
02B6E:  MOVFF  1A7,FEA
02B72:  MOVFF  1A6,FE9
02B76:  MOVFF  01,FEF
.................... } 
02B7A:  MOVLW  01
02B7C:  MOVLB  1
02B7E:  ADDWF  xA4,F
02B80:  BRA    2B50
....................  
.................... output_high(DHT11_pin); 
02B82:  BCF    F93.5
02B84:  BSF    F8A.5
....................  
.................... for(s=0;s<4;s+=1) 
02B86:  CLRF   xA4
02B88:  MOVF   xA4,W
02B8A:  SUBLW  03
02B8C:  BNC   2BA6
.................... { 
.................... check_sum+=values[s]; 
02B8E:  CLRF   03
02B90:  MOVF   xA4,W
02B92:  ADDLW  1B
02B94:  MOVWF  FE9
02B96:  MOVLW  00
02B98:  ADDWFC 03,W
02B9A:  MOVWF  FEA
02B9C:  MOVF   FEF,W
02B9E:  ADDWF  xA5,F
.................... } 
02BA0:  MOVLW  01
02BA2:  ADDWF  xA4,F
02BA4:  BRA    2B88
....................  
.................... if(check_sum!=values[4]) 
02BA6:  MOVF   1F,W
02BA8:  SUBWF  xA5,W
02BAA:  BZ    2BB4
.................... { 
.................... return 3; 
02BAC:  MOVLW  03
02BAE:  MOVWF  01
02BB0:  BRA    2BB8
.................... } 
.................... else 
02BB2:  BRA    2BB8
.................... { 
.................... return 0; 
02BB4:  MOVLW  00
02BB6:  MOVWF  01
.................... } 
.................... } 
02BB8:  MOVLB  0
02BBA:  GOTO   2BC2 (RETURN)
....................  
....................  
.................... ////////////////////////// INTERRUPCIONES ////////////////////////////// 
.................... #int_RDA 
.................... void RDA_isr(){ 
.................... int ii; 
.................... if (kbhit()){ 
*
01D8A:  BTFSS  F9E.5
01D8C:  BRA    1E38
.................... Comando[i]=getc(); 
01D8E:  CLRF   03
01D90:  MOVF   3A,W
01D92:  ADDLW  36
01D94:  MOVWF  FE9
01D96:  MOVLW  00
01D98:  ADDWFC 03,W
01D9A:  MOVWF  FEA
01D9C:  MOVFF  FEA,1A1
01DA0:  MOVFF  FE9,1A0
01DA4:  GOTO   143E
01DA8:  MOVFF  1A1,FEA
01DAC:  MOVFF  1A0,FE9
01DB0:  MOVFF  01,FEF
.................... /*for (ii=0;ii<22;++ii){ 
.................... RawBus[23-ii] = RawBus[22-ii]; 
.................... }*/ 
.................... RawBus[20]=RawBus[19]; 
01DB4:  MOVFF  167,168
.................... RawBus[19]=RawBus[18]; 
01DB8:  MOVFF  166,167
.................... RawBus[18]=RawBus[17]; 
01DBC:  MOVFF  165,166
.................... RawBus[17]=RawBus[16]; 
01DC0:  MOVFF  164,165
.................... RawBus[16]=RawBus[15]; 
01DC4:  MOVFF  163,164
.................... RawBus[15]=RawBus[14]; 
01DC8:  MOVFF  162,163
.................... RawBus[14]=RawBus[13]; 
01DCC:  MOVFF  161,162
.................... RawBus[13]=RawBus[12]; 
01DD0:  MOVFF  160,161
.................... RawBus[12]=RawBus[11]; 
01DD4:  MOVFF  15F,160
.................... RawBus[11]=RawBus[10]; 
01DD8:  MOVFF  15E,15F
.................... RawBus[10]=RawBus[9]; 
01DDC:  MOVFF  15D,15E
.................... RawBus[9]=RawBus[8]; 
01DE0:  MOVFF  15C,15D
.................... RawBus[8]=RawBus[7]; 
01DE4:  MOVFF  15B,15C
.................... RawBus[7]=RawBus[6]; 
01DE8:  MOVFF  15A,15B
.................... RawBus[6]=RawBus[5]; 
01DEC:  MOVFF  159,15A
.................... RawBus[5]=RawBus[4]; 
01DF0:  MOVFF  158,159
.................... RawBus[4]=RawBus[3]; 
01DF4:  MOVFF  157,158
.................... RawBus[3]=RawBus[2]; 
01DF8:  MOVFF  156,157
.................... RawBus[2]=RawBus[1]; 
01DFC:  MOVFF  155,156
.................... RawBus[1]=RawBus[0]; 
01E00:  MOVFF  154,155
.................... RawBus[0]=Comando[i]; 
01E04:  CLRF   03
01E06:  MOVF   3A,W
01E08:  ADDLW  36
01E0A:  MOVWF  FE9
01E0C:  MOVLW  00
01E0E:  ADDWFC 03,W
01E10:  MOVWF  FEA
01E12:  MOVFF  FEF,154
.................... if (Comando[i] == 250) i=0; 
01E16:  CLRF   03
01E18:  MOVF   3A,W
01E1A:  ADDLW  36
01E1C:  MOVWF  FE9
01E1E:  MOVLW  00
01E20:  ADDWFC 03,W
01E22:  MOVWF  FEA
01E24:  MOVF   FEF,W
01E26:  SUBLW  FA
01E28:  BNZ   1E2E
01E2A:  CLRF   3A
.................... else ++i; 
01E2C:  BRA    1E30
01E2E:  INCF   3A,F
.................... if (i==3) Comunica(); 
01E30:  MOVF   3A,W
01E32:  SUBLW  03
01E34:  BNZ   1E38
01E36:  BRA    1A80
.................... } 
.................... } 
....................  
01E38:  BCF    F9E.5
01E3A:  GOTO   006C
.................... #int_TIMER1 // Entramos aqui cada 524ms //////////////////////////// 
.................... void  TIMER1_isr(void) { //Función de interrupción por desbordamiento TMR1   
.................... set_timer1(0); //carga del TMR1 
*
02F72:  CLRF   FCF
02F74:  CLRF   FCE
.................... restart_wdt(); 
02F76:  CLRWDT
.................... Tiempo(); // Tomo el tiempo 
02F78:  GOTO   1F06
.................... //DosVeinte(); // Tomo los valores del ADC 
.................... Automaticos(); 
02F7C:  GOTO   2448
.................... //AAlarma(); 
.................... if ((bit_test(tiempo1,0) == 0) && (bit_test(tiempo1,3) == 0)) Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
02F80:  BTFSC  49.0
02F82:  BRA    2F8A
02F84:  BTFSC  49.3
02F86:  BRA    2F8A
02F88:  BRA    2BBE
.................... ++Tiempo1; 
02F8A:  INCF   49,F
.................... if (TpoSeguro != 0) --TpoSeguro; 
02F8C:  MOVLB  1
02F8E:  MOVF   x14,F
02F90:  BTFSS  FD8.2
02F92:  DECF   x14,F
.................... ///////PANICO por presion de teclas //////////// 
.................... if (bit_test(tiempo1,0) == 0) { 
02F94:  BTFSC  49.0
02F96:  BRA    2FD6
.................... if (CuentaPanico > 0) --CuentaPanico; 
02F98:  MOVF   x51,F
02F9A:  BTFSS  FD8.2
02F9C:  DECF   x51,F
.................... if (CuentaPanico > 20){ //PANICO 
02F9E:  MOVF   x51,W
02FA0:  SUBLW  14
02FA2:  BC    2FD6
.................... EstadoAl = 7; 
02FA4:  MOVLW  07
02FA6:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
02FA8:  MOVF   FF2,W
02FAA:  MOVWF  00
02FAC:  BCF    FF2.7
02FAE:  CLRF   FAA
02FB0:  MOVLW  02
02FB2:  MOVWF  FA9
02FB4:  MOVFF  46,FA8
02FB8:  BCF    FA6.6
02FBA:  BCF    FA6.7
02FBC:  BSF    FA6.2
02FBE:  MOVLB  F
02FC0:  MOVLW  55
02FC2:  MOVWF  FA7
02FC4:  MOVLW  AA
02FC6:  MOVWF  FA7
02FC8:  BSF    FA6.1
02FCA:  BTFSC  FA6.1
02FCC:  BRA    2FCA
02FCE:  BCF    FA6.2
02FD0:  MOVF   00,W
02FD2:  IORWF  FF2,F
02FD4:  MOVLB  1
.................... } 
.................... } // Cuenta panico 
.................... } //////////////////////////////// 524 ms ////////////////////////// 
....................  
....................  
....................  
02FD6:  BCF    F9E.0
02FD8:  MOVLB  0
02FDA:  GOTO   006C
.................... void Comunica(){ // esta funcion ¿si escribe la EEPROM? 
.................... restart_wdt(); 
*
01A80:  CLRWDT
.................... i=0; 
01A82:  CLRF   3A
.................... if (( (Comando[0]) + (Comando[1]) ) == Comando[2]){ // Prueba de checksum 
01A84:  MOVF   37,W
01A86:  ADDWF  36,W
01A88:  SUBWF  38,W
01A8A:  BTFSS  FD8.2
01A8C:  BRA    1D86
....................  
.................... /////// Arreglo de los valores historicos del BUS /////// 
.................... UltBus[12] = UltBus[10]; 
01A8E:  MOVFF  14E,150
.................... UltBus[11] = UltBus[9]; 
01A92:  MOVFF  14D,14F
.................... UltBus[10] = UltBus[8]; 
01A96:  MOVFF  14C,14E
.................... UltBus[9]  = UltBus[7]; 
01A9A:  MOVFF  14B,14D
.................... UltBus[8]  = UltBus[6]; 
01A9E:  MOVFF  14A,14C
.................... UltBus[7]  = UltBus[5]; 
01AA2:  MOVFF  149,14B
.................... UltBus[6]  = UltBus[4]; 
01AA6:  MOVFF  148,14A
.................... UltBus[5]  = UltBus[3]; 
01AAA:  MOVFF  147,149
.................... UltBus[4]  = UltBus[2]; 
01AAE:  MOVFF  146,148
.................... UltBus[3]  = UltBus[1]; 
01AB2:  MOVFF  145,147
.................... UltBus[2]  = Comando[1]; 
01AB6:  MOVFF  37,146
.................... UltBus[1]  = Comando[0]; 
01ABA:  MOVFF  36,145
.................... /////////////////////////////////////////////////////// 
....................  
.................... if ((Comando[0] == 29) && (Comando[1] == 29)){ //PANICO 
01ABE:  MOVF   36,W
01AC0:  SUBLW  1D
01AC2:  BNZ   1AFC
01AC4:  MOVF   37,W
01AC6:  SUBLW  1D
01AC8:  BNZ   1AFC
.................... EstadoAl = 7; 
01ACA:  MOVLW  07
01ACC:  MOVWF  46
.................... write_eeprom(EstAlarma,EstadoAl); // Guardo en ram el estado de la alarma 
01ACE:  MOVF   FF2,W
01AD0:  MOVWF  00
01AD2:  BCF    FF2.7
01AD4:  CLRF   FAA
01AD6:  MOVLW  02
01AD8:  MOVWF  FA9
01ADA:  MOVFF  46,FA8
01ADE:  BCF    FA6.6
01AE0:  BCF    FA6.7
01AE2:  BSF    FA6.2
01AE4:  MOVLB  F
01AE6:  MOVLW  55
01AE8:  MOVWF  FA7
01AEA:  MOVLW  AA
01AEC:  MOVWF  FA7
01AEE:  BSF    FA6.1
01AF0:  BTFSC  FA6.1
01AF2:  BRA    1AF0
01AF4:  BCF    FA6.2
01AF6:  MOVF   00,W
01AF8:  IORWF  FF2,F
01AFA:  MOVLB  0
.................... } 
.................... if (Comando[0] == 165) SolAux = Comando[1]; 
01AFC:  MOVF   36,W
01AFE:  SUBLW  A5
01B00:  BNZ   1B06
01B02:  MOVFF  37,45
.................... if (Comando[0] == 163) Vbata = Comando[1] - 20; // Le resto 2,5v que es el error medido el 7/5/2016 
01B06:  MOVF   36,W
01B08:  SUBLW  A3
01B0A:  BNZ   1B16
01B0C:  MOVLW  14
01B0E:  SUBWF  37,W
01B10:  MOVLB  1
01B12:  MOVWF  x24
01B14:  MOVLB  0
.................... if (Comando[0] == 160) TempOut = (Comando[1]-10); 
01B16:  MOVF   36,W
01B18:  SUBLW  A0
01B1A:  BNZ   1B22
01B1C:  MOVLW  0A
01B1E:  SUBWF  37,W
01B20:  MOVWF  43
....................  
.................... if (SolAux < 101) { // Promediamos para descartar cambios violentos y rechazar valores alejados irreales 
01B22:  MOVF   45,W
01B24:  SUBLW  64
01B26:  BNC   1B34
....................  
.................... //if (SolAux > Sol) ++Sol; 
.................... //if (SolAux < Sol) --Sol; 
....................  
.................... //SolAux = (SolAux + Sol) / 2; 
.................... //SolAux = (SolAux + Sol) / 2; 
.................... Sol = (SolAux + Sol) / 2; 
01B28:  MOVF   44,W
01B2A:  ADDWF  45,W
01B2C:  MOVWF  00
01B2E:  BCF    FD8.0
01B30:  RRCF   00,W
01B32:  MOVWF  44
.................... //Sol = SolAux; 
....................  
.................... } 
....................  
.................... if (Comando[0] == 184) CorteLuz(); 
01B34:  MOVF   36,W
01B36:  SUBLW  B8
01B38:  BNZ   1B3C
01B3A:  BRA    162E
....................  
.................... if ((Comando[0] < 95) && (Comando[0] > 31)) { // Comando para alguna luz 
01B3C:  MOVF   36,W
01B3E:  SUBLW  5E
01B40:  BTFSS  FD8.0
01B42:  BRA    1D86
01B44:  MOVF   36,W
01B46:  SUBLW  1F
01B48:  BTFSC  FD8.0
01B4A:  BRA    1D86
....................  
.................... /////// Arreglo de los valores historicos de Entradas /////// 
.................... int FFor; 
.................... for (FFor=24;FFor>=3;FFor--) UltIn[FFor] = UltIn[FFor - 2]; 
01B4C:  MOVLW  18
01B4E:  MOVLB  1
01B50:  MOVWF  x9E
01B52:  MOVF   x9E,W
01B54:  SUBLW  02
01B56:  BC    1B8C
01B58:  CLRF   03
01B5A:  MOVF   x9E,W
01B5C:  ADDLW  2B
01B5E:  MOVWF  01
01B60:  MOVLW  01
01B62:  ADDWFC 03,F
01B64:  MOVFF  03,1A0
01B68:  MOVLW  02
01B6A:  SUBWF  x9E,W
01B6C:  CLRF   03
01B6E:  ADDLW  2B
01B70:  MOVWF  FE9
01B72:  MOVLW  01
01B74:  ADDWFC 03,W
01B76:  MOVWF  FEA
01B78:  MOVFF  FEF,1A1
01B7C:  MOVFF  1A0,FEA
01B80:  MOVFF  01,FE9
01B84:  MOVFF  1A1,FEF
01B88:  DECF   x9E,F
01B8A:  BRA    1B52
.................... if (Comando[1] == 80) UltIn[2] = 0; 
01B8C:  MOVF   37,W
01B8E:  SUBLW  50
01B90:  BTFSC  FD8.2
01B92:  CLRF   x2D
.................... if (Comando[1] == 90) UltIn[2] = 1; 
01B94:  MOVF   37,W
01B96:  SUBLW  5A
01B98:  BNZ   1B9E
01B9A:  MOVLW  01
01B9C:  MOVWF  x2D
.................... UltIn[1] = Comando[0] - 32; 
01B9E:  MOVLW  20
01BA0:  SUBWF  36,W
01BA2:  MOVWF  x2C
.................... /////////////////////////////////////////////////////// 
....................  
.................... if (Comando[1] < 40) { // Lo que llego es una intensidad ya que es menor que 27 
01BA4:  MOVF   37,W
01BA6:  SUBLW  27
01BA8:  BNC   1BF8
....................    if (IntLuz[Comando[0]] > 99) { 
01BAA:  CLRF   03
01BAC:  MOVF   36,W
01BAE:  ADDLW  4A
01BB0:  MOVWF  FE9
01BB2:  MOVLW  00
01BB4:  ADDWFC 03,W
01BB6:  MOVWF  FEA
01BB8:  MOVF   FEF,W
01BBA:  SUBLW  63
01BBC:  BC    1BD2
....................    IntLuz[Comando[0]] = Comando[1] + 100; // Le pongo la intensidad sin cambiarle el estado estando prendida 
01BBE:  CLRF   03
01BC0:  MOVF   36,W
01BC2:  ADDLW  4A
01BC4:  MOVWF  FE9
01BC6:  MOVLW  00
01BC8:  ADDWFC 03,W
01BCA:  MOVWF  FEA
01BCC:  MOVLW  64
01BCE:  ADDWF  37,W
01BD0:  MOVWF  FEF
.................... //   write_eeprom(Comando[0],IntLuz[Comando[0]]); 
.................... //   delay_ms(3); 
....................    } 
....................    if (IntLuz[Comando[0]] < 99) { 
01BD2:  CLRF   03
01BD4:  MOVF   36,W
01BD6:  ADDLW  4A
01BD8:  MOVWF  FE9
01BDA:  MOVLW  00
01BDC:  ADDWFC 03,W
01BDE:  MOVWF  FEA
01BE0:  MOVF   FEF,W
01BE2:  SUBLW  62
01BE4:  BNC   1BF8
....................    IntLuz[Comando[0]] = Comando[1]; // Y tambien le pongo la intensidad sin cambiarle el estado estando apagada 
01BE6:  CLRF   03
01BE8:  MOVF   36,W
01BEA:  ADDLW  4A
01BEC:  MOVWF  FE9
01BEE:  MOVLW  00
01BF0:  ADDWFC 03,W
01BF2:  MOVWF  FEA
01BF4:  MOVFF  37,FEF
.................... //   write_eeprom(Comando[0],IntLuz[Comando[0]]); 
.................... //   delay_ms(3); 
....................    } 
.................... } // si lo que llegó es una intensidad 
.................... if (Comando[1] == 80) { // Lo que llego es un apagado 
01BF8:  MOVF   37,W
01BFA:  SUBLW  50
01BFC:  BNZ   1C40
....................    if (IntLuz[Comando[0]] > 99) IntLuz[Comando[0]] = IntLuz[Comando[0]] - 100; // Llego apagado y como estaba prendida la apago (-100) 
01BFE:  CLRF   03
01C00:  MOVF   36,W
01C02:  ADDLW  4A
01C04:  MOVWF  FE9
01C06:  MOVLW  00
01C08:  ADDWFC 03,W
01C0A:  MOVWF  FEA
01C0C:  MOVF   FEF,W
01C0E:  SUBLW  63
01C10:  BC    1C3E
01C12:  CLRF   03
01C14:  MOVF   36,W
01C16:  ADDLW  4A
01C18:  MOVWF  01
01C1A:  MOVLW  00
01C1C:  ADDWFC 03,F
01C1E:  MOVFF  03,1A0
01C22:  CLRF   03
01C24:  MOVF   36,W
01C26:  ADDLW  4A
01C28:  MOVWF  FE9
01C2A:  MOVLW  00
01C2C:  ADDWFC 03,W
01C2E:  MOVWF  FEA
01C30:  MOVLW  64
01C32:  SUBWF  FEF,W
01C34:  MOVFF  1A0,FEA
01C38:  MOVFF  01,FE9
01C3C:  MOVWF  FEF
.................... //   write_eeprom(Comando[0],IntLuz[Comando[0]]); 
.................... //   delay_ms(3); 
....................    ++CuentaPanico; // se incrementa el panico 
01C3E:  INCF   x51,F
.................... //   if (CuentaLuz > 0) --CuentaLuz; 
.................... } // si lo que llegó es un apagado 
.................... if (Comando[1] > 81) { // Lo que llego es un estado de encendido (puede ser cualquiera) 
01C40:  MOVF   37,W
01C42:  SUBLW  51
01C44:  BC    1C88
....................    if (IntLuz[Comando[0]] < 99) IntLuz[Comando[0]] = IntLuz[Comando[0]] + 100; // Le pongo la intensidad sin cambiarle el estado estando prendida 
01C46:  CLRF   03
01C48:  MOVF   36,W
01C4A:  ADDLW  4A
01C4C:  MOVWF  FE9
01C4E:  MOVLW  00
01C50:  ADDWFC 03,W
01C52:  MOVWF  FEA
01C54:  MOVF   FEF,W
01C56:  SUBLW  62
01C58:  BNC   1C86
01C5A:  CLRF   03
01C5C:  MOVF   36,W
01C5E:  ADDLW  4A
01C60:  MOVWF  01
01C62:  MOVLW  00
01C64:  ADDWFC 03,F
01C66:  MOVFF  03,1A0
01C6A:  CLRF   03
01C6C:  MOVF   36,W
01C6E:  ADDLW  4A
01C70:  MOVWF  FE9
01C72:  MOVLW  00
01C74:  ADDWFC 03,W
01C76:  MOVWF  FEA
01C78:  MOVLW  64
01C7A:  ADDWF  FEF,W
01C7C:  MOVFF  1A0,FEA
01C80:  MOVFF  01,FE9
01C84:  MOVWF  FEF
.................... //   write_eeprom(Comando[0],IntLuz[Comando[0]]); 
.................... //   delay_ms(3); 
....................    ++CuentaPanico; // se incrementa el panico 
01C86:  INCF   x51,F
.................... //   ++CuentaLuz; 
.................... } // si lo que llegó es un encendido 
....................  
.................... CuentaSens = 0; 
01C88:  CLRF   x53
.................... if (IntLuz[SSPasCuar] > 99) { 
01C8A:  MOVF   7C,W
01C8C:  SUBLW  63
01C8E:  BC    1C96
.................... SPasCuar = True; 
01C90:  BSF    35.1
.................... ++CuentaSens; 
01C92:  INCF   x53,F
.................... } 
.................... else SPasCuar = False; 
01C94:  BRA    1C98
01C96:  BCF    35.1
....................  
.................... if (IntLuz[SSEstar] > 99) { 
01C98:  MOVLB  0
01C9A:  MOVF   x86,W
01C9C:  SUBLW  63
01C9E:  BC    1CAA
.................... SEstar = True; 
01CA0:  BSF    35.2
.................... ++CuentaSens; 
01CA2:  MOVLB  1
01CA4:  INCF   x53,F
.................... } 
.................... else SEstar = False; 
01CA6:  BRA    1CAC
01CA8:  MOVLB  0
01CAA:  BCF    35.2
....................  
.................... if (IntLuz[SSHall] > 99) { 
01CAC:  MOVLB  0
01CAE:  MOVF   x85,W
01CB0:  SUBLW  63
01CB2:  BC    1CBE
.................... SHall = True; 
01CB4:  BSF    35.3
.................... ++CuentaSens; 
01CB6:  MOVLB  1
01CB8:  INCF   x53,F
.................... } 
.................... else SHall = False; 
01CBA:  BRA    1CC0
01CBC:  MOVLB  0
01CBE:  BCF    35.3
....................  
.................... if (IntLuz[SSLiving] > 99) { 
01CC0:  MOVLB  0
01CC2:  MOVF   x88,W
01CC4:  SUBLW  63
01CC6:  BC    1CD2
.................... SLiving = True; 
01CC8:  BSF    35.4
.................... ++CuentaSens; 
01CCA:  MOVLB  1
01CCC:  INCF   x53,F
.................... } 
.................... else SLiving = False; 
01CCE:  BRA    1CD4
01CD0:  MOVLB  0
01CD2:  BCF    35.4
.................... if (IntLuz[SSCocina] > 99) { 
01CD4:  MOVLB  0
01CD6:  MOVF   x87,W
01CD8:  SUBLW  63
01CDA:  BC    1CE6
.................... SCocina = True; 
01CDC:  BSF    35.5
.................... ++CuentaSens; 
01CDE:  MOVLB  1
01CE0:  INCF   x53,F
.................... } 
.................... else SCocina = False; 
01CE2:  BRA    1CE8
01CE4:  MOVLB  0
01CE6:  BCF    35.5
....................  
.................... if (IntLuz[SSPasEnt] > 99) { 
01CE8:  MOVLB  0
01CEA:  MOVF   x93,W
01CEC:  SUBLW  63
01CEE:  BC    1CFA
.................... SPasEnt = True; 
01CF0:  BSF    35.6
.................... ++CuentaSens; 
01CF2:  MOVLB  1
01CF4:  INCF   x53,F
.................... } 
.................... else SPasEnt = False; 
01CF6:  BRA    1CFC
01CF8:  MOVLB  0
01CFA:  BCF    35.6
....................  
.................... if (IntLuz[SSGaleria] > 99) { 
01CFC:  MOVLB  0
01CFE:  MOVF   xA5,W
01D00:  SUBLW  63
01D02:  BC    1D0E
.................... SGaleria = True; 
01D04:  BSF    35.7
.................... ++CuentaSens; 
01D06:  MOVLB  1
01D08:  INCF   x53,F
.................... } 
.................... else SGaleria = False; 
01D0A:  BRA    1D10
01D0C:  MOVLB  0
01D0E:  BCF    35.7
....................  
.................... if (IntLuz[SSParrilla] > 99) { 
01D10:  MOVLB  0
01D12:  MOVF   xA6,W
01D14:  SUBLW  63
01D16:  BC    1D20
.................... SParrilla = True; 
01D18:  MOVLB  1
01D1A:  BSF    x28.0
.................... ++CuentaSens; 
01D1C:  INCF   x53,F
.................... } 
.................... else SParrilla = False; 
01D1E:  BRA    1D24
01D20:  MOVLB  1
01D22:  BCF    x28.0
....................  
.................... if (IntLuz[SSGarage] > 99) { 
01D24:  MOVLB  0
01D26:  MOVF   x92,W
01D28:  SUBLW  63
01D2A:  BC    1D34
.................... SGarage = True; 
01D2C:  MOVLB  1
01D2E:  BSF    x28.1
.................... ++CuentaSens; 
01D30:  INCF   x53,F
.................... } 
.................... else SGarage = False; 
01D32:  BRA    1D38
01D34:  MOVLB  1
01D36:  BCF    x28.1
....................  
.................... write_eeprom(Comando[0],IntLuz[Comando[0]]); 
01D38:  CLRF   03
01D3A:  MOVF   36,W
01D3C:  ADDLW  4A
01D3E:  MOVWF  FE9
01D40:  MOVLW  00
01D42:  ADDWFC 03,W
01D44:  MOVWF  FEA
01D46:  MOVFF  FEF,19F
01D4A:  MOVF   FF2,W
01D4C:  MOVWF  00
01D4E:  BCF    FF2.7
01D50:  CLRF   FAA
01D52:  MOVFF  36,FA9
01D56:  MOVFF  19F,FA8
01D5A:  BCF    FA6.6
01D5C:  BCF    FA6.7
01D5E:  BSF    FA6.2
01D60:  MOVLB  F
01D62:  MOVLW  55
01D64:  MOVWF  FA7
01D66:  MOVLW  AA
01D68:  MOVWF  FA7
01D6A:  BSF    FA6.1
01D6C:  BTFSC  FA6.1
01D6E:  BRA    1D6C
01D70:  BCF    FA6.2
01D72:  MOVF   00,W
01D74:  IORWF  FF2,F
.................... delay_ms(5); 
01D76:  MOVLW  05
01D78:  MOVLB  1
01D7A:  MOVWF  xA8
01D7C:  MOVLB  0
01D7E:  CALL   1456
....................  
.................... SensoresLuz(); // Analiza los sensores y banderas para prender luces de servicio 
01D82:  BRA    16F8
.................... SensoresAl();  // Analiza los sensores y banderas para activar alarma 
01D84:  BRA    190A
.................... }// If comando para alguna luz 
.................... } // if checksum 
.................... } //fn 
01D86:  GOTO   1E38 (RETURN)
....................  
....................  
.................... void CorteLuz(){   // Se está reiniciando alguno de los modulos (falla y WD o corte de luz) 
....................  
.................... disable_interrupts(int_rda); // Apagamos la interrupcion para no recibir la basura del reinicio 
*
0162E:  BCF    F9D.5
.................... int kk; 
.................... for (kk=32;kk<94;kk++) { 
01630:  MOVLW  20
01632:  MOVLB  1
01634:  MOVWF  x9F
01636:  MOVF   x9F,W
01638:  SUBLW  5D
0163A:  BNC   16F0
.................... restart_wdt(); 
0163C:  CLRWDT
.................... delay_ms(50); 
0163E:  MOVLW  32
01640:  MOVWF  xA8
01642:  MOVLB  0
01644:  RCALL  1456
.................... restart_wdt(); 
01646:  CLRWDT
.................... delay_ms(50); 
01648:  MOVLW  32
0164A:  MOVLB  1
0164C:  MOVWF  xA8
0164E:  MOVLB  0
01650:  RCALL  1456
.................... restart_wdt(); 
01652:  CLRWDT
.................... delay_ms(50); 
01654:  MOVLW  32
01656:  MOVLB  1
01658:  MOVWF  xA8
0165A:  MOVLB  0
0165C:  RCALL  1456
.................... restart_wdt(); 
0165E:  CLRWDT
.................... delay_ms(50); 
01660:  MOVLW  32
01662:  MOVLB  1
01664:  MOVWF  xA8
01666:  MOVLB  0
01668:  RCALL  1456
.................... lcd_gotoxy(1,4); 
0166A:  MOVLW  01
0166C:  MOVLB  1
0166E:  MOVWF  xA0
01670:  MOVLW  04
01672:  MOVWF  xA1
01674:  MOVLB  0
01676:  RCALL  156C
.................... //printf(lcd_putc, " Cargando luz N: %02u  ",(kk-32)); 
....................   if (IntLuz[kk] > 99){ // La luz está prendida 
01678:  CLRF   03
0167A:  MOVLB  1
0167C:  MOVF   x9F,W
0167E:  ADDLW  4A
01680:  MOVWF  FE9
01682:  MOVLW  00
01684:  ADDWFC 03,W
01686:  MOVWF  FEA
01688:  MOVF   FEF,W
0168A:  SUBLW  63
0168C:  BC    16BE
.................... //      printf("%c%c%c%c", 250, kk, IntLuz[kk]-100, (IntLuz[kk]-100)+kk); // Mando la intensidad 
....................       BusData(kk,IntLuz[kk]-100); 
0168E:  CLRF   03
01690:  MOVF   x9F,W
01692:  ADDLW  4A
01694:  MOVWF  FE9
01696:  MOVLW  00
01698:  ADDWFC 03,W
0169A:  MOVWF  FEA
0169C:  MOVLW  64
0169E:  SUBWF  FEF,W
016A0:  MOVWF  xA0
016A2:  MOVFF  19F,1A3
016A6:  MOVWF  xA4
016A8:  MOVLB  0
016AA:  RCALL  15F6
.................... //      delay_ms(10); 
.................... //      printf("%c%c%c%c", 250, kk, 90, 90+kk); // Mando el encendido 
....................       BusData(kk,90); 
016AC:  MOVFF  19F,1A3
016B0:  MOVLW  5A
016B2:  MOVLB  1
016B4:  MOVWF  xA4
016B6:  MOVLB  0
016B8:  RCALL  15F6
.................... //      delay_ms(10); 
....................     } else { // si esta apagada 
016BA:  BRA    16EA
016BC:  MOVLB  1
.................... //      printf("%c%c%c%c", 250, kk, 80, 80+kk); // Mando el apagado 
....................       BusData(kk,80); 
016BE:  MOVFF  19F,1A3
016C2:  MOVLW  50
016C4:  MOVWF  xA4
016C6:  MOVLB  0
016C8:  RCALL  15F6
.................... //      delay_ms(10); 
.................... //      printf("%c%c%c%c", 250, kk, IntLuz[kk], IntLuz[kk]+kk); // Mando la intensidad 
....................       BusData(kk,IntLuz[kk]); 
016CA:  CLRF   03
016CC:  MOVLB  1
016CE:  MOVF   x9F,W
016D0:  ADDLW  4A
016D2:  MOVWF  FE9
016D4:  MOVLW  00
016D6:  ADDWFC 03,W
016D8:  MOVWF  FEA
016DA:  MOVFF  FEF,1A0
016DE:  MOVFF  19F,1A3
016E2:  MOVFF  1A0,1A4
016E6:  MOVLB  0
016E8:  RCALL  15F6
.................... //      delay_ms(10); 
....................     } // else (esta apagada) 
.................... } // for... 
016EA:  MOVLB  1
016EC:  INCF   x9F,F
016EE:  BRA    1636
.................... enable_interrupts(int_rda); // Volvemos a habilitar la interrupcion para seguir con ejecucion normal 
016F0:  BSF    F9D.5
.................... } 
016F2:  MOVLB  0
016F4:  GOTO   1B3C (RETURN)
....................  
....................  
.................... void Teclado(){ 
....................  
.................... restart_wdt(); 
*
06994:  CLRWDT
.................... if (input(ARRIBA)==1 && input(ABAJO)==1 && input(OOKK)==1 && input(CANCEL)==1) Rebote = false; // Soltamos las teclas 
06996:  BSF    F93.3
06998:  BTFSS  F81.3
0699A:  BRA    69AE
0699C:  BSF    F93.2
0699E:  BTFSS  F81.2
069A0:  BRA    69AE
069A2:  BSF    F93.1
069A4:  BTFSS  F81.1
069A6:  BRA    69AE
069A8:  BSF    F93.0
069AA:  BTFSC  F81.0
069AC:  BCF    35.0
....................  
.................... if (Rebote == false){ // Tomamos el comando ya que el antirebote nos dice que esta ok 
069AE:  BTFSC  35.0
069B0:  BRA    6DAA
....................  
.................... switch (Menu){ 
069B2:  MOVF   28,W
069B4:  ADDLW  BE
069B6:  BTFSC  FD8.0
069B8:  BRA    6DAA
069BA:  ADDLW  42
069BC:  GOTO   6DAE
....................  
.................... ////////////////////////////// Comienza Menu basico /////////////////////////// 
....................    case 0: 
....................    if (input(ARRIBA)==0 || input(ABAJO)==0 || input(OOKK)==0){ // || input(CANCEL)==0){ 
069C0:  BSF    F93.3
069C2:  BTFSS  F81.3
069C4:  BRA    69D2
069C6:  BSF    F93.2
069C8:  BTFSS  F81.2
069CA:  BRA    69D2
069CC:  BSF    F93.1
069CE:  BTFSC  F81.1
069D0:  BRA    69D8
....................    Rebote = True; 
069D2:  BSF    35.0
....................    Menu = 1; 
069D4:  MOVLW  01
069D6:  MOVWF  28
....................    }  
....................    ZzZ(); 
069D8:  GOTO   4416
....................    break; 
069DC:  BRA    6DAA
....................     
....................    case 1:  // Resumen ppal 
....................    if (input(OOKK)==0){ 
069DE:  BSF    F93.1
069E0:  BTFSC  F81.1
069E2:  BRA    69EA
....................    Rebote = True; 
069E4:  BSF    35.0
....................    Menu = 2; 
069E6:  MOVLW  02
069E8:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
069EA:  BSF    F93.0
069EC:  BTFSC  F81.0
069EE:  BRA    69F4
....................    Menu = 0; 
069F0:  CLRF   28
....................    Rebote = True; 
069F2:  BSF    35.0
....................    } 
....................    if (input(ARRIBA)==0){ 
069F4:  BSF    F93.3
069F6:  BTFSC  F81.3
069F8:  BRA    6A00
....................    Rebote = True; 
069FA:  BSF    35.0
....................    VerTemp(); 
069FC:  GOTO   4772
....................    } 
....................    if (input(ABAJO)==0){ 
06A00:  BSF    F93.2
06A02:  BTFSC  F81.2
06A04:  BRA    6A0C
....................    Rebote = True; 
06A06:  BSF    35.0
....................    VerTens(); 
06A08:  GOTO   4DF0
....................    } 
....................    break; 
06A0C:  BRA    6DAA
....................     
....................    case 2:  // Menu - Activar alarma 
....................    if (input(ARRIBA)==0){ 
06A0E:  BSF    F93.3
06A10:  BTFSC  F81.3
....................    } 
....................    if (input(ABAJO)==0){ 
06A12:  BSF    F93.2
06A14:  BTFSC  F81.2
06A16:  BRA    6A1E
....................    Rebote = True; 
06A18:  BSF    35.0
....................    Menu = 3; 
06A1A:  MOVLW  03
06A1C:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06A1E:  BSF    F93.1
06A20:  BTFSC  F81.1
06A22:  BRA    6A2A
....................    Rebote = True; 
06A24:  BSF    35.0
....................    Menu = 21; 
06A26:  MOVLW  15
06A28:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06A2A:  BSF    F93.0
06A2C:  BTFSC  F81.0
06A2E:  BRA    6A36
....................    Rebote = True; 
06A30:  BSF    35.0
....................    Menu = 1; 
06A32:  MOVLW  01
06A34:  MOVWF  28
....................    } 
....................    break; 
06A36:  BRA    6DAA
....................     
....................    case 3: // Menu - Luces 
....................    if (input(ARRIBA)==0){ 
06A38:  BSF    F93.3
06A3A:  BTFSC  F81.3
06A3C:  BRA    6A44
....................    Rebote = True; 
06A3E:  BSF    35.0
....................    Menu = 2; 
06A40:  MOVLW  02
06A42:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06A44:  BSF    F93.2
06A46:  BTFSC  F81.2
06A48:  BRA    6A50
....................    Rebote = True; 
06A4A:  BSF    35.0
....................    Menu = 4; 
06A4C:  MOVLW  04
06A4E:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06A50:  BSF    F93.1
06A52:  BTFSC  F81.1
06A54:  BRA    6A5C
....................    Rebote = True; 
06A56:  BSF    35.0
....................    Menu = 31; 
06A58:  MOVLW  1F
06A5A:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06A5C:  BSF    F93.0
06A5E:  BTFSC  F81.0
06A60:  BRA    6A68
....................    Rebote = True; 
06A62:  BSF    35.0
....................    Menu = 1; 
06A64:  MOVLW  01
06A66:  MOVWF  28
....................    } 
....................    break; 
06A68:  BRA    6DAA
....................     
....................    case 4: // Menu - Casandra 
....................    if (input(ARRIBA)==0){ 
06A6A:  BSF    F93.3
06A6C:  BTFSC  F81.3
06A6E:  BRA    6A76
....................    Rebote = True; 
06A70:  BSF    35.0
....................    Menu = 3; 
06A72:  MOVLW  03
06A74:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06A76:  BSF    F93.2
06A78:  BTFSC  F81.2
06A7A:  BRA    6A82
....................    Rebote = True; 
06A7C:  BSF    35.0
....................    Menu = 5; 
06A7E:  MOVLW  05
06A80:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06A82:  BSF    F93.1
06A84:  BTFSC  F81.1
06A86:  BRA    6A8E
....................    Rebote = True; 
06A88:  BSF    35.0
....................    Menu = 41; 
06A8A:  MOVLW  29
06A8C:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06A8E:  BSF    F93.0
06A90:  BTFSC  F81.0
06A92:  BRA    6A9A
....................    Rebote = True; 
06A94:  BSF    35.0
....................    Menu = 1; 
06A96:  MOVLW  01
06A98:  MOVWF  28
....................    } 
....................    break; 
06A9A:  BRA    6DAA
....................     
....................    case 5: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06A9C:  BSF    F93.3
06A9E:  BTFSC  F81.3
06AA0:  BRA    6AA8
....................    Rebote = True; 
06AA2:  BSF    35.0
....................    Menu = 4; 
06AA4:  MOVLW  04
06AA6:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06AA8:  BSF    F93.2
06AAA:  BTFSC  F81.2
06AAC:  BRA    6AB4
....................    Rebote = True; 
06AAE:  BSF    35.0
....................    Menu = 6; 
06AB0:  MOVLW  06
06AB2:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06AB4:  BSF    F93.1
06AB6:  BTFSC  F81.1
06AB8:  BRA    6AC0
....................    Rebote = True; 
06ABA:  BSF    35.0
....................    Menu = 51; 
06ABC:  MOVLW  33
06ABE:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06AC0:  BSF    F93.0
06AC2:  BTFSC  F81.0
06AC4:  BRA    6ACC
....................    Rebote = True; 
06AC6:  BSF    35.0
....................    Menu = 1; 
06AC8:  MOVLW  01
06ACA:  MOVWF  28
....................    } 
....................    break; 
06ACC:  BRA    6DAA
....................     
....................    case 6: // Menu - Luces 
....................    if (input(ARRIBA)==0){ 
06ACE:  BSF    F93.3
06AD0:  BTFSC  F81.3
06AD2:  BRA    6ADA
....................    Rebote = True; 
06AD4:  BSF    35.0
....................    Menu = 5; 
06AD6:  MOVLW  05
06AD8:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06ADA:  BSF    F93.2
06ADC:  BTFSC  F81.2
....................    } 
....................    if (input(OOKK)==0){ 
06ADE:  BSF    F93.1
06AE0:  BTFSC  F81.1
06AE2:  BRA    6AEA
....................    Rebote = True; 
06AE4:  BSF    35.0
....................    Menu = 61; 
06AE6:  MOVLW  3D
06AE8:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06AEA:  BSF    F93.0
06AEC:  BTFSC  F81.0
06AEE:  BRA    6AF6
....................    Rebote = True; 
06AF0:  BSF    35.0
....................    Menu = 1; 
06AF2:  MOVLW  01
06AF4:  MOVWF  28
....................    } 
....................    break; 
06AF6:  BRA    6DAA
....................     
....................  
....................  
.................... ///////////////////////////////////////////// Comienza menu alarma ///////// 
....................  
....................    case 21: // Menu - ALARMA Total 
....................    if (input(ARRIBA)==0){ 
06AF8:  BSF    F93.3
06AFA:  BTFSC  F81.3
....................    } 
....................    if (input(ABAJO)==0){ 
06AFC:  BSF    F93.2
06AFE:  BTFSC  F81.2
06B00:  BRA    6B08
....................    Rebote = True; 
06B02:  BSF    35.0
....................    Menu = 22; 
06B04:  MOVLW  16
06B06:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06B08:  BSF    F93.1
06B0A:  BTFSC  F81.1
06B0C:  BRA    6B14
....................    Rebote = True; 
06B0E:  BSF    35.0
....................    Menu = 121; 
06B10:  MOVLW  79
06B12:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06B14:  BSF    F93.0
06B16:  BTFSC  F81.0
06B18:  BRA    6B20
....................    Rebote = True; 
06B1A:  BSF    35.0
....................    Menu = 2; 
06B1C:  MOVLW  02
06B1E:  MOVWF  28
....................    } 
....................    break; 
06B20:  BRA    6DAA
....................     
....................    case 22: // Menu - Alarma noche suave 
....................    if (input(ARRIBA)==0){ 
06B22:  BSF    F93.3
06B24:  BTFSC  F81.3
06B26:  BRA    6B2E
....................    Rebote = True; 
06B28:  BSF    35.0
....................    Menu = 21; 
06B2A:  MOVLW  15
06B2C:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06B2E:  BSF    F93.2
06B30:  BTFSC  F81.2
06B32:  BRA    6B3A
....................    Rebote = True; 
06B34:  BSF    35.0
....................    Menu = 23; 
06B36:  MOVLW  17
06B38:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06B3A:  BSF    F93.1
06B3C:  BTFSC  F81.1
06B3E:  BRA    6B46
....................    Rebote = True; 
06B40:  BSF    35.0
....................    Menu = 122; 
06B42:  MOVLW  7A
06B44:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06B46:  BSF    F93.0
06B48:  BTFSC  F81.0
06B4A:  BRA    6B52
....................    Rebote = True; 
06B4C:  BSF    35.0
....................    Menu = 2; 
06B4E:  MOVLW  02
06B50:  MOVWF  28
....................    } 
....................    break; 
06B52:  BRA    6DAA
....................     
....................    case 23: // Menu - Alarma noche dura 
....................    if (input(ARRIBA)==0){ 
06B54:  BSF    F93.3
06B56:  BTFSC  F81.3
06B58:  BRA    6B60
....................    Rebote = True; 
06B5A:  BSF    35.0
....................    Menu = 22; 
06B5C:  MOVLW  16
06B5E:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06B60:  BSF    F93.2
06B62:  BTFSC  F81.2
06B64:  BRA    6B6C
....................    Rebote = True; 
06B66:  BSF    35.0
....................    Menu = 24; 
06B68:  MOVLW  18
06B6A:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06B6C:  BSF    F93.1
06B6E:  BTFSC  F81.1
06B70:  BRA    6B78
....................    Rebote = True; 
06B72:  BSF    35.0
....................    Menu = 123; 
06B74:  MOVLW  7B
06B76:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06B78:  BSF    F93.0
06B7A:  BTFSC  F81.0
06B7C:  BRA    6B84
....................    Rebote = True; 
06B7E:  BSF    35.0
....................    Menu = 2; 
06B80:  MOVLW  02
06B82:  MOVWF  28
....................    } 
....................    break; 
06B84:  BRA    6DAA
....................     
....................    case 24: // Menu - Alarma conf 
....................    if (input(ARRIBA)==0){ 
06B86:  BSF    F93.3
06B88:  BTFSC  F81.3
06B8A:  BRA    6B92
....................    Rebote = True; 
06B8C:  BSF    35.0
....................    Menu = 23; 
06B8E:  MOVLW  17
06B90:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06B92:  BSF    F93.2
06B94:  BTFSC  F81.2
....................    } 
....................    if (input(OOKK)==0){ 
06B96:  BSF    F93.1
06B98:  BTFSC  F81.1
06B9A:  BRA    6BA2
....................    Rebote = True; 
06B9C:  BSF    35.0
....................    Menu = 124; 
06B9E:  MOVLW  7C
06BA0:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06BA2:  BSF    F93.0
06BA4:  BTFSC  F81.0
06BA6:  BRA    6BAE
....................    Rebote = True; 
06BA8:  BSF    35.0
....................    Menu = 2; 
06BAA:  MOVLW  02
06BAC:  MOVWF  28
....................    } 
....................    break; 
06BAE:  BRA    6DAA
....................     
....................  
.................... ///////////////////////////////////////////// Comienza menu de Luces ///////// 
....................  
....................    case 31: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06BB0:  BSF    F93.3
06BB2:  BTFSC  F81.3
....................    } 
....................    if (input(ABAJO)==0){ 
06BB4:  BSF    F93.2
06BB6:  BTFSC  F81.2
06BB8:  BRA    6BC0
....................    Rebote = True; 
06BBA:  BSF    35.0
....................    Menu = 32; 
06BBC:  MOVLW  20
06BBE:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06BC0:  BSF    F93.1
06BC2:  BTFSC  F81.1
06BC4:  BRA    6BCC
....................    Rebote = True; 
06BC6:  BSF    35.0
....................    Menu = 131; 
06BC8:  MOVLW  83
06BCA:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06BCC:  BSF    F93.0
06BCE:  BTFSC  F81.0
06BD0:  BRA    6BD8
....................    Rebote = True; 
06BD2:  BSF    35.0
....................    Menu = 3; 
06BD4:  MOVLW  03
06BD6:  MOVWF  28
....................    } 
....................    break; 
06BD8:  BRA    6DAA
....................     
....................    case 32: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06BDA:  BSF    F93.3
06BDC:  BTFSC  F81.3
06BDE:  BRA    6BE6
....................    Rebote = True; 
06BE0:  BSF    35.0
....................    Menu = 31; 
06BE2:  MOVLW  1F
06BE4:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06BE6:  BSF    F93.2
06BE8:  BTFSC  F81.2
06BEA:  BRA    6BF2
....................    Rebote = True; 
06BEC:  BSF    35.0
....................    Menu = 33; 
06BEE:  MOVLW  21
06BF0:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06BF2:  BSF    F93.1
06BF4:  BTFSC  F81.1
06BF6:  BRA    6BFE
....................    Rebote = True; 
06BF8:  BSF    35.0
....................    Menu = 132; 
06BFA:  MOVLW  84
06BFC:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06BFE:  BSF    F93.0
06C00:  BTFSC  F81.0
06C02:  BRA    6C0A
....................    Rebote = True; 
06C04:  BSF    35.0
....................    Menu = 3; 
06C06:  MOVLW  03
06C08:  MOVWF  28
....................    } 
....................    break; 
06C0A:  BRA    6DAA
....................     
....................    case 33: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06C0C:  BSF    F93.3
06C0E:  BTFSC  F81.3
06C10:  BRA    6C18
....................    Rebote = True; 
06C12:  BSF    35.0
....................    Menu = 32; 
06C14:  MOVLW  20
06C16:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06C18:  BSF    F93.2
06C1A:  BTFSC  F81.2
....................    } 
....................    if (input(OOKK)==0){ 
06C1C:  BSF    F93.1
06C1E:  BTFSC  F81.1
06C20:  BRA    6C28
....................    Rebote = True; 
06C22:  BSF    35.0
....................    Menu = 133; 
06C24:  MOVLW  85
06C26:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06C28:  BSF    F93.0
06C2A:  BTFSC  F81.0
06C2C:  BRA    6C34
....................    Rebote = True; 
06C2E:  BSF    35.0
....................    Menu = 3; 
06C30:  MOVLW  03
06C32:  MOVWF  28
....................    } 
....................    break; 
06C34:  BRA    6DAA
....................     
....................  
....................  
.................... /*//////////////////////////////////////////// Comienza menu de Casandra ///////// 
....................  
....................    case 41: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
....................    } 
....................    if (input(ABAJO)==0){ 
....................    Rebote = True; 
....................    Menu = 42; 
....................    } 
....................    if (input(OOKK)==0){ 
....................    Rebote = True; 
....................    Menu = 141; 
....................    } 
....................    if (input(CANCEL)==0){ 
....................    Rebote = True; 
....................    Menu = 4; 
....................    } 
....................    break; 
....................     
....................    case 42: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
....................    Rebote = True; 
....................    Menu = 41; 
....................    } 
....................    if (input(ABAJO)==0){ 
....................    Rebote = True; 
....................    Menu = 43; 
....................    } 
....................    if (input(OOKK)==0){ 
....................    Rebote = True; 
....................    Menu = 142; 
....................    } 
....................    if (input(CANCEL)==0){ 
....................    Rebote = True; 
....................    Menu = 4; 
....................    } 
....................    break; 
....................     
....................    case 43: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
....................    Rebote = True; 
....................    Menu = 42; 
....................    } 
....................    if (input(ABAJO)==0){ 
....................    Rebote = True; 
....................    Menu = 44; 
....................    } 
....................    if (input(OOKK)==0){ 
....................    Rebote = True; 
....................    Menu = 143; 
....................    } 
....................    if (input(CANCEL)==0){ 
....................    Rebote = True; 
....................    Menu = 4; 
....................    } 
....................    break; 
....................     
....................    case 44: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
....................    Rebote = True; 
....................    Menu = 43; 
....................    } 
....................    if (input(ABAJO)==0){ 
....................    } 
....................    if (input(OOKK)==0){ 
....................    Rebote = True; 
....................    Menu = 144; 
....................    } 
....................    if (input(CANCEL)==0){ 
....................    Rebote = True; 
....................    Menu = 4; 
....................    } 
....................    break; 
....................     
.................... */ 
....................  
.................... ///////////////////////////////////////////// Comienza menu del Automatico ///////// 
....................  
....................    case 51: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06C36:  BSF    F93.3
06C38:  BTFSC  F81.3
....................    } 
....................    if (input(ABAJO)==0){ 
06C3A:  BSF    F93.2
06C3C:  BTFSC  F81.2
06C3E:  BRA    6C46
....................    Rebote = True; 
06C40:  BSF    35.0
....................    Menu = 52; 
06C42:  MOVLW  34
06C44:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06C46:  BSF    F93.1
06C48:  BTFSC  F81.1
06C4A:  BRA    6C52
....................    Rebote = True; 
06C4C:  BSF    35.0
....................    Menu = 151; 
06C4E:  MOVLW  97
06C50:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06C52:  BSF    F93.0
06C54:  BTFSC  F81.0
06C56:  BRA    6C5E
....................    Rebote = True; 
06C58:  BSF    35.0
....................    Menu = 5; 
06C5A:  MOVLW  05
06C5C:  MOVWF  28
....................    } 
....................    break; 
06C5E:  BRA    6DAA
....................     
....................    case 52: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06C60:  BSF    F93.3
06C62:  BTFSC  F81.3
06C64:  BRA    6C6C
....................    Rebote = True; 
06C66:  BSF    35.0
....................    Menu = 51; 
06C68:  MOVLW  33
06C6A:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06C6C:  BSF    F93.2
06C6E:  BTFSC  F81.2
06C70:  BRA    6C78
....................    Rebote = True; 
06C72:  BSF    35.0
....................    Menu = 53; 
06C74:  MOVLW  35
06C76:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06C78:  BSF    F93.1
06C7A:  BTFSC  F81.1
06C7C:  BRA    6C84
....................    Rebote = True; 
06C7E:  BSF    35.0
....................    Menu = 152; 
06C80:  MOVLW  98
06C82:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06C84:  BSF    F93.0
06C86:  BTFSC  F81.0
06C88:  BRA    6C90
....................    Rebote = True; 
06C8A:  BSF    35.0
....................    Menu = 5; 
06C8C:  MOVLW  05
06C8E:  MOVWF  28
....................    } 
....................    break; 
06C90:  BRA    6DAA
....................     
....................    case 53: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06C92:  BSF    F93.3
06C94:  BTFSC  F81.3
06C96:  BRA    6C9E
....................    Rebote = True; 
06C98:  BSF    35.0
....................    Menu = 52; 
06C9A:  MOVLW  34
06C9C:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06C9E:  BSF    F93.2
06CA0:  BTFSC  F81.2
....................    } 
....................    if (input(OOKK)==0){ 
06CA2:  BSF    F93.1
06CA4:  BTFSC  F81.1
06CA6:  BRA    6CAE
....................    Rebote = True; 
06CA8:  BSF    35.0
....................    Menu = 153; 
06CAA:  MOVLW  99
06CAC:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06CAE:  BSF    F93.0
06CB0:  BTFSC  F81.0
06CB2:  BRA    6CBA
....................    Rebote = True; 
06CB4:  BSF    35.0
....................    Menu = 5; 
06CB6:  MOVLW  05
06CB8:  MOVWF  28
....................    } 
....................    break; 
06CBA:  BRA    6DAA
....................     
....................  
.................... ///////////////////////////////////////////// Comienza menu de Configuracion ///////// 
....................  
....................    case 61: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06CBC:  BSF    F93.3
06CBE:  BTFSC  F81.3
....................    } 
....................    if (input(ABAJO)==0){ 
06CC0:  BSF    F93.2
06CC2:  BTFSC  F81.2
06CC4:  BRA    6CCC
....................    Rebote = True; 
06CC6:  BSF    35.0
....................    Menu = 62; 
06CC8:  MOVLW  3E
06CCA:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06CCC:  BSF    F93.1
06CCE:  BTFSC  F81.1
06CD0:  BRA    6CD8
....................    Rebote = True; 
06CD2:  BSF    35.0
....................    Menu = 161; 
06CD4:  MOVLW  A1
06CD6:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06CD8:  BSF    F93.0
06CDA:  BTFSC  F81.0
06CDC:  BRA    6CE4
....................    Rebote = True; 
06CDE:  BSF    35.0
....................    Menu = 6; 
06CE0:  MOVLW  06
06CE2:  MOVWF  28
....................    } 
....................    break; 
06CE4:  BRA    6DAA
....................     
....................    case 62: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06CE6:  BSF    F93.3
06CE8:  BTFSC  F81.3
06CEA:  BRA    6CF2
....................    Rebote = True; 
06CEC:  BSF    35.0
....................    Menu = 61; 
06CEE:  MOVLW  3D
06CF0:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06CF2:  BSF    F93.2
06CF4:  BTFSC  F81.2
06CF6:  BRA    6CFE
....................    Rebote = True; 
06CF8:  BSF    35.0
....................    Menu = 63; 
06CFA:  MOVLW  3F
06CFC:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06CFE:  BSF    F93.1
06D00:  BTFSC  F81.1
06D02:  BRA    6D0A
....................    Rebote = True; 
06D04:  BSF    35.0
....................    Menu = 162; 
06D06:  MOVLW  A2
06D08:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06D0A:  BSF    F93.0
06D0C:  BTFSC  F81.0
06D0E:  BRA    6D16
....................    Rebote = True; 
06D10:  BSF    35.0
....................    Menu = 6; 
06D12:  MOVLW  06
06D14:  MOVWF  28
....................    } 
....................    break; 
06D16:  BRA    6DAA
....................     
....................    case 63: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06D18:  BSF    F93.3
06D1A:  BTFSC  F81.3
06D1C:  BRA    6D24
....................    Rebote = True; 
06D1E:  BSF    35.0
....................    Menu = 62; 
06D20:  MOVLW  3E
06D22:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06D24:  BSF    F93.2
06D26:  BTFSC  F81.2
06D28:  BRA    6D30
....................    Rebote = True; 
06D2A:  BSF    35.0
....................    Menu = 64; 
06D2C:  MOVLW  40
06D2E:  MOVWF  28
....................    } 
....................    if (input(OOKK)==0){ 
06D30:  BSF    F93.1
06D32:  BTFSC  F81.1
06D34:  BRA    6D3C
....................    Rebote = True; 
06D36:  BSF    35.0
....................    Menu = 163; 
06D38:  MOVLW  A3
06D3A:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06D3C:  BSF    F93.0
06D3E:  BTFSC  F81.0
06D40:  BRA    6D48
....................    Rebote = True; 
06D42:  BSF    35.0
....................    Menu = 6; 
06D44:  MOVLW  06
06D46:  MOVWF  28
....................    } 
....................    break; 
06D48:  BRA    6DAA
....................     
....................    case 64: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06D4A:  BSF    F93.3
06D4C:  BTFSC  F81.3
06D4E:  BRA    6D56
....................    Rebote = True; 
06D50:  BSF    35.0
....................    Menu = 63; 
06D52:  MOVLW  3F
06D54:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06D56:  BSF    F93.2
06D58:  BTFSC  F81.2
06D5A:  BRA    6D62
....................    Rebote = True; 
06D5C:  BSF    35.0
....................    Menu = 65; 
06D5E:  MOVLW  41
06D60:  MOVWF  28
....................  
....................    } 
....................    if (input(OOKK)==0){ 
06D62:  BSF    F93.1
06D64:  BTFSC  F81.1
06D66:  BRA    6D6E
....................    Rebote = True; 
06D68:  BSF    35.0
....................    Menu = 164; 
06D6A:  MOVLW  A4
06D6C:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06D6E:  BSF    F93.0
06D70:  BTFSC  F81.0
06D72:  BRA    6D7A
....................    Rebote = True; 
06D74:  BSF    35.0
....................    Menu = 6; 
06D76:  MOVLW  06
06D78:  MOVWF  28
....................    } 
....................    break; 
06D7A:  BRA    6DAA
....................  
....................    case 65: // Menu - Grupo automatico 
....................    if (input(ARRIBA)==0){ 
06D7C:  BSF    F93.3
06D7E:  BTFSC  F81.3
06D80:  BRA    6D88
....................    Rebote = True; 
06D82:  BSF    35.0
....................    Menu = 64; 
06D84:  MOVLW  40
06D86:  MOVWF  28
....................    } 
....................    if (input(ABAJO)==0){ 
06D88:  BSF    F93.2
06D8A:  BTFSC  F81.2
....................    } 
....................    if (input(OOKK)==0){ 
06D8C:  BSF    F93.1
06D8E:  BTFSC  F81.1
06D90:  BRA    6D98
....................    Rebote = True; 
06D92:  BSF    35.0
....................    Menu = 165; 
06D94:  MOVLW  A5
06D96:  MOVWF  28
....................    } 
....................    if (input(CANCEL)==0){ 
06D98:  BSF    F93.0
06D9A:  BTFSC  F81.0
06D9C:  BRA    6DA4
....................    Rebote = True; 
06D9E:  BSF    35.0
....................    Menu = 6; 
06DA0:  MOVLW  06
06DA2:  MOVWF  28
....................    } 
....................    break; 
06DA4:  BRA    6DAA
....................     
.................... Pantalla(); // Actualizamos la pantalla 
06DA6:  CALL   5810
....................  
.................... } // switch 
.................... } // if del antirebote 
.................... } // Fn 
06DAA:  GOTO   E50C (RETURN)
....................  
.................... void Pantalla(){ 
....................  
.................... restart_wdt(); 
*
05810:  CLRWDT
.................... switch (Menu){ 
05812:  MOVF   28,W
05814:  ADDLW  BE
05816:  BTFSC  FD8.0
05818:  GOTO   68F4
0581C:  ADDLW  42
0581E:  GOTO   68F6
....................  
....................    case 0: 
.................... //   output_high(LCDLED); 
.................... //   lcd_putc("\f"); // Limpiamos la pantalla, por este motivo solo la llamamos cuando es necesario 
....................    break; 
05822:  GOTO   68F4
....................  
....................    case 1: 
05826:  CLRF   19
05828:  BTFSC  FF2.7
0582A:  BSF    19.7
0582C:  BCF    FF2.7
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0582E:  MOVLW  01
05830:  MOVLB  1
05832:  MOVWF  xA0
05834:  MOVWF  xA1
05836:  MOVLB  0
05838:  CALL   156C
0583C:  BTFSC  19.7
0583E:  BSF    FF2.7
....................    printf(lcd_putc, "%c%c%c %02u %c%c%c  %02u:%02u:%02u", Dia[0], Dia[1], Dia[2], day, Mes[0], Mes[1], Mes[2], hrs, min, sec); 
05840:  MOVFF  3B,193
05844:  CALL   3DE6
05848:  MOVFF  3C,193
0584C:  CALL   3DE6
05850:  MOVFF  3D,193
05854:  CALL   3DE6
05858:  MOVLW  20
0585A:  MOVLB  1
0585C:  MOVWF  x93
0585E:  MOVLB  0
05860:  CALL   3DE6
05864:  MOVFF  24,190
05868:  MOVLW  01
0586A:  MOVLB  1
0586C:  MOVWF  x91
0586E:  MOVLB  0
05870:  CALL   46F0
05874:  MOVLW  20
05876:  MOVLB  1
05878:  MOVWF  x93
0587A:  MOVLB  0
0587C:  CALL   3DE6
05880:  MOVFF  3F,193
05884:  CALL   3DE6
05888:  MOVFF  40,193
0588C:  CALL   3DE6
05890:  MOVFF  41,193
05894:  CALL   3DE6
05898:  MOVLW  20
0589A:  MOVLB  1
0589C:  MOVWF  x93
0589E:  MOVLB  0
058A0:  CALL   3DE6
058A4:  MOVLW  20
058A6:  MOVLB  1
058A8:  MOVWF  x93
058AA:  MOVLB  0
058AC:  CALL   3DE6
058B0:  MOVFF  23,190
058B4:  MOVLW  01
058B6:  MOVLB  1
058B8:  MOVWF  x91
058BA:  MOVLB  0
058BC:  CALL   46F0
058C0:  MOVLW  3A
058C2:  MOVLB  1
058C4:  MOVWF  x93
058C6:  MOVLB  0
058C8:  CALL   3DE6
058CC:  MOVFF  22,190
058D0:  MOVLW  01
058D2:  MOVLB  1
058D4:  MOVWF  x91
058D6:  MOVLB  0
058D8:  CALL   46F0
058DC:  MOVLW  3A
058DE:  MOVLB  1
058E0:  MOVWF  x93
058E2:  MOVLB  0
058E4:  CALL   3DE6
058E8:  MOVFF  21,190
058EC:  MOVLW  01
058EE:  MOVLB  1
058F0:  MOVWF  x91
058F2:  MOVLB  0
058F4:  CALL   46F0
058F8:  CLRF   19
058FA:  BTFSC  FF2.7
058FC:  BSF    19.7
058FE:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05900:  MOVLW  01
05902:  MOVLB  1
05904:  MOVWF  xA0
05906:  MOVLW  02
05908:  MOVWF  xA1
0590A:  MOVLB  0
0590C:  CALL   156C
05910:  BTFSC  19.7
05912:  BSF    FF2.7
....................    printf(lcd_putc, " Temp: %2d%cC / %2d%cC  ", TempIn-3, 210, TempOut, 210); 
05914:  MOVLW  03
05916:  SUBWF  1D,W
05918:  MOVLB  1
0591A:  MOVWF  x6D
0591C:  MOVLW  DE
0591E:  MOVWF  FF6
05920:  MOVLW  2F
05922:  MOVWF  FF7
05924:  MOVLW  07
05926:  MOVWF  x90
05928:  MOVLB  0
0592A:  CALL   44F0
0592E:  MOVFF  16D,185
05932:  MOVLW  11
05934:  MOVLB  1
05936:  MOVWF  x86
05938:  MOVLB  0
0593A:  CALL   4568
0593E:  MOVLW  D2
05940:  MOVLB  1
05942:  MOVWF  x93
05944:  MOVLB  0
05946:  CALL   3DE6
0594A:  MOVLW  EA
0594C:  MOVWF  FF6
0594E:  MOVLW  2F
05950:  MOVWF  FF7
05952:  MOVLW  04
05954:  MOVLB  1
05956:  MOVWF  x90
05958:  MOVLB  0
0595A:  CALL   44F0
0595E:  MOVFF  43,185
05962:  MOVLW  11
05964:  MOVLB  1
05966:  MOVWF  x86
05968:  MOVLB  0
0596A:  CALL   4568
0596E:  MOVLW  D2
05970:  MOVLB  1
05972:  MOVWF  x93
05974:  MOVLB  0
05976:  CALL   3DE6
0597A:  MOVLW  F3
0597C:  MOVWF  FF6
0597E:  MOVLW  2F
05980:  MOVWF  FF7
05982:  MOVLW  03
05984:  MOVLB  1
05986:  MOVWF  x90
05988:  MOVLB  0
0598A:  CALL   44F0
0598E:  CLRF   19
05990:  BTFSC  FF2.7
05992:  BSF    19.7
05994:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05996:  MOVLW  01
05998:  MOVLB  1
0599A:  MOVWF  xA0
0599C:  MOVLW  03
0599E:  MOVWF  xA1
059A0:  MOVLB  0
059A2:  CALL   156C
059A6:  BTFSC  19.7
059A8:  BSF    FF2.7
....................    printf(lcd_putc, " HR: %02u%%   Luz: %02u" , Hum, Sol); 
059AA:  MOVLW  F8
059AC:  MOVWF  FF6
059AE:  MOVLW  2F
059B0:  MOVWF  FF7
059B2:  MOVLW  05
059B4:  MOVLB  1
059B6:  MOVWF  x90
059B8:  MOVLB  0
059BA:  CALL   44F0
059BE:  MOVFF  1B,190
059C2:  MOVLW  01
059C4:  MOVLB  1
059C6:  MOVWF  x91
059C8:  MOVLB  0
059CA:  CALL   46F0
059CE:  MOVLW  25
059D0:  MOVLB  1
059D2:  MOVWF  x93
059D4:  MOVLB  0
059D6:  CALL   3DE6
059DA:  MOVLW  03
059DC:  MOVWF  FF6
059DE:  MOVLW  30
059E0:  MOVWF  FF7
059E2:  MOVLW  08
059E4:  MOVLB  1
059E6:  MOVWF  x90
059E8:  MOVLB  0
059EA:  CALL   44F0
059EE:  MOVFF  44,190
059F2:  MOVLW  01
059F4:  MOVLB  1
059F6:  MOVWF  x91
059F8:  MOVLB  0
059FA:  CALL   46F0
059FE:  CLRF   19
05A00:  BTFSC  FF2.7
05A02:  BSF    19.7
05A04:  BCF    FF2.7
.................... /*   if (Sol > 5) printf(lcd_putc, " HR: %02u%%   Sol:%3u " , Hum, Sol); 
....................      else         printf(lcd_putc, " HR: %02u%%  Luna:%2u  ", Hum, Sol); 
....................    */ 
....................    lcd_gotoxy(1,4); 
05A06:  MOVLW  01
05A08:  MOVLB  1
05A0A:  MOVWF  xA0
05A0C:  MOVLW  04
05A0E:  MOVWF  xA1
05A10:  MOVLB  0
05A12:  CALL   156C
05A16:  BTFSC  19.7
05A18:  BSF    FF2.7
....................    if (EstadoAl==1)  printf(lcd_putc, "Al: Off   Act: %02u(%01u)", CuentaLuz, CuentaSens); 
05A1A:  DECFSZ 46,W
05A1C:  BRA    5A6A
05A1E:  MOVLW  10
05A20:  MOVWF  FF6
05A22:  MOVLW  30
05A24:  MOVWF  FF7
05A26:  MOVLW  0F
05A28:  MOVLB  1
05A2A:  MOVWF  x90
05A2C:  MOVLB  0
05A2E:  CALL   44F0
05A32:  MOVFF  152,190
05A36:  MOVLW  01
05A38:  MOVLB  1
05A3A:  MOVWF  x91
05A3C:  MOVLB  0
05A3E:  CALL   46F0
05A42:  MOVLW  28
05A44:  MOVLB  1
05A46:  MOVWF  x93
05A48:  MOVLB  0
05A4A:  CALL   3DE6
05A4E:  MOVFF  153,190
05A52:  MOVLW  08
05A54:  MOVLB  1
05A56:  MOVWF  x91
05A58:  MOVLB  0
05A5A:  CALL   46F0
05A5E:  MOVLW  29
05A60:  MOVLB  1
05A62:  MOVWF  x93
05A64:  MOVLB  0
05A66:  CALL   3DE6
....................    if (EstadoAl==2)  printf(lcd_putc, "Al: Total Act: %02u(%01u)", CuentaLuz, CuentaSens); 
05A6A:  MOVF   46,W
05A6C:  SUBLW  02
05A6E:  BNZ   5ABC
05A70:  MOVLW  2A
05A72:  MOVWF  FF6
05A74:  MOVLW  30
05A76:  MOVWF  FF7
05A78:  MOVLW  0F
05A7A:  MOVLB  1
05A7C:  MOVWF  x90
05A7E:  MOVLB  0
05A80:  CALL   44F0
05A84:  MOVFF  152,190
05A88:  MOVLW  01
05A8A:  MOVLB  1
05A8C:  MOVWF  x91
05A8E:  MOVLB  0
05A90:  CALL   46F0
05A94:  MOVLW  28
05A96:  MOVLB  1
05A98:  MOVWF  x93
05A9A:  MOVLB  0
05A9C:  CALL   3DE6
05AA0:  MOVFF  153,190
05AA4:  MOVLW  08
05AA6:  MOVLB  1
05AA8:  MOVWF  x91
05AAA:  MOVLB  0
05AAC:  CALL   46F0
05AB0:  MOVLW  29
05AB2:  MOVLB  1
05AB4:  MOVWF  x93
05AB6:  MOVLB  0
05AB8:  CALL   3DE6
....................    if (EstadoAl==3)  printf(lcd_putc, "Al: Cuar  Act: %02u(%01u)", CuentaLuz, CuentaSens); 
05ABC:  MOVF   46,W
05ABE:  SUBLW  03
05AC0:  BNZ   5B0E
05AC2:  MOVLW  44
05AC4:  MOVWF  FF6
05AC6:  MOVLW  30
05AC8:  MOVWF  FF7
05ACA:  MOVLW  0F
05ACC:  MOVLB  1
05ACE:  MOVWF  x90
05AD0:  MOVLB  0
05AD2:  CALL   44F0
05AD6:  MOVFF  152,190
05ADA:  MOVLW  01
05ADC:  MOVLB  1
05ADE:  MOVWF  x91
05AE0:  MOVLB  0
05AE2:  CALL   46F0
05AE6:  MOVLW  28
05AE8:  MOVLB  1
05AEA:  MOVWF  x93
05AEC:  MOVLB  0
05AEE:  CALL   3DE6
05AF2:  MOVFF  153,190
05AF6:  MOVLW  08
05AF8:  MOVLB  1
05AFA:  MOVWF  x91
05AFC:  MOVLB  0
05AFE:  CALL   46F0
05B02:  MOVLW  29
05B04:  MOVLB  1
05B06:  MOVWF  x93
05B08:  MOVLB  0
05B0A:  CALL   3DE6
....................    if (EstadoAl==4)  printf(lcd_putc, "Al: Casa  Act: %02u(%01u)", CuentaLuz, CuentaSens); 
05B0E:  MOVF   46,W
05B10:  SUBLW  04
05B12:  BNZ   5B60
05B14:  MOVLW  5E
05B16:  MOVWF  FF6
05B18:  MOVLW  30
05B1A:  MOVWF  FF7
05B1C:  MOVLW  0F
05B1E:  MOVLB  1
05B20:  MOVWF  x90
05B22:  MOVLB  0
05B24:  CALL   44F0
05B28:  MOVFF  152,190
05B2C:  MOVLW  01
05B2E:  MOVLB  1
05B30:  MOVWF  x91
05B32:  MOVLB  0
05B34:  CALL   46F0
05B38:  MOVLW  28
05B3A:  MOVLB  1
05B3C:  MOVWF  x93
05B3E:  MOVLB  0
05B40:  CALL   3DE6
05B44:  MOVFF  153,190
05B48:  MOVLW  08
05B4A:  MOVLB  1
05B4C:  MOVWF  x91
05B4E:  MOVLB  0
05B50:  CALL   46F0
05B54:  MOVLW  29
05B56:  MOVLB  1
05B58:  MOVWF  x93
05B5A:  MOVLB  0
05B5C:  CALL   3DE6
....................    if ((EstadoAl==5)|| (EstadoAl==6)|| (EstadoAl==7)){ 
05B60:  MOVF   46,W
05B62:  SUBLW  05
05B64:  BZ    5B72
05B66:  MOVF   46,W
05B68:  SUBLW  06
05B6A:  BZ    5B72
05B6C:  MOVF   46,W
05B6E:  SUBLW  07
05B70:  BNZ   5C10
....................    if (bit_test(Tiempo1,0)) printf(lcd_putc, " PANICO   Act: %02u(%01u)", CuentaLuz, CuentaSens); 
05B72:  BTFSS  49.0
05B74:  BRA    5BC4
05B76:  MOVLW  78
05B78:  MOVWF  FF6
05B7A:  MOVLW  30
05B7C:  MOVWF  FF7
05B7E:  MOVLW  0F
05B80:  MOVLB  1
05B82:  MOVWF  x90
05B84:  MOVLB  0
05B86:  CALL   44F0
05B8A:  MOVFF  152,190
05B8E:  MOVLW  01
05B90:  MOVLB  1
05B92:  MOVWF  x91
05B94:  MOVLB  0
05B96:  CALL   46F0
05B9A:  MOVLW  28
05B9C:  MOVLB  1
05B9E:  MOVWF  x93
05BA0:  MOVLB  0
05BA2:  CALL   3DE6
05BA6:  MOVFF  153,190
05BAA:  MOVLW  08
05BAC:  MOVLB  1
05BAE:  MOVWF  x91
05BB0:  MOVLB  0
05BB2:  CALL   46F0
05BB6:  MOVLW  29
05BB8:  MOVLB  1
05BBA:  MOVWF  x93
05BBC:  MOVLB  0
05BBE:  CALL   3DE6
....................    else                     printf(lcd_putc, "          Act: %02u(%01u)", CuentaLuz, CuentaSens); 
05BC2:  BRA    5C10
05BC4:  MOVLW  92
05BC6:  MOVWF  FF6
05BC8:  MOVLW  30
05BCA:  MOVWF  FF7
05BCC:  MOVLW  0F
05BCE:  MOVLB  1
05BD0:  MOVWF  x90
05BD2:  MOVLB  0
05BD4:  CALL   44F0
05BD8:  MOVFF  152,190
05BDC:  MOVLW  01
05BDE:  MOVLB  1
05BE0:  MOVWF  x91
05BE2:  MOVLB  0
05BE4:  CALL   46F0
05BE8:  MOVLW  28
05BEA:  MOVLB  1
05BEC:  MOVWF  x93
05BEE:  MOVLB  0
05BF0:  CALL   3DE6
05BF4:  MOVFF  153,190
05BF8:  MOVLW  08
05BFA:  MOVLB  1
05BFC:  MOVWF  x91
05BFE:  MOVLB  0
05C00:  CALL   46F0
05C04:  MOVLW  29
05C06:  MOVLB  1
05C08:  MOVWF  x93
05C0A:  MOVLB  0
05C0C:  CALL   3DE6
05C10:  CLRF   19
05C12:  BTFSC  FF2.7
05C14:  BSF    19.7
05C16:  BCF    FF2.7
....................    } 
....................    lcd_gotoxy(19,3); 
05C18:  MOVLW  13
05C1A:  MOVLB  1
05C1C:  MOVWF  xA0
05C1E:  MOVLW  03
05C20:  MOVWF  xA1
05C22:  MOVLB  0
05C24:  CALL   156C
05C28:  BTFSC  19.7
05C2A:  BSF    FF2.7
....................    if (Sol <= Umbral){ 
05C2C:  MOVF   44,W
05C2E:  SUBWF  48,W
05C30:  BNC   5C4C
....................    printf(lcd_putc,"* "); 
05C32:  MOVLW  2A
05C34:  MOVLB  1
05C36:  MOVWF  x93
05C38:  MOVLB  0
05C3A:  CALL   3DE6
05C3E:  MOVLW  20
05C40:  MOVLB  1
05C42:  MOVWF  x93
05C44:  MOVLB  0
05C46:  CALL   3DE6
....................    } else printf(lcd_putc,"  "); 
05C4A:  BRA    5C64
05C4C:  MOVLW  20
05C4E:  MOVLB  1
05C50:  MOVWF  x93
05C52:  MOVLB  0
05C54:  CALL   3DE6
05C58:  MOVLW  20
05C5A:  MOVLB  1
05C5C:  MOVWF  x93
05C5E:  MOVLB  0
05C60:  CALL   3DE6
....................    break; 
05C64:  GOTO   68F4
....................  
....................    case 2: 
05C68:  CLRF   19
05C6A:  BTFSC  FF2.7
05C6C:  BSF    19.7
05C6E:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
05C70:  MOVLW  01
05C72:  MOVLB  1
05C74:  MOVWF  xA0
05C76:  MOVWF  xA1
05C78:  MOVLB  0
05C7A:  CALL   156C
05C7E:  BTFSC  19.7
05C80:  BSF    FF2.7
....................    printf(lcd_putc, "======= MENU ======="); 
05C82:  MOVLW  AC
05C84:  MOVWF  FF6
05C86:  MOVLW  30
05C88:  MOVWF  FF7
05C8A:  CALL   3E86
05C8E:  CLRF   19
05C90:  BTFSC  FF2.7
05C92:  BSF    19.7
05C94:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05C96:  MOVLW  01
05C98:  MOVLB  1
05C9A:  MOVWF  xA0
05C9C:  MOVLW  02
05C9E:  MOVWF  xA1
05CA0:  MOVLB  0
05CA2:  CALL   156C
05CA6:  BTFSC  19.7
05CA8:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (1) Alarma       "); 
05CAA:  MOVLW  C2
05CAC:  MOVWF  FF6
05CAE:  MOVLW  30
05CB0:  MOVWF  FF7
05CB2:  CALL   3E86
05CB6:  CLRF   19
05CB8:  BTFSC  FF2.7
05CBA:  BSF    19.7
05CBC:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05CBE:  MOVLW  01
05CC0:  MOVLB  1
05CC2:  MOVWF  xA0
05CC4:  MOVLW  03
05CC6:  MOVWF  xA1
05CC8:  MOVLB  0
05CCA:  CALL   156C
05CCE:  BTFSC  19.7
05CD0:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Luces        "); 
05CD2:  MOVLW  D8
05CD4:  MOVWF  FF6
05CD6:  MOVLW  30
05CD8:  MOVWF  FF7
05CDA:  CALL   3E86
05CDE:  CLRF   19
05CE0:  BTFSC  FF2.7
05CE2:  BSF    19.7
05CE4:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
05CE6:  MOVLW  01
05CE8:  MOVLB  1
05CEA:  MOVWF  xA0
05CEC:  MOVLW  04
05CEE:  MOVWF  xA1
05CF0:  MOVLB  0
05CF2:  CALL   156C
05CF6:  BTFSC  19.7
05CF8:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Casandra     "); 
05CFA:  MOVLW  EE
05CFC:  MOVWF  FF6
05CFE:  MOVLW  30
05D00:  MOVWF  FF7
05D02:  CALL   3E86
....................    break; 
05D06:  GOTO   68F4
....................  
....................    case 3: 
05D0A:  CLRF   19
05D0C:  BTFSC  FF2.7
05D0E:  BSF    19.7
05D10:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
05D12:  MOVLW  01
05D14:  MOVLB  1
05D16:  MOVWF  xA0
05D18:  MOVWF  xA1
05D1A:  MOVLB  0
05D1C:  CALL   156C
05D20:  BTFSC  19.7
05D22:  BSF    FF2.7
....................    printf(lcd_putc, "======= MENU ======="); 
05D24:  MOVLW  04
05D26:  MOVWF  FF6
05D28:  MOVLW  31
05D2A:  MOVWF  FF7
05D2C:  CALL   3E86
05D30:  CLRF   19
05D32:  BTFSC  FF2.7
05D34:  BSF    19.7
05D36:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05D38:  MOVLW  01
05D3A:  MOVLB  1
05D3C:  MOVWF  xA0
05D3E:  MOVLW  02
05D40:  MOVWF  xA1
05D42:  MOVLB  0
05D44:  CALL   156C
05D48:  BTFSC  19.7
05D4A:  BSF    FF2.7
....................    printf(lcd_putc, "   (1) Alarma       "); 
05D4C:  MOVLW  1A
05D4E:  MOVWF  FF6
05D50:  MOVLW  31
05D52:  MOVWF  FF7
05D54:  CALL   3E86
05D58:  CLRF   19
05D5A:  BTFSC  FF2.7
05D5C:  BSF    19.7
05D5E:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05D60:  MOVLW  01
05D62:  MOVLB  1
05D64:  MOVWF  xA0
05D66:  MOVLW  03
05D68:  MOVWF  xA1
05D6A:  MOVLB  0
05D6C:  CALL   156C
05D70:  BTFSC  19.7
05D72:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (2) Luces        "); 
05D74:  MOVLW  30
05D76:  MOVWF  FF6
05D78:  MOVLW  31
05D7A:  MOVWF  FF7
05D7C:  CALL   3E86
05D80:  CLRF   19
05D82:  BTFSC  FF2.7
05D84:  BSF    19.7
05D86:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
05D88:  MOVLW  01
05D8A:  MOVLB  1
05D8C:  MOVWF  xA0
05D8E:  MOVLW  04
05D90:  MOVWF  xA1
05D92:  MOVLB  0
05D94:  CALL   156C
05D98:  BTFSC  19.7
05D9A:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Casandra     "); 
05D9C:  MOVLW  46
05D9E:  MOVWF  FF6
05DA0:  MOVLW  31
05DA2:  MOVWF  FF7
05DA4:  CALL   3E86
....................    break; 
05DA8:  GOTO   68F4
....................  
....................    case 4: 
05DAC:  CLRF   19
05DAE:  BTFSC  FF2.7
05DB0:  BSF    19.7
05DB2:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
05DB4:  MOVLW  01
05DB6:  MOVLB  1
05DB8:  MOVWF  xA0
05DBA:  MOVWF  xA1
05DBC:  MOVLB  0
05DBE:  CALL   156C
05DC2:  BTFSC  19.7
05DC4:  BSF    FF2.7
....................    printf(lcd_putc, "======= MENU ======="); 
05DC6:  MOVLW  5C
05DC8:  MOVWF  FF6
05DCA:  MOVLW  31
05DCC:  MOVWF  FF7
05DCE:  CALL   3E86
05DD2:  CLRF   19
05DD4:  BTFSC  FF2.7
05DD6:  BSF    19.7
05DD8:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05DDA:  MOVLW  01
05DDC:  MOVLB  1
05DDE:  MOVWF  xA0
05DE0:  MOVLW  02
05DE2:  MOVWF  xA1
05DE4:  MOVLB  0
05DE6:  CALL   156C
05DEA:  BTFSC  19.7
05DEC:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Luces        "); 
05DEE:  MOVLW  72
05DF0:  MOVWF  FF6
05DF2:  MOVLW  31
05DF4:  MOVWF  FF7
05DF6:  CALL   3E86
05DFA:  CLRF   19
05DFC:  BTFSC  FF2.7
05DFE:  BSF    19.7
05E00:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05E02:  MOVLW  01
05E04:  MOVLB  1
05E06:  MOVWF  xA0
05E08:  MOVLW  03
05E0A:  MOVWF  xA1
05E0C:  MOVLB  0
05E0E:  CALL   156C
05E12:  BTFSC  19.7
05E14:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (3) Casandra     "); 
05E16:  MOVLW  88
05E18:  MOVWF  FF6
05E1A:  MOVLW  31
05E1C:  MOVWF  FF7
05E1E:  CALL   3E86
05E22:  CLRF   19
05E24:  BTFSC  FF2.7
05E26:  BSF    19.7
05E28:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
05E2A:  MOVLW  01
05E2C:  MOVLB  1
05E2E:  MOVWF  xA0
05E30:  MOVLW  04
05E32:  MOVWF  xA1
05E34:  MOVLB  0
05E36:  CALL   156C
05E3A:  BTFSC  19.7
05E3C:  BSF    FF2.7
....................    printf(lcd_putc, "   (4) Automaticos  "); 
05E3E:  MOVLW  9E
05E40:  MOVWF  FF6
05E42:  MOVLW  31
05E44:  MOVWF  FF7
05E46:  CALL   3E86
....................    break; 
05E4A:  GOTO   68F4
....................  
....................    case 5: 
05E4E:  CLRF   19
05E50:  BTFSC  FF2.7
05E52:  BSF    19.7
05E54:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
05E56:  MOVLW  01
05E58:  MOVLB  1
05E5A:  MOVWF  xA0
05E5C:  MOVWF  xA1
05E5E:  MOVLB  0
05E60:  CALL   156C
05E64:  BTFSC  19.7
05E66:  BSF    FF2.7
....................    printf(lcd_putc, "======= MENU ======="); 
05E68:  MOVLW  B4
05E6A:  MOVWF  FF6
05E6C:  MOVLW  31
05E6E:  MOVWF  FF7
05E70:  CALL   3E86
05E74:  CLRF   19
05E76:  BTFSC  FF2.7
05E78:  BSF    19.7
05E7A:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05E7C:  MOVLW  01
05E7E:  MOVLB  1
05E80:  MOVWF  xA0
05E82:  MOVLW  02
05E84:  MOVWF  xA1
05E86:  MOVLB  0
05E88:  CALL   156C
05E8C:  BTFSC  19.7
05E8E:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Casandra     "); 
05E90:  MOVLW  CA
05E92:  MOVWF  FF6
05E94:  MOVLW  31
05E96:  MOVWF  FF7
05E98:  CALL   3E86
05E9C:  CLRF   19
05E9E:  BTFSC  FF2.7
05EA0:  BSF    19.7
05EA2:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05EA4:  MOVLW  01
05EA6:  MOVLB  1
05EA8:  MOVWF  xA0
05EAA:  MOVLW  03
05EAC:  MOVWF  xA1
05EAE:  MOVLB  0
05EB0:  CALL   156C
05EB4:  BTFSC  19.7
05EB6:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (4) Automaticos  "); 
05EB8:  MOVLW  E0
05EBA:  MOVWF  FF6
05EBC:  MOVLW  31
05EBE:  MOVWF  FF7
05EC0:  CALL   3E86
05EC4:  CLRF   19
05EC6:  BTFSC  FF2.7
05EC8:  BSF    19.7
05ECA:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
05ECC:  MOVLW  01
05ECE:  MOVLB  1
05ED0:  MOVWF  xA0
05ED2:  MOVLW  04
05ED4:  MOVWF  xA1
05ED6:  MOVLB  0
05ED8:  CALL   156C
05EDC:  BTFSC  19.7
05EDE:  BSF    FF2.7
....................    printf(lcd_putc, "   (5) Configuracion"); 
05EE0:  MOVLW  F6
05EE2:  MOVWF  FF6
05EE4:  MOVLW  31
05EE6:  MOVWF  FF7
05EE8:  CALL   3E86
....................    break; 
05EEC:  GOTO   68F4
....................  
....................    case 6: 
05EF0:  CLRF   19
05EF2:  BTFSC  FF2.7
05EF4:  BSF    19.7
05EF6:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
05EF8:  MOVLW  01
05EFA:  MOVLB  1
05EFC:  MOVWF  xA0
05EFE:  MOVWF  xA1
05F00:  MOVLB  0
05F02:  CALL   156C
05F06:  BTFSC  19.7
05F08:  BSF    FF2.7
....................    printf(lcd_putc, "======= MENU ======="); 
05F0A:  MOVLW  0C
05F0C:  MOVWF  FF6
05F0E:  MOVLW  32
05F10:  MOVWF  FF7
05F12:  CALL   3E86
05F16:  CLRF   19
05F18:  BTFSC  FF2.7
05F1A:  BSF    19.7
05F1C:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05F1E:  MOVLW  01
05F20:  MOVLB  1
05F22:  MOVWF  xA0
05F24:  MOVLW  02
05F26:  MOVWF  xA1
05F28:  MOVLB  0
05F2A:  CALL   156C
05F2E:  BTFSC  19.7
05F30:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Casandra     "); 
05F32:  MOVLW  22
05F34:  MOVWF  FF6
05F36:  MOVLW  32
05F38:  MOVWF  FF7
05F3A:  CALL   3E86
05F3E:  CLRF   19
05F40:  BTFSC  FF2.7
05F42:  BSF    19.7
05F44:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05F46:  MOVLW  01
05F48:  MOVLB  1
05F4A:  MOVWF  xA0
05F4C:  MOVLW  03
05F4E:  MOVWF  xA1
05F50:  MOVLB  0
05F52:  CALL   156C
05F56:  BTFSC  19.7
05F58:  BSF    FF2.7
....................    printf(lcd_putc, "   (4) Automaticos  "); 
05F5A:  MOVLW  38
05F5C:  MOVWF  FF6
05F5E:  MOVLW  32
05F60:  MOVWF  FF7
05F62:  CALL   3E86
05F66:  CLRF   19
05F68:  BTFSC  FF2.7
05F6A:  BSF    19.7
05F6C:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
05F6E:  MOVLW  01
05F70:  MOVLB  1
05F72:  MOVWF  xA0
05F74:  MOVLW  04
05F76:  MOVWF  xA1
05F78:  MOVLB  0
05F7A:  CALL   156C
05F7E:  BTFSC  19.7
05F80:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (5) Configuracion"); 
05F82:  MOVLW  4E
05F84:  MOVWF  FF6
05F86:  MOVLW  32
05F88:  MOVWF  FF7
05F8A:  CALL   3E86
....................    break; 
05F8E:  GOTO   68F4
....................  
....................    case 21: 
05F92:  CLRF   19
05F94:  BTFSC  FF2.7
05F96:  BSF    19.7
05F98:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
05F9A:  MOVLW  01
05F9C:  MOVLB  1
05F9E:  MOVWF  xA0
05FA0:  MOVWF  xA1
05FA2:  MOVLB  0
05FA4:  CALL   156C
05FA8:  BTFSC  19.7
05FAA:  BSF    FF2.7
....................    printf(lcd_putc, "====== Alarma ======"); 
05FAC:  MOVLW  64
05FAE:  MOVWF  FF6
05FB0:  MOVLW  32
05FB2:  MOVWF  FF7
05FB4:  CALL   3E86
05FB8:  CLRF   19
05FBA:  BTFSC  FF2.7
05FBC:  BSF    19.7
05FBE:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
05FC0:  MOVLW  01
05FC2:  MOVLB  1
05FC4:  MOVWF  xA0
05FC6:  MOVLW  02
05FC8:  MOVWF  xA1
05FCA:  MOVLB  0
05FCC:  CALL   156C
05FD0:  BTFSC  19.7
05FD2:  BSF    FF2.7
....................    printf(lcd_putc, "~ (1) Activar Total "); 
05FD4:  MOVLW  7A
05FD6:  MOVWF  FF6
05FD8:  MOVLW  32
05FDA:  MOVWF  FF7
05FDC:  CALL   3E86
05FE0:  CLRF   19
05FE2:  BTFSC  FF2.7
05FE4:  BSF    19.7
05FE6:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
05FE8:  MOVLW  01
05FEA:  MOVLB  1
05FEC:  MOVWF  xA0
05FEE:  MOVLW  03
05FF0:  MOVWF  xA1
05FF2:  MOVLB  0
05FF4:  CALL   156C
05FF8:  BTFSC  19.7
05FFA:  BSF    FF2.7
....................    printf(lcd_putc, "  (2) Activar Cuart "); 
05FFC:  MOVLW  90
05FFE:  MOVWF  FF6
06000:  MOVLW  32
06002:  MOVWF  FF7
06004:  CALL   3E86
06008:  CLRF   19
0600A:  BTFSC  FF2.7
0600C:  BSF    19.7
0600E:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06010:  MOVLW  01
06012:  MOVLB  1
06014:  MOVWF  xA0
06016:  MOVLW  04
06018:  MOVWF  xA1
0601A:  MOVLB  0
0601C:  CALL   156C
06020:  BTFSC  19.7
06022:  BSF    FF2.7
....................    printf(lcd_putc, "  (3) Activar Casa  "); 
06024:  MOVLW  A6
06026:  MOVWF  FF6
06028:  MOVLW  32
0602A:  MOVWF  FF7
0602C:  CALL   3E86
....................    break; 
06030:  GOTO   68F4
....................  
....................    case 22: 
06034:  CLRF   19
06036:  BTFSC  FF2.7
06038:  BSF    19.7
0603A:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0603C:  MOVLW  01
0603E:  MOVLB  1
06040:  MOVWF  xA0
06042:  MOVWF  xA1
06044:  MOVLB  0
06046:  CALL   156C
0604A:  BTFSC  19.7
0604C:  BSF    FF2.7
....................    printf(lcd_putc, "====== Alarma ======"); 
0604E:  MOVLW  BC
06050:  MOVWF  FF6
06052:  MOVLW  32
06054:  MOVWF  FF7
06056:  CALL   3E86
0605A:  CLRF   19
0605C:  BTFSC  FF2.7
0605E:  BSF    19.7
06060:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06062:  MOVLW  01
06064:  MOVLB  1
06066:  MOVWF  xA0
06068:  MOVLW  02
0606A:  MOVWF  xA1
0606C:  MOVLB  0
0606E:  CALL   156C
06072:  BTFSC  19.7
06074:  BSF    FF2.7
....................    printf(lcd_putc, "  (1) Activar Total "); 
06076:  MOVLW  D2
06078:  MOVWF  FF6
0607A:  MOVLW  32
0607C:  MOVWF  FF7
0607E:  CALL   3E86
06082:  CLRF   19
06084:  BTFSC  FF2.7
06086:  BSF    19.7
06088:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0608A:  MOVLW  01
0608C:  MOVLB  1
0608E:  MOVWF  xA0
06090:  MOVLW  03
06092:  MOVWF  xA1
06094:  MOVLB  0
06096:  CALL   156C
0609A:  BTFSC  19.7
0609C:  BSF    FF2.7
....................    printf(lcd_putc, "~ (2) Activar Cuart "); 
0609E:  MOVLW  E8
060A0:  MOVWF  FF6
060A2:  MOVLW  32
060A4:  MOVWF  FF7
060A6:  CALL   3E86
060AA:  CLRF   19
060AC:  BTFSC  FF2.7
060AE:  BSF    19.7
060B0:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
060B2:  MOVLW  01
060B4:  MOVLB  1
060B6:  MOVWF  xA0
060B8:  MOVLW  04
060BA:  MOVWF  xA1
060BC:  MOVLB  0
060BE:  CALL   156C
060C2:  BTFSC  19.7
060C4:  BSF    FF2.7
....................    printf(lcd_putc, "  (3) Activar Casa  "); 
060C6:  MOVLW  FE
060C8:  MOVWF  FF6
060CA:  MOVLW  32
060CC:  MOVWF  FF7
060CE:  CALL   3E86
....................    break; 
060D2:  GOTO   68F4
....................  
....................    case 23: 
060D6:  CLRF   19
060D8:  BTFSC  FF2.7
060DA:  BSF    19.7
060DC:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
060DE:  MOVLW  01
060E0:  MOVLB  1
060E2:  MOVWF  xA0
060E4:  MOVWF  xA1
060E6:  MOVLB  0
060E8:  CALL   156C
060EC:  BTFSC  19.7
060EE:  BSF    FF2.7
....................    printf(lcd_putc, "====== Alarma ======"); 
060F0:  MOVLW  14
060F2:  MOVWF  FF6
060F4:  MOVLW  33
060F6:  MOVWF  FF7
060F8:  CALL   3E86
060FC:  CLRF   19
060FE:  BTFSC  FF2.7
06100:  BSF    19.7
06102:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06104:  MOVLW  01
06106:  MOVLB  1
06108:  MOVWF  xA0
0610A:  MOVLW  02
0610C:  MOVWF  xA1
0610E:  MOVLB  0
06110:  CALL   156C
06114:  BTFSC  19.7
06116:  BSF    FF2.7
....................    printf(lcd_putc, "  (2) Activar Cuart "); 
06118:  MOVLW  2A
0611A:  MOVWF  FF6
0611C:  MOVLW  33
0611E:  MOVWF  FF7
06120:  CALL   3E86
06124:  CLRF   19
06126:  BTFSC  FF2.7
06128:  BSF    19.7
0612A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0612C:  MOVLW  01
0612E:  MOVLB  1
06130:  MOVWF  xA0
06132:  MOVLW  03
06134:  MOVWF  xA1
06136:  MOVLB  0
06138:  CALL   156C
0613C:  BTFSC  19.7
0613E:  BSF    FF2.7
....................    printf(lcd_putc, "~ (3) Activar Casa  "); 
06140:  MOVLW  40
06142:  MOVWF  FF6
06144:  MOVLW  33
06146:  MOVWF  FF7
06148:  CALL   3E86
0614C:  CLRF   19
0614E:  BTFSC  FF2.7
06150:  BSF    19.7
06152:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06154:  MOVLW  01
06156:  MOVLB  1
06158:  MOVWF  xA0
0615A:  MOVLW  04
0615C:  MOVWF  xA1
0615E:  MOVLB  0
06160:  CALL   156C
06164:  BTFSC  19.7
06166:  BSF    FF2.7
....................    printf(lcd_putc, "  (4) Configuracion "); 
06168:  MOVLW  56
0616A:  MOVWF  FF6
0616C:  MOVLW  33
0616E:  MOVWF  FF7
06170:  CALL   3E86
....................    break; 
06174:  BRA    68F4
....................  
....................    case 24: 
06176:  CLRF   19
06178:  BTFSC  FF2.7
0617A:  BSF    19.7
0617C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0617E:  MOVLW  01
06180:  MOVLB  1
06182:  MOVWF  xA0
06184:  MOVWF  xA1
06186:  MOVLB  0
06188:  CALL   156C
0618C:  BTFSC  19.7
0618E:  BSF    FF2.7
....................    printf(lcd_putc, "====== Alarma ======"); 
06190:  MOVLW  6C
06192:  MOVWF  FF6
06194:  MOVLW  33
06196:  MOVWF  FF7
06198:  CALL   3E86
0619C:  CLRF   19
0619E:  BTFSC  FF2.7
061A0:  BSF    19.7
061A2:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
061A4:  MOVLW  01
061A6:  MOVLB  1
061A8:  MOVWF  xA0
061AA:  MOVLW  02
061AC:  MOVWF  xA1
061AE:  MOVLB  0
061B0:  CALL   156C
061B4:  BTFSC  19.7
061B6:  BSF    FF2.7
....................    printf(lcd_putc, "  (2) Activar Cuart "); 
061B8:  MOVLW  82
061BA:  MOVWF  FF6
061BC:  MOVLW  33
061BE:  MOVWF  FF7
061C0:  CALL   3E86
061C4:  CLRF   19
061C6:  BTFSC  FF2.7
061C8:  BSF    19.7
061CA:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
061CC:  MOVLW  01
061CE:  MOVLB  1
061D0:  MOVWF  xA0
061D2:  MOVLW  03
061D4:  MOVWF  xA1
061D6:  MOVLB  0
061D8:  CALL   156C
061DC:  BTFSC  19.7
061DE:  BSF    FF2.7
....................    printf(lcd_putc, "  (3) Activar Casa  "); 
061E0:  MOVLW  98
061E2:  MOVWF  FF6
061E4:  MOVLW  33
061E6:  MOVWF  FF7
061E8:  CALL   3E86
061EC:  CLRF   19
061EE:  BTFSC  FF2.7
061F0:  BSF    19.7
061F2:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
061F4:  MOVLW  01
061F6:  MOVLB  1
061F8:  MOVWF  xA0
061FA:  MOVLW  04
061FC:  MOVWF  xA1
061FE:  MOVLB  0
06200:  CALL   156C
06204:  BTFSC  19.7
06206:  BSF    FF2.7
....................    printf(lcd_putc, "~ (4) Configuracion "); 
06208:  MOVLW  AE
0620A:  MOVWF  FF6
0620C:  MOVLW  33
0620E:  MOVWF  FF7
06210:  CALL   3E86
....................    break; 
06214:  BRA    68F4
....................  
....................    case 31: 
06216:  CLRF   19
06218:  BTFSC  FF2.7
0621A:  BSF    19.7
0621C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0621E:  MOVLW  01
06220:  MOVLB  1
06222:  MOVWF  xA0
06224:  MOVWF  xA1
06226:  MOVLB  0
06228:  CALL   156C
0622C:  BTFSC  19.7
0622E:  BSF    FF2.7
....................    printf(lcd_putc, "= Control de luces ="); 
06230:  MOVLW  C4
06232:  MOVWF  FF6
06234:  MOVLW  33
06236:  MOVWF  FF7
06238:  CALL   3E86
0623C:  CLRF   19
0623E:  BTFSC  FF2.7
06240:  BSF    19.7
06242:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06244:  MOVLW  01
06246:  MOVLB  1
06248:  MOVWF  xA0
0624A:  MOVLW  02
0624C:  MOVWF  xA1
0624E:  MOVLB  0
06250:  CALL   156C
06254:  BTFSC  19.7
06256:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (1) Prend/Apagar "); 
06258:  MOVLW  DA
0625A:  MOVWF  FF6
0625C:  MOVLW  33
0625E:  MOVWF  FF7
06260:  CALL   3E86
06264:  CLRF   19
06266:  BTFSC  FF2.7
06268:  BSF    19.7
0626A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0626C:  MOVLW  01
0626E:  MOVLB  1
06270:  MOVWF  xA0
06272:  MOVLW  03
06274:  MOVWF  xA1
06276:  MOVLB  0
06278:  CALL   156C
0627C:  BTFSC  19.7
0627E:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Grupos       "); 
06280:  MOVLW  F0
06282:  MOVWF  FF6
06284:  MOVLW  33
06286:  MOVWF  FF7
06288:  CALL   3E86
0628C:  CLRF   19
0628E:  BTFSC  FF2.7
06290:  BSF    19.7
06292:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06294:  MOVLW  01
06296:  MOVLB  1
06298:  MOVWF  xA0
0629A:  MOVLW  04
0629C:  MOVWF  xA1
0629E:  MOVLB  0
062A0:  CALL   156C
062A4:  BTFSC  19.7
062A6:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Regulacion   "); 
062A8:  MOVLW  06
062AA:  MOVWF  FF6
062AC:  MOVLW  34
062AE:  MOVWF  FF7
062B0:  CALL   3E86
....................    break; 
062B4:  BRA    68F4
....................  
....................    case 32: 
062B6:  CLRF   19
062B8:  BTFSC  FF2.7
062BA:  BSF    19.7
062BC:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
062BE:  MOVLW  01
062C0:  MOVLB  1
062C2:  MOVWF  xA0
062C4:  MOVWF  xA1
062C6:  MOVLB  0
062C8:  CALL   156C
062CC:  BTFSC  19.7
062CE:  BSF    FF2.7
....................    printf(lcd_putc, "= Control de luces ="); 
062D0:  MOVLW  1C
062D2:  MOVWF  FF6
062D4:  MOVLW  34
062D6:  MOVWF  FF7
062D8:  CALL   3E86
062DC:  CLRF   19
062DE:  BTFSC  FF2.7
062E0:  BSF    19.7
062E2:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
062E4:  MOVLW  01
062E6:  MOVLB  1
062E8:  MOVWF  xA0
062EA:  MOVLW  02
062EC:  MOVWF  xA1
062EE:  MOVLB  0
062F0:  CALL   156C
062F4:  BTFSC  19.7
062F6:  BSF    FF2.7
....................    printf(lcd_putc, "   (1) Prend/Apagar "); 
062F8:  MOVLW  32
062FA:  MOVWF  FF6
062FC:  MOVLW  34
062FE:  MOVWF  FF7
06300:  CALL   3E86
06304:  CLRF   19
06306:  BTFSC  FF2.7
06308:  BSF    19.7
0630A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0630C:  MOVLW  01
0630E:  MOVLB  1
06310:  MOVWF  xA0
06312:  MOVLW  03
06314:  MOVWF  xA1
06316:  MOVLB  0
06318:  CALL   156C
0631C:  BTFSC  19.7
0631E:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (2) Grupos       "); 
06320:  MOVLW  48
06322:  MOVWF  FF6
06324:  MOVLW  34
06326:  MOVWF  FF7
06328:  CALL   3E86
0632C:  CLRF   19
0632E:  BTFSC  FF2.7
06330:  BSF    19.7
06332:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06334:  MOVLW  01
06336:  MOVLB  1
06338:  MOVWF  xA0
0633A:  MOVLW  04
0633C:  MOVWF  xA1
0633E:  MOVLB  0
06340:  CALL   156C
06344:  BTFSC  19.7
06346:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Regulacion   "); 
06348:  MOVLW  5E
0634A:  MOVWF  FF6
0634C:  MOVLW  34
0634E:  MOVWF  FF7
06350:  CALL   3E86
....................    break; 
06354:  BRA    68F4
....................  
....................    case 33: 
06356:  CLRF   19
06358:  BTFSC  FF2.7
0635A:  BSF    19.7
0635C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0635E:  MOVLW  01
06360:  MOVLB  1
06362:  MOVWF  xA0
06364:  MOVWF  xA1
06366:  MOVLB  0
06368:  CALL   156C
0636C:  BTFSC  19.7
0636E:  BSF    FF2.7
....................    printf(lcd_putc, "= Control de luces ="); 
06370:  MOVLW  74
06372:  MOVWF  FF6
06374:  MOVLW  34
06376:  MOVWF  FF7
06378:  CALL   3E86
0637C:  CLRF   19
0637E:  BTFSC  FF2.7
06380:  BSF    19.7
06382:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06384:  MOVLW  01
06386:  MOVLB  1
06388:  MOVWF  xA0
0638A:  MOVLW  02
0638C:  MOVWF  xA1
0638E:  MOVLB  0
06390:  CALL   156C
06394:  BTFSC  19.7
06396:  BSF    FF2.7
....................    printf(lcd_putc, "   (1) Prend/Apagar "); 
06398:  MOVLW  8A
0639A:  MOVWF  FF6
0639C:  MOVLW  34
0639E:  MOVWF  FF7
063A0:  CALL   3E86
063A4:  CLRF   19
063A6:  BTFSC  FF2.7
063A8:  BSF    19.7
063AA:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
063AC:  MOVLW  01
063AE:  MOVLB  1
063B0:  MOVWF  xA0
063B2:  MOVLW  03
063B4:  MOVWF  xA1
063B6:  MOVLB  0
063B8:  CALL   156C
063BC:  BTFSC  19.7
063BE:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Grupos       "); 
063C0:  MOVLW  A0
063C2:  MOVWF  FF6
063C4:  MOVLW  34
063C6:  MOVWF  FF7
063C8:  CALL   3E86
063CC:  CLRF   19
063CE:  BTFSC  FF2.7
063D0:  BSF    19.7
063D2:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
063D4:  MOVLW  01
063D6:  MOVLB  1
063D8:  MOVWF  xA0
063DA:  MOVLW  04
063DC:  MOVWF  xA1
063DE:  MOVLB  0
063E0:  CALL   156C
063E4:  BTFSC  19.7
063E6:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (3) Regulacion   "); 
063E8:  MOVLW  B6
063EA:  MOVWF  FF6
063EC:  MOVLW  34
063EE:  MOVWF  FF7
063F0:  CALL   3E86
....................    break; 
063F4:  BRA    68F4
.................... /* 
....................    case 41: 
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
....................    printf(lcd_putc, "== Nivel Casandra =="); 
....................    lcd_gotoxy(1,2); 
....................    printf(lcd_putc, " ~ (1) Serv y Autom "); 
....................    lcd_gotoxy(1,3); 
....................    printf(lcd_putc, "   (2) Solo Serv    "); 
....................    lcd_gotoxy(1,4); 
....................    printf(lcd_putc, "   (3) Solo Autom   "); 
....................    break; 
....................  
....................    case 42: 
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
....................    printf(lcd_putc, "== Nivel Casandra =="); 
....................    lcd_gotoxy(1,2); 
....................    printf(lcd_putc, "   (1) Serv y Autom "); 
....................    lcd_gotoxy(1,3); 
....................    printf(lcd_putc, " ~ (2) Solo Serv    "); 
....................    lcd_gotoxy(1,4); 
....................    printf(lcd_putc, "   (3) Solo Autom   "); 
....................    break; 
....................  
....................    case 43: 
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
....................    printf(lcd_putc, "== Nivel Casandra =="); 
....................    lcd_gotoxy(1,2); 
....................    printf(lcd_putc, "   (2) Solo Serv    "); 
....................    lcd_gotoxy(1,3); 
....................    printf(lcd_putc, " ~ (3) Solo Autom   "); 
....................    lcd_gotoxy(1,4); 
....................    printf(lcd_putc, "   (4) Nada :(      "); 
....................    break; 
....................  
....................    case 44: 
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
....................    printf(lcd_putc, "== Nivel Casandra =="); 
....................    lcd_gotoxy(1,2); 
....................    printf(lcd_putc, "   (2) Solo Serv    "); 
....................    lcd_gotoxy(1,3); 
....................    printf(lcd_putc, "   (3) Solo Autom   "); 
....................    lcd_gotoxy(1,4); 
....................    printf(lcd_putc, " ~ (4) Nada :(      "); 
....................    break; 
.................... */ 
....................    case 51: 
063F6:  CLRF   19
063F8:  BTFSC  FF2.7
063FA:  BSF    19.7
063FC:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
063FE:  MOVLW  01
06400:  MOVLB  1
06402:  MOVWF  xA0
06404:  MOVWF  xA1
06406:  MOVLB  0
06408:  CALL   156C
0640C:  BTFSC  19.7
0640E:  BSF    FF2.7
....................    printf(lcd_putc, "==== Automatico ===="); 
06410:  MOVLW  CC
06412:  MOVWF  FF6
06414:  MOVLW  34
06416:  MOVWF  FF7
06418:  CALL   3E86
0641C:  CLRF   19
0641E:  BTFSC  FF2.7
06420:  BSF    19.7
06422:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06424:  MOVLW  01
06426:  MOVLB  1
06428:  MOVWF  xA0
0642A:  MOVLW  02
0642C:  MOVWF  xA1
0642E:  MOVLB  0
06430:  CALL   156C
06434:  BTFSC  19.7
06436:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (1) Elegir dias  "); 
06438:  MOVLW  E2
0643A:  MOVWF  FF6
0643C:  MOVLW  34
0643E:  MOVWF  FF7
06440:  CALL   3E86
06444:  CLRF   19
06446:  BTFSC  FF2.7
06448:  BSF    19.7
0644A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0644C:  MOVLW  01
0644E:  MOVLB  1
06450:  MOVWF  xA0
06452:  MOVLW  03
06454:  MOVWF  xA1
06456:  MOVLB  0
06458:  CALL   156C
0645C:  BTFSC  19.7
0645E:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Horario      "); 
06460:  MOVLW  F8
06462:  MOVWF  FF6
06464:  MOVLW  34
06466:  MOVWF  FF7
06468:  CALL   3E86
0646C:  CLRF   19
0646E:  BTFSC  FF2.7
06470:  BSF    19.7
06472:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06474:  MOVLW  01
06476:  MOVLB  1
06478:  MOVWF  xA0
0647A:  MOVLW  04
0647C:  MOVWF  xA1
0647E:  MOVLB  0
06480:  CALL   156C
06484:  BTFSC  19.7
06486:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Elegir luces "); 
06488:  MOVLW  0E
0648A:  MOVWF  FF6
0648C:  MOVLW  35
0648E:  MOVWF  FF7
06490:  CALL   3E86
....................    break; 
06494:  BRA    68F4
....................  
....................    case 52: 
06496:  CLRF   19
06498:  BTFSC  FF2.7
0649A:  BSF    19.7
0649C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0649E:  MOVLW  01
064A0:  MOVLB  1
064A2:  MOVWF  xA0
064A4:  MOVWF  xA1
064A6:  MOVLB  0
064A8:  CALL   156C
064AC:  BTFSC  19.7
064AE:  BSF    FF2.7
....................    printf(lcd_putc, "==== Automatico ===="); 
064B0:  MOVLW  24
064B2:  MOVWF  FF6
064B4:  MOVLW  35
064B6:  MOVWF  FF7
064B8:  CALL   3E86
064BC:  CLRF   19
064BE:  BTFSC  FF2.7
064C0:  BSF    19.7
064C2:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
064C4:  MOVLW  01
064C6:  MOVLB  1
064C8:  MOVWF  xA0
064CA:  MOVLW  02
064CC:  MOVWF  xA1
064CE:  MOVLB  0
064D0:  CALL   156C
064D4:  BTFSC  19.7
064D6:  BSF    FF2.7
....................    printf(lcd_putc, "   (1) Elegir dias  "); 
064D8:  MOVLW  3A
064DA:  MOVWF  FF6
064DC:  MOVLW  35
064DE:  MOVWF  FF7
064E0:  CALL   3E86
064E4:  CLRF   19
064E6:  BTFSC  FF2.7
064E8:  BSF    19.7
064EA:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
064EC:  MOVLW  01
064EE:  MOVLB  1
064F0:  MOVWF  xA0
064F2:  MOVLW  03
064F4:  MOVWF  xA1
064F6:  MOVLB  0
064F8:  CALL   156C
064FC:  BTFSC  19.7
064FE:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (2) Horario      "); 
06500:  MOVLW  50
06502:  MOVWF  FF6
06504:  MOVLW  35
06506:  MOVWF  FF7
06508:  CALL   3E86
0650C:  CLRF   19
0650E:  BTFSC  FF2.7
06510:  BSF    19.7
06512:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06514:  MOVLW  01
06516:  MOVLB  1
06518:  MOVWF  xA0
0651A:  MOVLW  04
0651C:  MOVWF  xA1
0651E:  MOVLB  0
06520:  CALL   156C
06524:  BTFSC  19.7
06526:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Elegir luces "); 
06528:  MOVLW  66
0652A:  MOVWF  FF6
0652C:  MOVLW  35
0652E:  MOVWF  FF7
06530:  CALL   3E86
....................    break; 
06534:  BRA    68F4
....................  
....................    case 53: 
06536:  CLRF   19
06538:  BTFSC  FF2.7
0653A:  BSF    19.7
0653C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0653E:  MOVLW  01
06540:  MOVLB  1
06542:  MOVWF  xA0
06544:  MOVWF  xA1
06546:  MOVLB  0
06548:  CALL   156C
0654C:  BTFSC  19.7
0654E:  BSF    FF2.7
....................    printf(lcd_putc, "==== Automatico ===="); 
06550:  MOVLW  7C
06552:  MOVWF  FF6
06554:  MOVLW  35
06556:  MOVWF  FF7
06558:  CALL   3E86
0655C:  CLRF   19
0655E:  BTFSC  FF2.7
06560:  BSF    19.7
06562:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06564:  MOVLW  01
06566:  MOVLB  1
06568:  MOVWF  xA0
0656A:  MOVLW  02
0656C:  MOVWF  xA1
0656E:  MOVLB  0
06570:  CALL   156C
06574:  BTFSC  19.7
06576:  BSF    FF2.7
....................    printf(lcd_putc, "   (1) Elegir dias  "); 
06578:  MOVLW  92
0657A:  MOVWF  FF6
0657C:  MOVLW  35
0657E:  MOVWF  FF7
06580:  CALL   3E86
06584:  CLRF   19
06586:  BTFSC  FF2.7
06588:  BSF    19.7
0658A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0658C:  MOVLW  01
0658E:  MOVLB  1
06590:  MOVWF  xA0
06592:  MOVLW  03
06594:  MOVWF  xA1
06596:  MOVLB  0
06598:  CALL   156C
0659C:  BTFSC  19.7
0659E:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Horario      "); 
065A0:  MOVLW  A8
065A2:  MOVWF  FF6
065A4:  MOVLW  35
065A6:  MOVWF  FF7
065A8:  CALL   3E86
065AC:  CLRF   19
065AE:  BTFSC  FF2.7
065B0:  BSF    19.7
065B2:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
065B4:  MOVLW  01
065B6:  MOVLB  1
065B8:  MOVWF  xA0
065BA:  MOVLW  04
065BC:  MOVWF  xA1
065BE:  MOVLB  0
065C0:  CALL   156C
065C4:  BTFSC  19.7
065C6:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (3) Elegir luces "); 
065C8:  MOVLW  BE
065CA:  MOVWF  FF6
065CC:  MOVLW  35
065CE:  MOVWF  FF7
065D0:  CALL   3E86
....................    break; 
065D4:  BRA    68F4
....................  
....................    case 61: 
065D6:  CLRF   19
065D8:  BTFSC  FF2.7
065DA:  BSF    19.7
065DC:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
065DE:  MOVLW  01
065E0:  MOVLB  1
065E2:  MOVWF  xA0
065E4:  MOVWF  xA1
065E6:  MOVLB  0
065E8:  CALL   156C
065EC:  BTFSC  19.7
065EE:  BSF    FF2.7
....................    printf(lcd_putc, "=== Configuracion =="); 
065F0:  MOVLW  D4
065F2:  MOVWF  FF6
065F4:  MOVLW  35
065F6:  MOVWF  FF7
065F8:  CALL   3E86
065FC:  CLRF   19
065FE:  BTFSC  FF2.7
06600:  BSF    19.7
06602:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06604:  MOVLW  01
06606:  MOVLB  1
06608:  MOVWF  xA0
0660A:  MOVLW  02
0660C:  MOVWF  xA1
0660E:  MOVLB  0
06610:  CALL   156C
06614:  BTFSC  19.7
06616:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (1) Cambiar Clave"); 
06618:  MOVLW  EA
0661A:  MOVWF  FF6
0661C:  MOVLW  35
0661E:  MOVWF  FF7
06620:  CALL   3E86
06624:  CLRF   19
06626:  BTFSC  FF2.7
06628:  BSF    19.7
0662A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0662C:  MOVLW  01
0662E:  MOVLB  1
06630:  MOVWF  xA0
06632:  MOVLW  03
06634:  MOVWF  xA1
06636:  MOVLB  0
06638:  CALL   156C
0663C:  BTFSC  19.7
0663E:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Fecha y hora "); 
06640:  MOVLW  00
06642:  MOVWF  FF6
06644:  MOVLW  36
06646:  MOVWF  FF7
06648:  CALL   3E86
0664C:  CLRF   19
0664E:  BTFSC  FF2.7
06650:  BSF    19.7
06652:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06654:  MOVLW  01
06656:  MOVLB  1
06658:  MOVWF  xA0
0665A:  MOVLW  04
0665C:  MOVWF  xA1
0665E:  MOVLB  0
06660:  CALL   156C
06664:  BTFSC  19.7
06666:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Fotocelula   "); 
06668:  MOVLW  16
0666A:  MOVWF  FF6
0666C:  MOVLW  36
0666E:  MOVWF  FF7
06670:  CALL   3E86
....................    break; 
06674:  BRA    68F4
....................  
....................    case 62: 
06676:  CLRF   19
06678:  BTFSC  FF2.7
0667A:  BSF    19.7
0667C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0667E:  MOVLW  01
06680:  MOVLB  1
06682:  MOVWF  xA0
06684:  MOVWF  xA1
06686:  MOVLB  0
06688:  CALL   156C
0668C:  BTFSC  19.7
0668E:  BSF    FF2.7
....................    printf(lcd_putc, "=== Configuracion =="); 
06690:  MOVLW  2C
06692:  MOVWF  FF6
06694:  MOVLW  36
06696:  MOVWF  FF7
06698:  CALL   3E86
0669C:  CLRF   19
0669E:  BTFSC  FF2.7
066A0:  BSF    19.7
066A2:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
066A4:  MOVLW  01
066A6:  MOVLB  1
066A8:  MOVWF  xA0
066AA:  MOVLW  02
066AC:  MOVWF  xA1
066AE:  MOVLB  0
066B0:  CALL   156C
066B4:  BTFSC  19.7
066B6:  BSF    FF2.7
....................    printf(lcd_putc, "   (1) Cambiar Clave"); 
066B8:  MOVLW  42
066BA:  MOVWF  FF6
066BC:  MOVLW  36
066BE:  MOVWF  FF7
066C0:  CALL   3E86
066C4:  CLRF   19
066C6:  BTFSC  FF2.7
066C8:  BSF    19.7
066CA:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
066CC:  MOVLW  01
066CE:  MOVLB  1
066D0:  MOVWF  xA0
066D2:  MOVLW  03
066D4:  MOVWF  xA1
066D6:  MOVLB  0
066D8:  CALL   156C
066DC:  BTFSC  19.7
066DE:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (2) Fecha y hora "); 
066E0:  MOVLW  58
066E2:  MOVWF  FF6
066E4:  MOVLW  36
066E6:  MOVWF  FF7
066E8:  CALL   3E86
066EC:  CLRF   19
066EE:  BTFSC  FF2.7
066F0:  BSF    19.7
066F2:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
066F4:  MOVLW  01
066F6:  MOVLB  1
066F8:  MOVWF  xA0
066FA:  MOVLW  04
066FC:  MOVWF  xA1
066FE:  MOVLB  0
06700:  CALL   156C
06704:  BTFSC  19.7
06706:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Fotocelula   "); 
06708:  MOVLW  6E
0670A:  MOVWF  FF6
0670C:  MOVLW  36
0670E:  MOVWF  FF7
06710:  CALL   3E86
....................    break; 
06714:  BRA    68F4
....................  
....................    case 63: 
06716:  CLRF   19
06718:  BTFSC  FF2.7
0671A:  BSF    19.7
0671C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0671E:  MOVLW  01
06720:  MOVLB  1
06722:  MOVWF  xA0
06724:  MOVWF  xA1
06726:  MOVLB  0
06728:  CALL   156C
0672C:  BTFSC  19.7
0672E:  BSF    FF2.7
....................    printf(lcd_putc, "=== Configuracion =="); 
06730:  MOVLW  84
06732:  MOVWF  FF6
06734:  MOVLW  36
06736:  MOVWF  FF7
06738:  CALL   3E86
0673C:  CLRF   19
0673E:  BTFSC  FF2.7
06740:  BSF    19.7
06742:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06744:  MOVLW  01
06746:  MOVLB  1
06748:  MOVWF  xA0
0674A:  MOVLW  02
0674C:  MOVWF  xA1
0674E:  MOVLB  0
06750:  CALL   156C
06754:  BTFSC  19.7
06756:  BSF    FF2.7
....................    printf(lcd_putc, "   (2) Fecha y hora "); 
06758:  MOVLW  9A
0675A:  MOVWF  FF6
0675C:  MOVLW  36
0675E:  MOVWF  FF7
06760:  CALL   3E86
06764:  CLRF   19
06766:  BTFSC  FF2.7
06768:  BSF    19.7
0676A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0676C:  MOVLW  01
0676E:  MOVLB  1
06770:  MOVWF  xA0
06772:  MOVLW  03
06774:  MOVWF  xA1
06776:  MOVLB  0
06778:  CALL   156C
0677C:  BTFSC  19.7
0677E:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (3) Fotocelula   "); 
06780:  MOVLW  B0
06782:  MOVWF  FF6
06784:  MOVLW  36
06786:  MOVWF  FF7
06788:  CALL   3E86
0678C:  CLRF   19
0678E:  BTFSC  FF2.7
06790:  BSF    19.7
06792:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06794:  MOVLW  01
06796:  MOVLB  1
06798:  MOVWF  xA0
0679A:  MOVLW  04
0679C:  MOVWF  xA1
0679E:  MOVLB  0
067A0:  CALL   156C
067A4:  BTFSC  19.7
067A6:  BSF    FF2.7
....................    printf(lcd_putc, "   (4) Resetear :O  "); 
067A8:  MOVLW  C6
067AA:  MOVWF  FF6
067AC:  MOVLW  36
067AE:  MOVWF  FF7
067B0:  CALL   3E86
....................    break; 
067B4:  BRA    68F4
....................  
....................    case 64: 
067B6:  CLRF   19
067B8:  BTFSC  FF2.7
067BA:  BSF    19.7
067BC:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
067BE:  MOVLW  01
067C0:  MOVLB  1
067C2:  MOVWF  xA0
067C4:  MOVWF  xA1
067C6:  MOVLB  0
067C8:  CALL   156C
067CC:  BTFSC  19.7
067CE:  BSF    FF2.7
....................    printf(lcd_putc, "=== Configuracion =="); 
067D0:  MOVLW  DC
067D2:  MOVWF  FF6
067D4:  MOVLW  36
067D6:  MOVWF  FF7
067D8:  CALL   3E86
067DC:  CLRF   19
067DE:  BTFSC  FF2.7
067E0:  BSF    19.7
067E2:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
067E4:  MOVLW  01
067E6:  MOVLB  1
067E8:  MOVWF  xA0
067EA:  MOVLW  02
067EC:  MOVWF  xA1
067EE:  MOVLB  0
067F0:  CALL   156C
067F4:  BTFSC  19.7
067F6:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Fotocelula   "); 
067F8:  MOVLW  F2
067FA:  MOVWF  FF6
067FC:  MOVLW  36
067FE:  MOVWF  FF7
06800:  CALL   3E86
06804:  CLRF   19
06806:  BTFSC  FF2.7
06808:  BSF    19.7
0680A:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
0680C:  MOVLW  01
0680E:  MOVLB  1
06810:  MOVWF  xA0
06812:  MOVLW  03
06814:  MOVWF  xA1
06816:  MOVLB  0
06818:  CALL   156C
0681C:  BTFSC  19.7
0681E:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (4) Resetear :O  "); 
06820:  MOVLW  08
06822:  MOVWF  FF6
06824:  MOVLW  37
06826:  MOVWF  FF7
06828:  CALL   3E86
0682C:  CLRF   19
0682E:  BTFSC  FF2.7
06830:  BSF    19.7
06832:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
06834:  MOVLW  01
06836:  MOVLB  1
06838:  MOVWF  xA0
0683A:  MOVLW  04
0683C:  MOVWF  xA1
0683E:  MOVLB  0
06840:  CALL   156C
06844:  BTFSC  19.7
06846:  BSF    FF2.7
....................    printf(lcd_putc, "   (5) Acerca de..  "); 
06848:  MOVLW  1E
0684A:  MOVWF  FF6
0684C:  MOVLW  37
0684E:  MOVWF  FF7
06850:  CALL   3E86
....................    break; 
06854:  BRA    68F4
....................  
....................  
....................    case 65: 
06856:  CLRF   19
06858:  BTFSC  FF2.7
0685A:  BSF    19.7
0685C:  BCF    FF2.7
.................... //   Tiempo(); // Tomo el tiempo 
.................... //   Ambiente(); // Tomo las variables ambientales (incluidas las remotas con cuidado de no saturar el bus) 
.................... //   output_low(LCDLED); 
....................    lcd_gotoxy(1,1); 
0685E:  MOVLW  01
06860:  MOVLB  1
06862:  MOVWF  xA0
06864:  MOVWF  xA1
06866:  MOVLB  0
06868:  CALL   156C
0686C:  BTFSC  19.7
0686E:  BSF    FF2.7
....................    printf(lcd_putc, "=== Configuracion =="); 
06870:  MOVLW  34
06872:  MOVWF  FF6
06874:  MOVLW  37
06876:  MOVWF  FF7
06878:  CALL   3E86
0687C:  CLRF   19
0687E:  BTFSC  FF2.7
06880:  BSF    19.7
06882:  BCF    FF2.7
....................    lcd_gotoxy(1,2); 
06884:  MOVLW  01
06886:  MOVLB  1
06888:  MOVWF  xA0
0688A:  MOVLW  02
0688C:  MOVWF  xA1
0688E:  MOVLB  0
06890:  CALL   156C
06894:  BTFSC  19.7
06896:  BSF    FF2.7
....................    printf(lcd_putc, "   (3) Fotocelula   "); 
06898:  MOVLW  4A
0689A:  MOVWF  FF6
0689C:  MOVLW  37
0689E:  MOVWF  FF7
068A0:  CALL   3E86
068A4:  CLRF   19
068A6:  BTFSC  FF2.7
068A8:  BSF    19.7
068AA:  BCF    FF2.7
....................    lcd_gotoxy(1,3); 
068AC:  MOVLW  01
068AE:  MOVLB  1
068B0:  MOVWF  xA0
068B2:  MOVLW  03
068B4:  MOVWF  xA1
068B6:  MOVLB  0
068B8:  CALL   156C
068BC:  BTFSC  19.7
068BE:  BSF    FF2.7
....................    printf(lcd_putc, "   (4) Resetear :O  "); 
068C0:  MOVLW  60
068C2:  MOVWF  FF6
068C4:  MOVLW  37
068C6:  MOVWF  FF7
068C8:  CALL   3E86
068CC:  CLRF   19
068CE:  BTFSC  FF2.7
068D0:  BSF    19.7
068D2:  BCF    FF2.7
....................    lcd_gotoxy(1,4); 
068D4:  MOVLW  01
068D6:  MOVLB  1
068D8:  MOVWF  xA0
068DA:  MOVLW  04
068DC:  MOVWF  xA1
068DE:  MOVLB  0
068E0:  CALL   156C
068E4:  BTFSC  19.7
068E6:  BSF    FF2.7
....................    printf(lcd_putc, " ~ (5) Acerca de..  "); 
068E8:  MOVLW  76
068EA:  MOVWF  FF6
068EC:  MOVLW  37
068EE:  MOVWF  FF7
068F0:  CALL   3E86
....................    break; 
....................   
.................... } 
....................  
.................... } 
068F4:  RETURN 0
....................  
.................... void Tiempo(){ 
.................... restart_wdt(); 
*
01F06:  CLRWDT
.................... ds1307_get_date(day,month,year,dow); 
.................... delay_ms(2); 
*
01FBC:  MOVLW  02
01FBE:  MOVLB  1
01FC0:  MOVWF  xA8
01FC2:  MOVLB  0
01FC4:  CALL   1456
....................  
.................... ds1307_get_time(hrs,min,sec); 
.................... delay_ms(2); 
*
02066:  MOVLW  02
02068:  MOVLB  1
0206A:  MOVWF  xA8
0206C:  MOVLB  0
0206E:  CALL   1456
....................  
.................... if ((hrs == 0) && (min == 0) && (sec == 0)){ // Empieza un nuevo dia, reseteamos los valores maximos y minimos 
02072:  MOVF   23,F
02074:  BNZ   2084
02076:  MOVF   22,F
02078:  BNZ   2084
0207A:  MOVF   21,F
0207C:  BNZ   2084
.................... TempMax[0]=0; 
0207E:  CLRF   29
.................... TempMin[0]=255; 
02080:  SETF   2D
.................... SolMax[0]=0; 
02082:  CLRF   31
.................... } 
....................  
.................... switch (dow){ 
02084:  MOVF   27,W
02086:  XORLW  01
02088:  BZ    20A4
0208A:  XORLW  03
0208C:  BZ    20BE
0208E:  XORLW  01
02090:  BZ    20D8
02092:  XORLW  07
02094:  BZ    20F2
02096:  XORLW  01
02098:  BZ    210C
0209A:  XORLW  03
0209C:  BZ    2126
0209E:  XORLW  01
020A0:  BZ    2140
020A2:  BRA    215A
....................    case 1: 
....................    Dia="Lun"; 
020A4:  CLRF   FEA
020A6:  MOVLW  3B
020A8:  MOVWF  FE9
020AA:  MOVLW  00
020AC:  CALL   01B6
020B0:  TBLRD*-
020B2:  TBLRD*+
020B4:  MOVF   FF5,W
020B6:  MOVWF  FEE
020B8:  IORLW  00
020BA:  BNZ   20B2
....................    break; 
020BC:  BRA    2172
....................  
....................    case 2: 
....................    Dia="Mar"; 
020BE:  CLRF   FEA
020C0:  MOVLW  3B
020C2:  MOVWF  FE9
020C4:  MOVLW  00
020C6:  CALL   01DE
020CA:  TBLRD*-
020CC:  TBLRD*+
020CE:  MOVF   FF5,W
020D0:  MOVWF  FEE
020D2:  IORLW  00
020D4:  BNZ   20CC
....................    break; 
020D6:  BRA    2172
....................  
....................    case 3: 
....................    Dia="Mie"; 
020D8:  CLRF   FEA
020DA:  MOVLW  3B
020DC:  MOVWF  FE9
020DE:  MOVLW  00
020E0:  CALL   0454
020E4:  TBLRD*-
020E6:  TBLRD*+
020E8:  MOVF   FF5,W
020EA:  MOVWF  FEE
020EC:  IORLW  00
020EE:  BNZ   20E6
....................    break; 
020F0:  BRA    2172
....................  
....................    case 4: 
....................    Dia="Jue"; 
020F2:  CLRF   FEA
020F4:  MOVLW  3B
020F6:  MOVWF  FE9
020F8:  MOVLW  00
020FA:  CALL   021E
020FE:  TBLRD*-
02100:  TBLRD*+
02102:  MOVF   FF5,W
02104:  MOVWF  FEE
02106:  IORLW  00
02108:  BNZ   2100
....................    break; 
0210A:  BRA    2172
....................  
....................    case 5: 
....................    Dia="Vie"; 
0210C:  CLRF   FEA
0210E:  MOVLW  3B
02110:  MOVWF  FE9
02112:  MOVLW  00
02114:  CALL   0232
02118:  TBLRD*-
0211A:  TBLRD*+
0211C:  MOVF   FF5,W
0211E:  MOVWF  FEE
02120:  IORLW  00
02122:  BNZ   211A
....................    break; 
02124:  BRA    2172
....................  
....................    case 6: 
....................    Dia="Sab"; 
02126:  CLRF   FEA
02128:  MOVLW  3B
0212A:  MOVWF  FE9
0212C:  MOVLW  00
0212E:  CALL   0246
02132:  TBLRD*-
02134:  TBLRD*+
02136:  MOVF   FF5,W
02138:  MOVWF  FEE
0213A:  IORLW  00
0213C:  BNZ   2134
....................    break; 
0213E:  BRA    2172
....................  
....................    case 7: 
....................    Dia="Dom"; 
02140:  CLRF   FEA
02142:  MOVLW  3B
02144:  MOVWF  FE9
02146:  MOVLW  00
02148:  CALL   025A
0214C:  TBLRD*-
0214E:  TBLRD*+
02150:  MOVF   FF5,W
02152:  MOVWF  FEE
02154:  IORLW  00
02156:  BNZ   214E
....................    break; 
02158:  BRA    2172
....................  
....................    default: 
....................    Dia="??"; 
0215A:  CLRF   FEA
0215C:  MOVLW  3B
0215E:  MOVWF  FE9
02160:  MOVLW  00
02162:  CALL   0468
02166:  TBLRD*-
02168:  TBLRD*+
0216A:  MOVF   FF5,W
0216C:  MOVWF  FEE
0216E:  IORLW  00
02170:  BNZ   2168
....................    break; 
.................... } 
....................  
.................... switch (month){ 
02172:  MOVF   25,W
02174:  XORLW  01
02176:  BZ    21B0
02178:  XORLW  03
0217A:  BZ    21CA
0217C:  XORLW  01
0217E:  BZ    21E4
02180:  XORLW  07
02182:  BZ    21FE
02184:  XORLW  01
02186:  BZ    2218
02188:  XORLW  03
0218A:  BZ    2232
0218C:  XORLW  01
0218E:  BZ    224C
02190:  XORLW  0F
02192:  BTFSC  FD8.2
02194:  BRA    2266
02196:  XORLW  01
02198:  BTFSC  FD8.2
0219A:  BRA    2280
0219C:  XORLW  03
0219E:  BTFSC  FD8.2
021A0:  BRA    229A
021A2:  XORLW  01
021A4:  BTFSC  FD8.2
021A6:  BRA    22B4
021A8:  XORLW  07
021AA:  BTFSC  FD8.2
021AC:  BRA    22CE
021AE:  BRA    22E8
....................    case 1: 
....................    Mes="Ene"; 
021B0:  CLRF   FEA
021B2:  MOVLW  3F
021B4:  MOVWF  FE9
021B6:  MOVLW  00
021B8:  CALL   0378
021BC:  TBLRD*-
021BE:  TBLRD*+
021C0:  MOVF   FF5,W
021C2:  MOVWF  FEE
021C4:  IORLW  00
021C6:  BNZ   21BE
....................    break; 
021C8:  BRA    2300
....................  
....................    case 2: 
....................    Mes="Feb"; 
021CA:  CLRF   FEA
021CC:  MOVLW  3F
021CE:  MOVWF  FE9
021D0:  MOVLW  00
021D2:  CALL   038C
021D6:  TBLRD*-
021D8:  TBLRD*+
021DA:  MOVF   FF5,W
021DC:  MOVWF  FEE
021DE:  IORLW  00
021E0:  BNZ   21D8
....................    break; 
021E2:  BRA    2300
....................  
....................    case 3: 
....................    Mes="Mar"; 
021E4:  CLRF   FEA
021E6:  MOVLW  3F
021E8:  MOVWF  FE9
021EA:  MOVLW  00
021EC:  CALL   01DE
021F0:  TBLRD*-
021F2:  TBLRD*+
021F4:  MOVF   FF5,W
021F6:  MOVWF  FEE
021F8:  IORLW  00
021FA:  BNZ   21F2
....................    break; 
021FC:  BRA    2300
....................  
....................    case 4: 
....................    Mes="Abr"; 
021FE:  CLRF   FEA
02200:  MOVLW  3F
02202:  MOVWF  FE9
02204:  MOVLW  00
02206:  CALL   03A0
0220A:  TBLRD*-
0220C:  TBLRD*+
0220E:  MOVF   FF5,W
02210:  MOVWF  FEE
02212:  IORLW  00
02214:  BNZ   220C
....................    break; 
02216:  BRA    2300
....................  
....................    case 5: 
....................    Mes="May"; 
02218:  CLRF   FEA
0221A:  MOVLW  3F
0221C:  MOVWF  FE9
0221E:  MOVLW  00
02220:  CALL   03B4
02224:  TBLRD*-
02226:  TBLRD*+
02228:  MOVF   FF5,W
0222A:  MOVWF  FEE
0222C:  IORLW  00
0222E:  BNZ   2226
....................    break; 
02230:  BRA    2300
....................  
....................    case 6: 
....................    Mes="Jun"; 
02232:  CLRF   FEA
02234:  MOVLW  3F
02236:  MOVWF  FE9
02238:  MOVLW  00
0223A:  CALL   03C8
0223E:  TBLRD*-
02240:  TBLRD*+
02242:  MOVF   FF5,W
02244:  MOVWF  FEE
02246:  IORLW  00
02248:  BNZ   2240
....................    break; 
0224A:  BRA    2300
....................  
....................    case 7: 
....................    Mes="Jul"; 
0224C:  CLRF   FEA
0224E:  MOVLW  3F
02250:  MOVWF  FE9
02252:  MOVLW  00
02254:  CALL   03DC
02258:  TBLRD*-
0225A:  TBLRD*+
0225C:  MOVF   FF5,W
0225E:  MOVWF  FEE
02260:  IORLW  00
02262:  BNZ   225A
....................    break; 
02264:  BRA    2300
....................  
....................    case 8: 
....................    Mes="Ago"; 
02266:  CLRF   FEA
02268:  MOVLW  3F
0226A:  MOVWF  FE9
0226C:  MOVLW  00
0226E:  CALL   03F0
02272:  TBLRD*-
02274:  TBLRD*+
02276:  MOVF   FF5,W
02278:  MOVWF  FEE
0227A:  IORLW  00
0227C:  BNZ   2274
....................    break; 
0227E:  BRA    2300
....................  
....................    case 9: 
....................    Mes="Sep"; 
02280:  CLRF   FEA
02282:  MOVLW  3F
02284:  MOVWF  FE9
02286:  MOVLW  00
02288:  CALL   0404
0228C:  TBLRD*-
0228E:  TBLRD*+
02290:  MOVF   FF5,W
02292:  MOVWF  FEE
02294:  IORLW  00
02296:  BNZ   228E
....................    break; 
02298:  BRA    2300
....................  
....................    case 10: 
....................    Mes="Oct"; 
0229A:  CLRF   FEA
0229C:  MOVLW  3F
0229E:  MOVWF  FE9
022A0:  MOVLW  00
022A2:  CALL   0418
022A6:  TBLRD*-
022A8:  TBLRD*+
022AA:  MOVF   FF5,W
022AC:  MOVWF  FEE
022AE:  IORLW  00
022B0:  BNZ   22A8
....................    break; 
022B2:  BRA    2300
....................  
....................    case 11: 
....................    Mes="Nov"; 
022B4:  CLRF   FEA
022B6:  MOVLW  3F
022B8:  MOVWF  FE9
022BA:  MOVLW  00
022BC:  CALL   042C
022C0:  TBLRD*-
022C2:  TBLRD*+
022C4:  MOVF   FF5,W
022C6:  MOVWF  FEE
022C8:  IORLW  00
022CA:  BNZ   22C2
....................    break; 
022CC:  BRA    2300
....................  
....................    case 12: 
....................    Mes="Dic"; 
022CE:  CLRF   FEA
022D0:  MOVLW  3F
022D2:  MOVWF  FE9
022D4:  MOVLW  00
022D6:  CALL   0440
022DA:  TBLRD*-
022DC:  TBLRD*+
022DE:  MOVF   FF5,W
022E0:  MOVWF  FEE
022E2:  IORLW  00
022E4:  BNZ   22DC
....................    break; 
022E6:  BRA    2300
....................     
....................    default: 
....................    Dia="??"; 
022E8:  CLRF   FEA
022EA:  MOVLW  3B
022EC:  MOVWF  FE9
022EE:  MOVLW  00
022F0:  CALL   0468
022F4:  TBLRD*-
022F6:  TBLRD*+
022F8:  MOVF   FF5,W
022FA:  MOVWF  FEE
022FC:  IORLW  00
022FE:  BNZ   22F6
....................    break; 
....................  
.................... } 
....................  
.................... } 
02300:  GOTO   2F7C (RETURN)
....................  
.................... void Ambiente(){ 
.................... restart_wdt(); 
*
02BBE:  CLRWDT
.................... state = get_data(); 
02BC0:  BRA    2AEC
02BC2:  MOVFF  01,20
....................  
.................... if (TempOut > TempMax[0]){ // tenemos una nueva temperatura maxima del dia 
02BC6:  MOVF   43,W
02BC8:  SUBWF  29,W
02BCA:  BTFSC  FD8.0
02BCC:  BRA    2CFE
.................... TempMax[0] = TempOut; 
02BCE:  MOVFF  43,29
.................... long puntero; 
.................... puntero = (long) ((dow * 5) + 95); 
02BD2:  MOVF   27,W
02BD4:  MULLW  05
02BD6:  MOVF   FF3,W
02BD8:  ADDLW  5F
02BDA:  MOVLB  1
02BDC:  CLRF   x9E
02BDE:  MOVWF  x9D
.................... write_eeprom(puntero,TempMax[0]); 
02BE0:  MOVF   FF2,W
02BE2:  MOVWF  00
02BE4:  BCF    FF2.7
02BE6:  MOVFF  19E,FAA
02BEA:  MOVFF  19D,FA9
02BEE:  MOVFF  29,FA8
02BF2:  BCF    FA6.6
02BF4:  BCF    FA6.7
02BF6:  BSF    FA6.2
02BF8:  MOVLB  F
02BFA:  MOVLW  55
02BFC:  MOVWF  FA7
02BFE:  MOVLW  AA
02C00:  MOVWF  FA7
02C02:  BSF    FA6.1
02C04:  BTFSC  FA6.1
02C06:  BRA    2C04
02C08:  BCF    FA6.2
02C0A:  MOVF   00,W
02C0C:  IORWF  FF2,F
.................... delay_ms(2); 
02C0E:  MOVLW  02
02C10:  MOVLB  1
02C12:  MOVWF  xA8
02C14:  MOVLB  0
02C16:  CALL   1456
.................... TempMax[1] = day; 
02C1A:  MOVFF  24,2A
.................... puntero = (long) ((dow * 5) + 96); 
02C1E:  MOVF   27,W
02C20:  MULLW  05
02C22:  MOVF   FF3,W
02C24:  ADDLW  60
02C26:  MOVLB  1
02C28:  CLRF   x9E
02C2A:  MOVWF  x9D
.................... write_eeprom(puntero,TempMax[1]); 
02C2C:  MOVF   FF2,W
02C2E:  MOVWF  00
02C30:  BCF    FF2.7
02C32:  MOVFF  19E,FAA
02C36:  MOVFF  19D,FA9
02C3A:  MOVFF  2A,FA8
02C3E:  BCF    FA6.6
02C40:  BCF    FA6.7
02C42:  BSF    FA6.2
02C44:  MOVLB  F
02C46:  MOVLW  55
02C48:  MOVWF  FA7
02C4A:  MOVLW  AA
02C4C:  MOVWF  FA7
02C4E:  BSF    FA6.1
02C50:  BTFSC  FA6.1
02C52:  BRA    2C50
02C54:  BCF    FA6.2
02C56:  MOVF   00,W
02C58:  IORWF  FF2,F
.................... delay_ms(2); 
02C5A:  MOVLW  02
02C5C:  MOVLB  1
02C5E:  MOVWF  xA8
02C60:  MOVLB  0
02C62:  CALL   1456
.................... TempMax[2] = hrs; 
02C66:  MOVFF  23,2B
.................... puntero = (long) ((dow * 5) + 97); 
02C6A:  MOVF   27,W
02C6C:  MULLW  05
02C6E:  MOVF   FF3,W
02C70:  ADDLW  61
02C72:  MOVLB  1
02C74:  CLRF   x9E
02C76:  MOVWF  x9D
.................... write_eeprom(puntero,TempMax[2]); 
02C78:  MOVF   FF2,W
02C7A:  MOVWF  00
02C7C:  BCF    FF2.7
02C7E:  MOVFF  19E,FAA
02C82:  MOVFF  19D,FA9
02C86:  MOVFF  2B,FA8
02C8A:  BCF    FA6.6
02C8C:  BCF    FA6.7
02C8E:  BSF    FA6.2
02C90:  MOVLB  F
02C92:  MOVLW  55
02C94:  MOVWF  FA7
02C96:  MOVLW  AA
02C98:  MOVWF  FA7
02C9A:  BSF    FA6.1
02C9C:  BTFSC  FA6.1
02C9E:  BRA    2C9C
02CA0:  BCF    FA6.2
02CA2:  MOVF   00,W
02CA4:  IORWF  FF2,F
.................... delay_ms(2); 
02CA6:  MOVLW  02
02CA8:  MOVLB  1
02CAA:  MOVWF  xA8
02CAC:  MOVLB  0
02CAE:  CALL   1456
.................... TempMax[3] = min; 
02CB2:  MOVFF  22,2C
.................... puntero = (long) ((dow * 5) + 98); 
02CB6:  MOVF   27,W
02CB8:  MULLW  05
02CBA:  MOVF   FF3,W
02CBC:  ADDLW  62
02CBE:  MOVLB  1
02CC0:  CLRF   x9E
02CC2:  MOVWF  x9D
.................... write_eeprom(puntero,TempMax[3]); 
02CC4:  MOVF   FF2,W
02CC6:  MOVWF  00
02CC8:  BCF    FF2.7
02CCA:  MOVFF  19E,FAA
02CCE:  MOVFF  19D,FA9
02CD2:  MOVFF  2C,FA8
02CD6:  BCF    FA6.6
02CD8:  BCF    FA6.7
02CDA:  BSF    FA6.2
02CDC:  MOVLB  F
02CDE:  MOVLW  55
02CE0:  MOVWF  FA7
02CE2:  MOVLW  AA
02CE4:  MOVWF  FA7
02CE6:  BSF    FA6.1
02CE8:  BTFSC  FA6.1
02CEA:  BRA    2CE8
02CEC:  BCF    FA6.2
02CEE:  MOVF   00,W
02CF0:  IORWF  FF2,F
.................... delay_ms(2); 
02CF2:  MOVLW  02
02CF4:  MOVLB  1
02CF6:  MOVWF  xA8
02CF8:  MOVLB  0
02CFA:  CALL   1456
.................... } 
....................  
.................... if (TempOut < TempMin[0]){ // tenemos una nueva temperatura minima del dia 
02CFE:  MOVF   2D,W
02D00:  SUBWF  43,W
02D02:  BTFSC  FD8.0
02D04:  BRA    2E36
.................... TempMin[0] = TempOut; 
02D06:  MOVFF  43,2D
.................... long puntero; 
.................... puntero = (long) ((dow * 5) + 130); 
02D0A:  MOVF   27,W
02D0C:  MULLW  05
02D0E:  MOVF   FF3,W
02D10:  ADDLW  82
02D12:  MOVLB  1
02D14:  CLRF   xA0
02D16:  MOVWF  x9F
.................... write_eeprom(puntero,TempMin[0]); 
02D18:  MOVF   FF2,W
02D1A:  MOVWF  00
02D1C:  BCF    FF2.7
02D1E:  MOVFF  1A0,FAA
02D22:  MOVFF  19F,FA9
02D26:  MOVFF  2D,FA8
02D2A:  BCF    FA6.6
02D2C:  BCF    FA6.7
02D2E:  BSF    FA6.2
02D30:  MOVLB  F
02D32:  MOVLW  55
02D34:  MOVWF  FA7
02D36:  MOVLW  AA
02D38:  MOVWF  FA7
02D3A:  BSF    FA6.1
02D3C:  BTFSC  FA6.1
02D3E:  BRA    2D3C
02D40:  BCF    FA6.2
02D42:  MOVF   00,W
02D44:  IORWF  FF2,F
.................... delay_ms(2); 
02D46:  MOVLW  02
02D48:  MOVLB  1
02D4A:  MOVWF  xA8
02D4C:  MOVLB  0
02D4E:  CALL   1456
.................... TempMin[1] = day; 
02D52:  MOVFF  24,2E
.................... puntero = (long) ((dow * 5) + 131); 
02D56:  MOVF   27,W
02D58:  MULLW  05
02D5A:  MOVF   FF3,W
02D5C:  ADDLW  83
02D5E:  MOVLB  1
02D60:  CLRF   xA0
02D62:  MOVWF  x9F
.................... write_eeprom(puntero,TempMin[1]); 
02D64:  MOVF   FF2,W
02D66:  MOVWF  00
02D68:  BCF    FF2.7
02D6A:  MOVFF  1A0,FAA
02D6E:  MOVFF  19F,FA9
02D72:  MOVFF  2E,FA8
02D76:  BCF    FA6.6
02D78:  BCF    FA6.7
02D7A:  BSF    FA6.2
02D7C:  MOVLB  F
02D7E:  MOVLW  55
02D80:  MOVWF  FA7
02D82:  MOVLW  AA
02D84:  MOVWF  FA7
02D86:  BSF    FA6.1
02D88:  BTFSC  FA6.1
02D8A:  BRA    2D88
02D8C:  BCF    FA6.2
02D8E:  MOVF   00,W
02D90:  IORWF  FF2,F
.................... delay_ms(2); 
02D92:  MOVLW  02
02D94:  MOVLB  1
02D96:  MOVWF  xA8
02D98:  MOVLB  0
02D9A:  CALL   1456
.................... TempMin[2] = hrs; 
02D9E:  MOVFF  23,2F
.................... puntero = (long) ((dow * 5) + 132); 
02DA2:  MOVF   27,W
02DA4:  MULLW  05
02DA6:  MOVF   FF3,W
02DA8:  ADDLW  84
02DAA:  MOVLB  1
02DAC:  CLRF   xA0
02DAE:  MOVWF  x9F
.................... write_eeprom(puntero,TempMin[2]); 
02DB0:  MOVF   FF2,W
02DB2:  MOVWF  00
02DB4:  BCF    FF2.7
02DB6:  MOVFF  1A0,FAA
02DBA:  MOVFF  19F,FA9
02DBE:  MOVFF  2F,FA8
02DC2:  BCF    FA6.6
02DC4:  BCF    FA6.7
02DC6:  BSF    FA6.2
02DC8:  MOVLB  F
02DCA:  MOVLW  55
02DCC:  MOVWF  FA7
02DCE:  MOVLW  AA
02DD0:  MOVWF  FA7
02DD2:  BSF    FA6.1
02DD4:  BTFSC  FA6.1
02DD6:  BRA    2DD4
02DD8:  BCF    FA6.2
02DDA:  MOVF   00,W
02DDC:  IORWF  FF2,F
.................... delay_ms(2); 
02DDE:  MOVLW  02
02DE0:  MOVLB  1
02DE2:  MOVWF  xA8
02DE4:  MOVLB  0
02DE6:  CALL   1456
.................... TempMin[3] = min; 
02DEA:  MOVFF  22,30
.................... puntero = (long) ((dow * 5) + 133); 
02DEE:  MOVF   27,W
02DF0:  MULLW  05
02DF2:  MOVF   FF3,W
02DF4:  ADDLW  85
02DF6:  MOVLB  1
02DF8:  CLRF   xA0
02DFA:  MOVWF  x9F
.................... write_eeprom(puntero,TempMin[3]); 
02DFC:  MOVF   FF2,W
02DFE:  MOVWF  00
02E00:  BCF    FF2.7
02E02:  MOVFF  1A0,FAA
02E06:  MOVFF  19F,FA9
02E0A:  MOVFF  30,FA8
02E0E:  BCF    FA6.6
02E10:  BCF    FA6.7
02E12:  BSF    FA6.2
02E14:  MOVLB  F
02E16:  MOVLW  55
02E18:  MOVWF  FA7
02E1A:  MOVLW  AA
02E1C:  MOVWF  FA7
02E1E:  BSF    FA6.1
02E20:  BTFSC  FA6.1
02E22:  BRA    2E20
02E24:  BCF    FA6.2
02E26:  MOVF   00,W
02E28:  IORWF  FF2,F
.................... delay_ms(2); 
02E2A:  MOVLW  02
02E2C:  MOVLB  1
02E2E:  MOVWF  xA8
02E30:  MOVLB  0
02E32:  CALL   1456
.................... } 
....................  
.................... if (Sol > SolMax[0]){ // tenemos una nueva radiacion solar maxima 
02E36:  MOVF   44,W
02E38:  SUBWF  31,W
02E3A:  BTFSC  FD8.0
02E3C:  BRA    2F6E
.................... SolMax[0] = Sol; 
02E3E:  MOVFF  44,31
.................... long puntero; 
.................... puntero = (long) ((dow * 5) + 165); 
02E42:  MOVF   27,W
02E44:  MULLW  05
02E46:  MOVF   FF3,W
02E48:  ADDLW  A5
02E4A:  MOVLB  1
02E4C:  CLRF   xA2
02E4E:  MOVWF  xA1
.................... write_eeprom(puntero,SolMax[0]); 
02E50:  MOVF   FF2,W
02E52:  MOVWF  00
02E54:  BCF    FF2.7
02E56:  MOVFF  1A2,FAA
02E5A:  MOVFF  1A1,FA9
02E5E:  MOVFF  31,FA8
02E62:  BCF    FA6.6
02E64:  BCF    FA6.7
02E66:  BSF    FA6.2
02E68:  MOVLB  F
02E6A:  MOVLW  55
02E6C:  MOVWF  FA7
02E6E:  MOVLW  AA
02E70:  MOVWF  FA7
02E72:  BSF    FA6.1
02E74:  BTFSC  FA6.1
02E76:  BRA    2E74
02E78:  BCF    FA6.2
02E7A:  MOVF   00,W
02E7C:  IORWF  FF2,F
.................... delay_ms(2); 
02E7E:  MOVLW  02
02E80:  MOVLB  1
02E82:  MOVWF  xA8
02E84:  MOVLB  0
02E86:  CALL   1456
.................... SolMax[1] = day; 
02E8A:  MOVFF  24,32
.................... puntero = (long) ((dow * 5) + 166); 
02E8E:  MOVF   27,W
02E90:  MULLW  05
02E92:  MOVF   FF3,W
02E94:  ADDLW  A6
02E96:  MOVLB  1
02E98:  CLRF   xA2
02E9A:  MOVWF  xA1
.................... write_eeprom(puntero,SolMax[1]); 
02E9C:  MOVF   FF2,W
02E9E:  MOVWF  00
02EA0:  BCF    FF2.7
02EA2:  MOVFF  1A2,FAA
02EA6:  MOVFF  1A1,FA9
02EAA:  MOVFF  32,FA8
02EAE:  BCF    FA6.6
02EB0:  BCF    FA6.7
02EB2:  BSF    FA6.2
02EB4:  MOVLB  F
02EB6:  MOVLW  55
02EB8:  MOVWF  FA7
02EBA:  MOVLW  AA
02EBC:  MOVWF  FA7
02EBE:  BSF    FA6.1
02EC0:  BTFSC  FA6.1
02EC2:  BRA    2EC0
02EC4:  BCF    FA6.2
02EC6:  MOVF   00,W
02EC8:  IORWF  FF2,F
.................... delay_ms(2); 
02ECA:  MOVLW  02
02ECC:  MOVLB  1
02ECE:  MOVWF  xA8
02ED0:  MOVLB  0
02ED2:  CALL   1456
.................... SolMax[2] = hrs; 
02ED6:  MOVFF  23,33
.................... puntero = (long) ((dow * 5) + 167); 
02EDA:  MOVF   27,W
02EDC:  MULLW  05
02EDE:  MOVF   FF3,W
02EE0:  ADDLW  A7
02EE2:  MOVLB  1
02EE4:  CLRF   xA2
02EE6:  MOVWF  xA1
.................... write_eeprom(puntero,SolMax[2]); 
02EE8:  MOVF   FF2,W
02EEA:  MOVWF  00
02EEC:  BCF    FF2.7
02EEE:  MOVFF  1A2,FAA
02EF2:  MOVFF  1A1,FA9
02EF6:  MOVFF  33,FA8
02EFA:  BCF    FA6.6
02EFC:  BCF    FA6.7
02EFE:  BSF    FA6.2
02F00:  MOVLB  F
02F02:  MOVLW  55
02F04:  MOVWF  FA7
02F06:  MOVLW  AA
02F08:  MOVWF  FA7
02F0A:  BSF    FA6.1
02F0C:  BTFSC  FA6.1
02F0E:  BRA    2F0C
02F10:  BCF    FA6.2
02F12:  MOVF   00,W
02F14:  IORWF  FF2,F
.................... delay_ms(2); 
02F16:  MOVLW  02
02F18:  MOVLB  1
02F1A:  MOVWF  xA8
02F1C:  MOVLB  0
02F1E:  CALL   1456
.................... SolMax[3] = min; 
02F22:  MOVFF  22,34
.................... puntero = (long) ((dow * 5) + 168); 
02F26:  MOVF   27,W
02F28:  MULLW  05
02F2A:  MOVF   FF3,W
02F2C:  ADDLW  A8
02F2E:  MOVLB  1
02F30:  CLRF   xA2
02F32:  MOVWF  xA1
.................... write_eeprom(puntero,SolMax[3]); 
02F34:  MOVF   FF2,W
02F36:  MOVWF  00
02F38:  BCF    FF2.7
02F3A:  MOVFF  1A2,FAA
02F3E:  MOVFF  1A1,FA9
02F42:  MOVFF  34,FA8
02F46:  BCF    FA6.6
02F48:  BCF    FA6.7
02F4A:  BSF    FA6.2
02F4C:  MOVLB  F
02F4E:  MOVLW  55
02F50:  MOVWF  FA7
02F52:  MOVLW  AA
02F54:  MOVWF  FA7
02F56:  BSF    FA6.1
02F58:  BTFSC  FA6.1
02F5A:  BRA    2F58
02F5C:  BCF    FA6.2
02F5E:  MOVF   00,W
02F60:  IORWF  FF2,F
.................... delay_ms(2); 
02F62:  MOVLW  02
02F64:  MOVLB  1
02F66:  MOVWF  xA8
02F68:  MOVLB  0
02F6A:  CALL   1456
.................... } 
.................... } 
02F6E:  GOTO   2F8A (RETURN)
....................  
.................... void ZzZ(){ 
.................... LuzLED(); 
*
04416:  RCALL  4406
.................... restart_wdt(); 
04418:  CLRWDT
0441A:  CLRF   19
0441C:  BTFSC  FF2.7
0441E:  BSF    19.7
04420:  BCF    FF2.7
.................... lcd_gotoxy(1,1); 
04422:  MOVLW  01
04424:  MOVLB  1
04426:  MOVWF  xA0
04428:  MOVWF  xA1
0442A:  MOVLB  0
0442C:  CALL   156C
04430:  BTFSC  19.7
04432:  BSF    FF2.7
.................... printf(lcd_putc,"                    "); 
04434:  MOVLW  8C
04436:  MOVWF  FF6
04438:  MOVLW  37
0443A:  MOVWF  FF7
0443C:  RCALL  3E86
0443E:  CLRF   19
04440:  BTFSC  FF2.7
04442:  BSF    19.7
04444:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
04446:  MOVLW  01
04448:  MOVLB  1
0444A:  MOVWF  xA0
0444C:  MOVLW  03
0444E:  MOVWF  xA1
04450:  MOVLB  0
04452:  CALL   156C
04456:  BTFSC  19.7
04458:  BSF    FF2.7
.................... printf(lcd_putc,"                    "); 
0445A:  MOVLW  A2
0445C:  MOVWF  FF6
0445E:  MOVLW  37
04460:  MOVWF  FF7
04462:  RCALL  3E86
04464:  CLRF   19
04466:  BTFSC  FF2.7
04468:  BSF    19.7
0446A:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0446C:  MOVLW  01
0446E:  MOVLB  1
04470:  MOVWF  xA0
04472:  MOVLW  04
04474:  MOVWF  xA1
04476:  MOVLB  0
04478:  CALL   156C
0447C:  BTFSC  19.7
0447E:  BSF    FF2.7
.................... printf(lcd_putc,"                    "); 
04480:  MOVLW  B8
04482:  MOVWF  FF6
04484:  MOVLW  37
04486:  MOVWF  FF7
04488:  RCALL  3E86
....................  
.................... if (zZzZ == true) { 
0448A:  MOVLB  1
0448C:  BTFSS  x28.2
0448E:  BRA    44BE
.................... if (bit_test(Tiempo1,2)){ 
04490:  BTFSS  49.2
04492:  BRA    44BC
04494:  CLRF   19
04496:  BTFSC  FF2.7
04498:  BSF    19.7
0449A:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
0449C:  MOVLW  01
0449E:  MOVWF  xA0
044A0:  MOVLW  02
044A2:  MOVWF  xA1
044A4:  MOVLB  0
044A6:  CALL   156C
044AA:  BTFSC  19.7
044AC:  BSF    FF2.7
.................... printf(lcd_putc,"   ...zZzZzZz...    "); 
044AE:  MOVLW  CE
044B0:  MOVWF  FF6
044B2:  MOVLW  37
044B4:  MOVWF  FF7
044B6:  RCALL  3E86
.................... zZzZ = false; 
044B8:  MOVLB  1
044BA:  BCF    x28.2
.................... /* 
.................... Prender(33); 
.................... Prender(55); 
.................... Prender(61); 
.................... Prender(72); 
.................... Prender(91); 
.................... */ 
.................... } // si bit tiempo 
.................... } else { // ZZZ falso  
044BC:  BRA    44EA
.................... if (!bit_test(Tiempo1,2)){ 
044BE:  BTFSC  49.2
044C0:  BRA    44EA
044C2:  CLRF   19
044C4:  BTFSC  FF2.7
044C6:  BSF    19.7
044C8:  BCF    FF2.7
.................... lcd_gotoxy(1,2); 
044CA:  MOVLW  01
044CC:  MOVWF  xA0
044CE:  MOVLW  02
044D0:  MOVWF  xA1
044D2:  MOVLB  0
044D4:  CALL   156C
044D8:  BTFSC  19.7
044DA:  BSF    FF2.7
.................... printf(lcd_putc,"   ...ZzZzZzZ...    "); 
044DC:  MOVLW  E4
044DE:  MOVWF  FF6
044E0:  MOVLW  37
044E2:  MOVWF  FF7
044E4:  RCALL  3E86
.................... zZzZ = true; 
044E6:  MOVLB  1
044E8:  BSF    x28.2
.................... /* 
.................... Prender(33); 
.................... Prender(55); 
.................... Prender(61); 
.................... Prender(72); 
.................... Prender(91); 
.................... */ 
.................... } // si bit tiempo 
.................... } // else (zzz falso) 
....................  
.................... } //fn 
044EA:  MOVLB  0
044EC:  GOTO   6DAA (RETURN)
....................  
....................  
.................... void AcercaDe(){ // se lleva el 5% de ROM 
....................  
.................... LIMPIARLCD; 
*
0DFA2:  MOVLW  FA
0DFA4:  MOVWF  FF6
0DFA6:  MOVLW  37
0DFA8:  MOVWF  FF7
0DFAA:  CALL   3E86
.................... restart_wdt(); 
0DFAE:  CLRWDT
.................... int k=0; 
0DFB0:  MOVLB  1
0DFB2:  CLRF   x6D
.................... while (input(ARRIBA)==1 && input(ABAJO)==1 && input(CANCEL)==1){ 
0DFB4:  BSF    F93.3
0DFB6:  BTFSS  F81.3
0DFB8:  BRA    E39E
0DFBA:  BSF    F93.2
0DFBC:  BTFSS  F81.2
0DFBE:  BRA    E39E
0DFC0:  BSF    F93.0
0DFC2:  BTFSS  F81.0
0DFC4:  BRA    E39E
.................... if (k<250) ++k; 
0DFC6:  MOVF   x6D,W
0DFC8:  SUBLW  F9
0DFCA:  BTFSC  FD8.0
0DFCC:  INCF   x6D,F
0DFCE:  CLRF   19
0DFD0:  BTFSC  FF2.7
0DFD2:  BSF    19.7
0DFD4:  BCF    FF2.7
.................... lcd_gotoxy(1,1); 
0DFD6:  MOVLW  01
0DFD8:  MOVWF  xA0
0DFDA:  MOVWF  xA1
0DFDC:  MOVLB  0
0DFDE:  CALL   156C
0DFE2:  BTFSC  19.7
0DFE4:  BSF    FF2.7
.................... if (k==0) printf(lcd_putc,"==                 C"); 
0DFE6:  MOVLB  1
0DFE8:  MOVF   x6D,F
0DFEA:  BNZ   DFFC
0DFEC:  MOVLW  FC
0DFEE:  MOVWF  FF6
0DFF0:  MOVLW  37
0DFF2:  MOVWF  FF7
0DFF4:  MOVLB  0
0DFF6:  CALL   3E86
0DFFA:  MOVLB  1
.................... if (k==5) printf(lcd_putc,"==                C "); 
0DFFC:  MOVF   x6D,W
0DFFE:  SUBLW  05
0E000:  BNZ   E012
0E002:  MOVLW  12
0E004:  MOVWF  FF6
0E006:  MOVLW  38
0E008:  MOVWF  FF7
0E00A:  MOVLB  0
0E00C:  CALL   3E86
0E010:  MOVLB  1
.................... if (k==10) printf(lcd_putc,"==               C  "); 
0E012:  MOVF   x6D,W
0E014:  SUBLW  0A
0E016:  BNZ   E028
0E018:  MOVLW  28
0E01A:  MOVWF  FF6
0E01C:  MOVLW  38
0E01E:  MOVWF  FF7
0E020:  MOVLB  0
0E022:  CALL   3E86
0E026:  MOVLB  1
.................... if (k==15) printf(lcd_putc,"==              C  A"); 
0E028:  MOVF   x6D,W
0E02A:  SUBLW  0F
0E02C:  BNZ   E03E
0E02E:  MOVLW  3E
0E030:  MOVWF  FF6
0E032:  MOVLW  38
0E034:  MOVWF  FF7
0E036:  MOVLB  0
0E038:  CALL   3E86
0E03C:  MOVLB  1
.................... if (k==20) printf(lcd_putc,"==             C  A "); 
0E03E:  MOVF   x6D,W
0E040:  SUBLW  14
0E042:  BNZ   E054
0E044:  MOVLW  54
0E046:  MOVWF  FF6
0E048:  MOVLW  38
0E04A:  MOVWF  FF7
0E04C:  MOVLB  0
0E04E:  CALL   3E86
0E052:  MOVLB  1
.................... if (k==25) printf(lcd_putc,"==            C  A  "); 
0E054:  MOVF   x6D,W
0E056:  SUBLW  19
0E058:  BNZ   E06A
0E05A:  MOVLW  6A
0E05C:  MOVWF  FF6
0E05E:  MOVLW  38
0E060:  MOVWF  FF7
0E062:  MOVLB  0
0E064:  CALL   3E86
0E068:  MOVLB  1
.................... if (k==30) printf(lcd_putc,"==           C  A  S"); 
0E06A:  MOVF   x6D,W
0E06C:  SUBLW  1E
0E06E:  BNZ   E080
0E070:  MOVLW  80
0E072:  MOVWF  FF6
0E074:  MOVLW  38
0E076:  MOVWF  FF7
0E078:  MOVLB  0
0E07A:  CALL   3E86
0E07E:  MOVLB  1
.................... if (k==35) printf(lcd_putc,"==          C  A  S "); 
0E080:  MOVF   x6D,W
0E082:  SUBLW  23
0E084:  BNZ   E096
0E086:  MOVLW  96
0E088:  MOVWF  FF6
0E08A:  MOVLW  38
0E08C:  MOVWF  FF7
0E08E:  MOVLB  0
0E090:  CALL   3E86
0E094:  MOVLB  1
.................... if (k==40) printf(lcd_putc,"==         C  A  S  "); 
0E096:  MOVF   x6D,W
0E098:  SUBLW  28
0E09A:  BNZ   E0AC
0E09C:  MOVLW  AC
0E09E:  MOVWF  FF6
0E0A0:  MOVLW  38
0E0A2:  MOVWF  FF7
0E0A4:  MOVLB  0
0E0A6:  CALL   3E86
0E0AA:  MOVLB  1
.................... if (k==45) printf(lcd_putc,"==        C  A  S  A"); 
0E0AC:  MOVF   x6D,W
0E0AE:  SUBLW  2D
0E0B0:  BNZ   E0C2
0E0B2:  MOVLW  C2
0E0B4:  MOVWF  FF6
0E0B6:  MOVLW  38
0E0B8:  MOVWF  FF7
0E0BA:  MOVLB  0
0E0BC:  CALL   3E86
0E0C0:  MOVLB  1
.................... if (k==50) printf(lcd_putc,"==       C  A  S  A "); 
0E0C2:  MOVF   x6D,W
0E0C4:  SUBLW  32
0E0C6:  BNZ   E0D8
0E0C8:  MOVLW  D8
0E0CA:  MOVWF  FF6
0E0CC:  MOVLW  38
0E0CE:  MOVWF  FF7
0E0D0:  MOVLB  0
0E0D2:  CALL   3E86
0E0D6:  MOVLB  1
.................... if (k==55) printf(lcd_putc,"==      C  A  S  A  "); 
0E0D8:  MOVF   x6D,W
0E0DA:  SUBLW  37
0E0DC:  BNZ   E0EE
0E0DE:  MOVLW  EE
0E0E0:  MOVWF  FF6
0E0E2:  MOVLW  38
0E0E4:  MOVWF  FF7
0E0E6:  MOVLB  0
0E0E8:  CALL   3E86
0E0EC:  MOVLB  1
.................... if (k==60) printf(lcd_putc,"==     C  A  S  A  N"); 
0E0EE:  MOVF   x6D,W
0E0F0:  SUBLW  3C
0E0F2:  BNZ   E104
0E0F4:  MOVLW  04
0E0F6:  MOVWF  FF6
0E0F8:  MOVLW  39
0E0FA:  MOVWF  FF7
0E0FC:  MOVLB  0
0E0FE:  CALL   3E86
0E102:  MOVLB  1
.................... if (k==65) printf(lcd_putc,"==    C  A  S  A  N "); 
0E104:  MOVF   x6D,W
0E106:  SUBLW  41
0E108:  BNZ   E11A
0E10A:  MOVLW  1A
0E10C:  MOVWF  FF6
0E10E:  MOVLW  39
0E110:  MOVWF  FF7
0E112:  MOVLB  0
0E114:  CALL   3E86
0E118:  MOVLB  1
.................... if (k==70) printf(lcd_putc,"==   C  A  S  A  N  "); 
0E11A:  MOVF   x6D,W
0E11C:  SUBLW  46
0E11E:  BNZ   E130
0E120:  MOVLW  30
0E122:  MOVWF  FF6
0E124:  MOVLW  39
0E126:  MOVWF  FF7
0E128:  MOVLB  0
0E12A:  CALL   3E86
0E12E:  MOVLB  1
.................... if (k==75) printf(lcd_putc,"==  C  A  S  A  N  D"); 
0E130:  MOVF   x6D,W
0E132:  SUBLW  4B
0E134:  BNZ   E146
0E136:  MOVLW  46
0E138:  MOVWF  FF6
0E13A:  MOVLW  39
0E13C:  MOVWF  FF7
0E13E:  MOVLB  0
0E140:  CALL   3E86
0E144:  MOVLB  1
.................... if (k==80) printf(lcd_putc,"== C  A  S  A  N  D "); 
0E146:  MOVF   x6D,W
0E148:  SUBLW  50
0E14A:  BNZ   E15C
0E14C:  MOVLW  5C
0E14E:  MOVWF  FF6
0E150:  MOVLW  39
0E152:  MOVWF  FF7
0E154:  MOVLB  0
0E156:  CALL   3E86
0E15A:  MOVLB  1
.................... if (k==85) printf(lcd_putc,"== C A  S  A  N  D  "); 
0E15C:  MOVF   x6D,W
0E15E:  SUBLW  55
0E160:  BNZ   E172
0E162:  MOVLW  72
0E164:  MOVWF  FF6
0E166:  MOVLW  39
0E168:  MOVWF  FF7
0E16A:  MOVLB  0
0E16C:  CALL   3E86
0E170:  MOVLB  1
.................... if (k==90) printf(lcd_putc,"== CA  S  A  N  D  R"); 
0E172:  MOVF   x6D,W
0E174:  SUBLW  5A
0E176:  BNZ   E188
0E178:  MOVLW  88
0E17A:  MOVWF  FF6
0E17C:  MOVLW  39
0E17E:  MOVWF  FF7
0E180:  MOVLB  0
0E182:  CALL   3E86
0E186:  MOVLB  1
.................... if (k==95) printf(lcd_putc, "== CA S  A  N  D  R "); 
0E188:  MOVF   x6D,W
0E18A:  SUBLW  5F
0E18C:  BNZ   E19E
0E18E:  MOVLW  9E
0E190:  MOVWF  FF6
0E192:  MOVLW  39
0E194:  MOVWF  FF7
0E196:  MOVLB  0
0E198:  CALL   3E86
0E19C:  MOVLB  1
.................... if (k==100) printf(lcd_putc,"== CAS  A  N  D  R  "); 
0E19E:  MOVF   x6D,W
0E1A0:  SUBLW  64
0E1A2:  BNZ   E1B4
0E1A4:  MOVLW  B4
0E1A6:  MOVWF  FF6
0E1A8:  MOVLW  39
0E1AA:  MOVWF  FF7
0E1AC:  MOVLB  0
0E1AE:  CALL   3E86
0E1B2:  MOVLB  1
.................... if (k==105) printf(lcd_putc,"== CAS A  N  D  R  A"); 
0E1B4:  MOVF   x6D,W
0E1B6:  SUBLW  69
0E1B8:  BNZ   E1CA
0E1BA:  MOVLW  CA
0E1BC:  MOVWF  FF6
0E1BE:  MOVLW  39
0E1C0:  MOVWF  FF7
0E1C2:  MOVLB  0
0E1C4:  CALL   3E86
0E1C8:  MOVLB  1
.................... if (k==110) printf(lcd_putc,"== CASA  N  D  R  A "); 
0E1CA:  MOVF   x6D,W
0E1CC:  SUBLW  6E
0E1CE:  BNZ   E1E0
0E1D0:  MOVLW  E0
0E1D2:  MOVWF  FF6
0E1D4:  MOVLW  39
0E1D6:  MOVWF  FF7
0E1D8:  MOVLB  0
0E1DA:  CALL   3E86
0E1DE:  MOVLB  1
.................... if (k==115) printf(lcd_putc,"== CASA N  D  R  A  "); 
0E1E0:  MOVF   x6D,W
0E1E2:  SUBLW  73
0E1E4:  BNZ   E1F6
0E1E6:  MOVLW  F6
0E1E8:  MOVWF  FF6
0E1EA:  MOVLW  39
0E1EC:  MOVWF  FF7
0E1EE:  MOVLB  0
0E1F0:  CALL   3E86
0E1F4:  MOVLB  1
.................... if (k==120) printf(lcd_putc,"== CASAN  D  R  A   "); 
0E1F6:  MOVF   x6D,W
0E1F8:  SUBLW  78
0E1FA:  BNZ   E20C
0E1FC:  MOVLW  0C
0E1FE:  MOVWF  FF6
0E200:  MOVLW  3A
0E202:  MOVWF  FF7
0E204:  MOVLB  0
0E206:  CALL   3E86
0E20A:  MOVLB  1
.................... if (k==125) printf(lcd_putc,"== CASAN D  R  A    "); 
0E20C:  MOVF   x6D,W
0E20E:  SUBLW  7D
0E210:  BNZ   E222
0E212:  MOVLW  22
0E214:  MOVWF  FF6
0E216:  MOVLW  3A
0E218:  MOVWF  FF7
0E21A:  MOVLB  0
0E21C:  CALL   3E86
0E220:  MOVLB  1
.................... if (k==130) printf(lcd_putc,"== CASAND  R  A     "); 
0E222:  MOVF   x6D,W
0E224:  SUBLW  82
0E226:  BNZ   E238
0E228:  MOVLW  38
0E22A:  MOVWF  FF6
0E22C:  MOVLW  3A
0E22E:  MOVWF  FF7
0E230:  MOVLB  0
0E232:  CALL   3E86
0E236:  MOVLB  1
.................... if (k==135) printf(lcd_putc,"== CASAND R  A      "); 
0E238:  MOVF   x6D,W
0E23A:  SUBLW  87
0E23C:  BNZ   E24E
0E23E:  MOVLW  4E
0E240:  MOVWF  FF6
0E242:  MOVLW  3A
0E244:  MOVWF  FF7
0E246:  MOVLB  0
0E248:  CALL   3E86
0E24C:  MOVLB  1
.................... if (k==140) printf(lcd_putc,"== CASANDR  A       "); 
0E24E:  MOVF   x6D,W
0E250:  SUBLW  8C
0E252:  BNZ   E264
0E254:  MOVLW  64
0E256:  MOVWF  FF6
0E258:  MOVLW  3A
0E25A:  MOVWF  FF7
0E25C:  MOVLB  0
0E25E:  CALL   3E86
0E262:  MOVLB  1
.................... if (k==145) printf(lcd_putc,"== CASANDR A        "); 
0E264:  MOVF   x6D,W
0E266:  SUBLW  91
0E268:  BNZ   E27A
0E26A:  MOVLW  7A
0E26C:  MOVWF  FF6
0E26E:  MOVLW  3A
0E270:  MOVWF  FF7
0E272:  MOVLB  0
0E274:  CALL   3E86
0E278:  MOVLB  1
.................... if (k==150) printf(lcd_putc,"== CASANDRA         "); 
0E27A:  MOVF   x6D,W
0E27C:  SUBLW  96
0E27E:  BNZ   E290
0E280:  MOVLW  90
0E282:  MOVWF  FF6
0E284:  MOVLW  3A
0E286:  MOVWF  FF7
0E288:  MOVLB  0
0E28A:  CALL   3E86
0E28E:  MOVLB  1
.................... if (k==155) printf(lcd_putc,"=== CASANDRA       ="); 
0E290:  MOVF   x6D,W
0E292:  SUBLW  9B
0E294:  BNZ   E2A6
0E296:  MOVLW  A6
0E298:  MOVWF  FF6
0E29A:  MOVLW  3A
0E29C:  MOVWF  FF7
0E29E:  MOVLB  0
0E2A0:  CALL   3E86
0E2A4:  MOVLB  1
.................... if (k==160) printf(lcd_putc,"==== CASANDRA     =="); 
0E2A6:  MOVF   x6D,W
0E2A8:  SUBLW  A0
0E2AA:  BNZ   E2BC
0E2AC:  MOVLW  BC
0E2AE:  MOVWF  FF6
0E2B0:  MOVLW  3A
0E2B2:  MOVWF  FF7
0E2B4:  MOVLB  0
0E2B6:  CALL   3E86
0E2BA:  MOVLB  1
.................... if (k==165) printf(lcd_putc,"===== CASANDRA   ==="); 
0E2BC:  MOVF   x6D,W
0E2BE:  SUBLW  A5
0E2C0:  BNZ   E2D2
0E2C2:  MOVLW  D2
0E2C4:  MOVWF  FF6
0E2C6:  MOVLW  3A
0E2C8:  MOVWF  FF7
0E2CA:  MOVLB  0
0E2CC:  CALL   3E86
0E2D0:  MOVLB  1
.................... if (k==170) printf(lcd_putc,"===== CASANDRA ====="); 
0E2D2:  MOVF   x6D,W
0E2D4:  SUBLW  AA
0E2D6:  BNZ   E2E8
0E2D8:  MOVLW  E8
0E2DA:  MOVWF  FF6
0E2DC:  MOVLW  3A
0E2DE:  MOVWF  FF7
0E2E0:  MOVLB  0
0E2E2:  CALL   3E86
0E2E6:  MOVLB  1
.................... if (k==247) printf(lcd_putc,"     CASANDRA %c     ",220); 
0E2E8:  MOVF   x6D,W
0E2EA:  SUBLW  F7
0E2EC:  BNZ   E322
0E2EE:  MOVLW  FE
0E2F0:  MOVWF  FF6
0E2F2:  MOVLW  3A
0E2F4:  MOVWF  FF7
0E2F6:  MOVLW  0E
0E2F8:  MOVWF  x90
0E2FA:  MOVLB  0
0E2FC:  CALL   44F0
0E300:  MOVLW  DC
0E302:  MOVLB  1
0E304:  MOVWF  x93
0E306:  MOVLB  0
0E308:  CALL   3DE6
0E30C:  MOVLW  0E
0E30E:  MOVWF  FF6
0E310:  MOVLW  3B
0E312:  MOVWF  FF7
0E314:  MOVLW  05
0E316:  MOVLB  1
0E318:  MOVWF  x90
0E31A:  MOVLB  0
0E31C:  CALL   44F0
0E320:  MOVLB  1
0E322:  CLRF   19
0E324:  BTFSC  FF2.7
0E326:  BSF    19.7
0E328:  BCF    FF2.7
....................  
.................... lcd_gotoxy(1,2); 
0E32A:  MOVLW  01
0E32C:  MOVWF  xA0
0E32E:  MOVLW  02
0E330:  MOVWF  xA1
0E332:  MOVLB  0
0E334:  CALL   156C
0E338:  BTFSC  19.7
0E33A:  BSF    FF2.7
.................... printf(lcd_putc,"Vers: 2.0a  Jun-2014"); 
0E33C:  MOVLW  14
0E33E:  MOVWF  FF6
0E340:  MOVLW  3B
0E342:  MOVWF  FF7
0E344:  CALL   3E86
0E348:  CLRF   19
0E34A:  BTFSC  FF2.7
0E34C:  BSF    19.7
0E34E:  BCF    FF2.7
.................... lcd_gotoxy(1,3); 
0E350:  MOVLW  01
0E352:  MOVLB  1
0E354:  MOVWF  xA0
0E356:  MOVLW  03
0E358:  MOVWF  xA1
0E35A:  MOVLB  0
0E35C:  CALL   156C
0E360:  BTFSC  19.7
0E362:  BSF    FF2.7
.................... printf(lcd_putc,"Gon & Nico CarvalloM"); 
0E364:  MOVLW  2A
0E366:  MOVWF  FF6
0E368:  MOVLW  3B
0E36A:  MOVWF  FF7
0E36C:  CALL   3E86
0E370:  CLRF   19
0E372:  BTFSC  FF2.7
0E374:  BSF    19.7
0E376:  BCF    FF2.7
.................... lcd_gotoxy(1,4); 
0E378:  MOVLW  01
0E37A:  MOVLB  1
0E37C:  MOVWF  xA0
0E37E:  MOVLW  04
0E380:  MOVWF  xA1
0E382:  MOVLB  0
0E384:  CALL   156C
0E388:  BTFSC  19.7
0E38A:  BSF    FF2.7
.................... printf(lcd_putc,"~gonzacarv@gmail.com"); 
0E38C:  MOVLW  40
0E38E:  MOVWF  FF6
0E390:  MOVLW  3B
0E392:  MOVWF  FF7
0E394:  CALL   3E86
.................... restart_wdt(); 
0E398:  CLRWDT
.................... } // while 
0E39A:  MOVLB  1
0E39C:  BRA    DFB4
.................... Menu = 1; 
0E39E:  MOVLW  01
0E3A0:  MOVWF  28
....................  
.................... } // fn 
0E3A2:  MOVLB  0
0E3A4:  GOTO   E5B2 (RETURN)
....................  

Configuration Fuses:
   Word  1: C100   XT FCMEN IESO
   Word  2: 151E   PUT BROWNOUT BORV21 WDT WDT1024
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
