CCS PCM C Compiler, Version 5.025, 29880               11-feb-15 18:48

               Filename:   D:\Dropbox\Gonzalo\Proyecto Casandra\Version final\Soft\Luces\4\main.lst

               ROM used:   1485 words (18%)
                           Largest free fragment is 2048
               RAM used:   58 (16%) at main() level
                           64 (17%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  05
0001:  MOVWF  0A
0002:  GOTO   5AE
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   038
001B:  MOVLW  8C
001C:  MOVWF  04
001D:  BTFSS  00.5
001E:  GOTO   021
001F:  BTFSC  0C.5
0020:  GOTO   03B
0021:  MOVLW  8C
0022:  MOVWF  04
0023:  BTFSS  00.1
0024:  GOTO   027
0025:  BTFSC  0C.1
0026:  GOTO   03E
0027:  MOVF   22,W
0028:  MOVWF  04
0029:  MOVF   23,W
002A:  MOVWF  77
002B:  MOVF   24,W
002C:  MOVWF  78
002D:  MOVF   25,W
002E:  MOVWF  79
002F:  MOVF   26,W
0030:  MOVWF  7A
0031:  MOVF   20,W
0032:  MOVWF  0A
0033:  SWAPF  21,W
0034:  MOVWF  03
0035:  SWAPF  7F,F
0036:  SWAPF  7F,W
0037:  RETFIE
0038:  BCF    0A.3
0039:  BCF    0A.4
003A:  GOTO   041
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   049
003E:  BCF    0A.3
003F:  BCF    0A.4
0040:  GOTO   0A1
.................... /*====================================================================================================== 
.................... ||   Proyecto: Casandra v1.0                                                                          || 
.................... ||   Autor: Gonzalo Carvallo (gonzacarv@gmail.com)                                                    || 
.................... ||   Fecha: 06/2014                                                                                   || 
.................... ||                                                                                                    || 
.................... || Firmware de modulos actuadores de luces correspondientes al sistema domotico CASANDRA. Capacidad   || 
.................... || para actuar sobre 12 consumos y leer 12 entradas digitales + 2 analogicas. Comunicacion sobre par  || 
.................... || trensado usando el transceptor SN75176.                                                            || 
.................... ||                                                                                                    || 
.................... ======================================================================================================*/ 
....................  
.................... #include <16F877A.h> // N1 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses XT, WDT, NOPROTECT, NOLVP, PUT, NOBROWNOUT // Opciones de configuración 
.................... #use delay(clock=4000000)  //Reloj de 4MHz 
....................  
.................... #byte TMR1H = 0x0F // Le pongo nombre al registro alto de timer 1 
.................... #byte TMR1L = 0x0E // Le pongo nombre al registro bajo de timer 1 
....................  
.................... ////////// Tipo de entradas y salidas (predefinidas con TRIS) /////////// 
....................  
.................... #use fast_io(a) 
.................... #use fast_io(b) 
.................... #use fast_io(c) 
.................... #use fast_io(d) 
....................  
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7, enable=PIN_C5) // Comunicacion serial 
*
01A9:  BSF    07.5
01AA:  BTFSS  0C.4
01AB:  GOTO   1AA
01AC:  BSF    07.5
01AD:  MOVF   55,W
01AE:  MOVWF  19
01AF:  NOP
01B0:  BSF    03.5
01B1:  BTFSS  18.1
01B2:  GOTO   1B1
01B3:  BCF    03.5
01B4:  BCF    07.5
01B5:  RETURN
....................  
.................... //////////////////////////////Corresponde a MODULO NUMERO 1////////////////////////////////////////// 
.................... #define LUZ0 33 // Para modulo 4 
.................... #define LUZ1 34 // Para modulo 4 
.................... #define LUZ2 35 // Para modulo 4 
.................... #define LUZ3 36 // Para modulo 4 
.................... #define LUZ4 37 // Para modulo 4 
.................... #define LUZ5 38 // Para modulo 4 
.................... #define LUZ6 39 // Para modulo 4 
.................... #define LUZ7 40 // Para modulo 4 
.................... #define LUZ8 41 // Para modulo 4 
.................... #define LUZ9 42 // Para modulo 4 
.................... #define LUZ10 43 // Para modulo 4 
.................... #define LUZ11 44 // Para modulo 4 
.................... #define TODOS 100  // Para TODOS 
....................  
.................... //#define RESTA 33 // Para modulo 1 
.................... //#define RESTA 45 // Para modulo 2 
.................... //#define RESTA 57 // Para modulo 3 
.................... #define RESTA 69 // Para modulo 4 
.................... //#define RESTA 81 // Para modulo 5 
....................  
.................... ////////// Nombres para las entradas //////// 
.................... #define IN1 PIN_D1 
.................... #define IN2 PIN_D0 
.................... #define IN3 PIN_C3 
.................... #define IN4 PIN_C2 
.................... #define IN5 PIN_C1 
.................... #define IN6 PIN_C0 
.................... #define IN7 PIN_D6 
.................... #define IN8 PIN_D5 
.................... #define IN9 PIN_D4 
.................... #define IN10 PIN_C4 
.................... #define IN11 PIN_D3 
.................... #define IN12 PIN_D2 
....................  
.................... ////////// Nombres para las salidas //////// 
.................... #define OUT1 PIN_B1 
.................... #define OUT2 PIN_B2 
.................... #define OUT3 PIN_B3  
.................... #define OUT4 PIN_B4 
.................... #define OUT5 PIN_B5 
.................... #define OUT6 PIN_B6 
.................... #define OUT7 PIN_B7 
.................... #define OUT8 PIN_E1 
.................... #define OUT9 PIN_E2 
.................... #define OUT10 PIN_A2 
.................... #define OUT11 PIN_E0 
.................... #define OUT12 PIN_A5 
....................  
.................... ////////// Nombres para entradas analogicas del ADC //////// 
.................... #define ANA1 PIN_A0 
.................... #define ANA2 PIN_A1 
.................... #define ANA3 PIN_A3 
....................  
.................... ////////// Otros nombres /////////////// 
.................... #define LED PIN_D7 // Piloto led del modulo 
.................... #define LEDON output_low(LED)     /// Comando rapido para el encendido y  
.................... #define LEDOFF output_high(LED)   /// apagado del piloto LED. 
.................... #define CruX PIN_B0 // Entrada de cruce por cero 
....................  
.................... ////////// Encabezado de funciones /////////////// 
.................... void Cruce(); // Funcion de cruce por 0 que reinicia el timer, se ejecuta por interrupcion de B0 
.................... void Comunica(); // Funcion de lectura de puerto serial y armado del comando, se ejecuta despues de que BusData tiene el comando lleno 
.................... void Cambio(); // Cambio en la configuracion de alguna luz (incluida la variacion de tiempos cortos, debe ser periodica) 
.................... void Entradas(); // Funcion de lectura de las entradas (periodica) 
.................... void Analogicos(); // Funcion de toma de valores analogicos 
.................... void Accion(); // Funcion de Salida de luces (solo se ejecuta por interrupcion del timer2) 
.................... void BusData(); // LLego algo al bus de datos (solo se ejecuta por interrupcion de byte esperando en buffer) 
.................... void HolaMundo(); // Funcion de inicio cargamos variables y configuraciones 
....................  
....................  
.................... ////////// Variables Globales /////////////// 
.................... int Comando[4]; // Arreglo que contiene el comando una vez armado 
.................... int LuzIntensidad[12]; // Arreglo de intensidad por defecto de luces (se guarda la config) 
.................... int LuzAccion[12]; // Arreglo de intensidad instantanea de luces 
.................... int LuzEstado[12]; // Arreglo de Estado de luces 
.................... short TeclaEstado[12]; // Arreglo de Estado de las teclas 
.................... short Teclas; // Bandera de bloqueo de teclas 
.................... int i=0; // Contador puntero para armar el comando recibido por el bus 
.................... int j=0; // Contador en interrupcion de cruce por cero para tiempos largos 
....................  
....................  
.................... void main(){ 
*
05AE:  MOVF   03,W
05AF:  ANDLW  1F
05B0:  MOVWF  03
05B1:  BCF    07.5
05B2:  MOVLW  19
05B3:  BSF    03.5
05B4:  MOVWF  19
05B5:  MOVLW  A6
05B6:  MOVWF  18
05B7:  MOVLW  90
05B8:  BCF    03.5
05B9:  MOVWF  18
05BA:  CLRF   52
05BB:  CLRF   53
05BC:  BSF    03.5
05BD:  BSF    1F.0
05BE:  BSF    1F.1
05BF:  BSF    1F.2
05C0:  BCF    1F.3
05C1:  MOVLW  07
05C2:  MOVWF  1C
05C3:  BCF    03.7
....................  
.................... HolaMundo(); // Comenzamos la ejecucion preguntando configuracion y como nos apagamos la ultima vez 
05C4:  BCF    03.5
05C5:  GOTO   1B6
....................  
....................  
.................... while (1){ /////////////// LOOP PRINCIPAL DE MAIN /////////////////////////////// 
....................  
.................... if (Teclas == True) Entradas(); // Leemos entradas 
05C6:  BTFSC  51.0
05C7:  GOTO   217
.................... Cambio(); // Cambios periodicos 
05C8:  GOTO   47E
.................... restart_wdt(); // Reiniciamos el perro 
05C9:  CLRWDT
.................... LEDOFF; 
05CA:  BSF    08.7
05CB:  GOTO   5C6
.................... } // while 1 
.................... } // main 
....................  
05CC:  SLEEP
....................  
.................... void Comunica(){ 
.................... i=0; 
*
0063:  CLRF   52
.................... if (( (Comando[0]) + (Comando[1]) ) == Comando[2]){ // Prueba de checksum 
0064:  MOVF   28,W
0065:  ADDWF  27,W
0066:  SUBWF  29,W
0067:  BTFSS  03.2
0068:  GOTO   09D
.................... if (((Comando[0])-RESTA) < 13) {  // Solo Luces individuales 
0069:  MOVLW  45
006A:  SUBWF  27,W
006B:  SUBLW  0C
006C:  BTFSS  03.0
006D:  GOTO   081
....................       if (Comando[1] < 40){ 
006E:  MOVF   28,W
006F:  SUBLW  27
0070:  BTFSS  03.0
0071:  GOTO   07A
....................       LuzIntensidad[(Comando[0]-RESTA)]=Comando[1]; 
0072:  MOVLW  45
0073:  SUBWF  27,W
0074:  ADDLW  2B
0075:  MOVWF  04
0076:  BCF    03.7
0077:  MOVF   28,W
0078:  MOVWF  00
....................       } else { 
0079:  GOTO   081
....................       LuzEstado[(Comando[0]-RESTA)]=Comando[1]; 
007A:  MOVLW  45
007B:  SUBWF  27,W
007C:  ADDLW  43
007D:  MOVWF  04
007E:  BCF    03.7
007F:  MOVF   28,W
0080:  MOVWF  00
....................       } 
.................... }// If 
....................  
.................... if ((Comando[0]) == TODOS){ // Para todas las luces 
0081:  MOVF   27,W
0082:  SUBLW  64
0083:  BTFSS  03.2
0084:  GOTO   09D
.................... int Cuenta; 
....................    for (Cuenta=0;Cuenta<12;Cuenta++){ // llena todo desde el 0 al 11 
0085:  CLRF   58
0086:  MOVF   58,W
0087:  SUBLW  0B
0088:  BTFSS  03.0
0089:  GOTO   09D
....................       if (Comando[1] < 40) { 
008A:  MOVF   28,W
008B:  SUBLW  27
008C:  BTFSS  03.0
008D:  GOTO   095
....................       LuzIntensidad[Cuenta]=Comando[1]; 
008E:  MOVLW  2B
008F:  ADDWF  58,W
0090:  MOVWF  04
0091:  BCF    03.7
0092:  MOVF   28,W
0093:  MOVWF  00
....................       } else { 
0094:  GOTO   09B
....................       LuzEstado[Cuenta]=Comando[1]; 
0095:  MOVLW  43
0096:  ADDWF  58,W
0097:  MOVWF  04
0098:  BCF    03.7
0099:  MOVF   28,W
009A:  MOVWF  00
....................       } 
009B:  INCF   58,F
009C:  GOTO   086
.................... } //For 
.................... } // If 
.................... } // if checksum 
.................... } //fn 
....................  
....................  
.................... void Entradas() { 
.................... if ( (input(IN1)) ^ TeclaEstado[0] ){  // Si cambia la tecla 
*
0217:  MOVLW  00
0218:  BTFSC  08.1
0219:  MOVLW  01
021A:  MOVWF  55
021B:  MOVLW  00
021C:  BTFSC  4F.0
021D:  MOVLW  01
021E:  XORWF  55,W
021F:  BTFSC  03.2
0220:  GOTO   24A
.................... TeclaEstado[0]=input(IN1); // Gurdamos el Cambio 
0221:  BCF    4F.0
0222:  BTFSC  08.1
0223:  BSF    4F.0
.................... LEDON; 
0224:  BCF    08.7
.................... if (!(((LuzEstado[0]) == 90) || ((LuzEstado[0]) == 102))) { 
0225:  MOVF   43,W
0226:  SUBLW  5A
0227:  BTFSC  03.2
0228:  GOTO   23C
0229:  MOVF   43,W
022A:  SUBLW  66
022B:  BTFSC  03.2
022C:  GOTO   23C
.................... printf("%c%c%c%c", 250, LUZ0, 90, LUZ0 + 90); //PRENDO 
022D:  MOVLW  FA
022E:  MOVWF  55
022F:  CALL   1A9
0230:  MOVLW  21
0231:  MOVWF  55
0232:  CALL   1A9
0233:  MOVLW  5A
0234:  MOVWF  55
0235:  CALL   1A9
0236:  MOVLW  7B
0237:  MOVWF  55
0238:  CALL   1A9
.................... LuzEstado[0]=90; 
0239:  MOVLW  5A
023A:  MOVWF  43
.................... } else { 
023B:  GOTO   24A
.................... printf("%c%c%c%c", 250, LUZ0, 80, LUZ0 + 80); //APAGO 
023C:  MOVLW  FA
023D:  MOVWF  55
023E:  CALL   1A9
023F:  MOVLW  21
0240:  MOVWF  55
0241:  CALL   1A9
0242:  MOVLW  50
0243:  MOVWF  55
0244:  CALL   1A9
0245:  MOVLW  71
0246:  MOVWF  55
0247:  CALL   1A9
.................... LuzEstado[0]=80; 
0248:  MOVLW  50
0249:  MOVWF  43
.................... } 
.................... } 
....................  
.................... if ( (input(IN2)) ^ TeclaEstado[1] ){  // Si cambia la tecla 
024A:  MOVLW  00
024B:  BTFSC  08.0
024C:  MOVLW  01
024D:  MOVWF  55
024E:  MOVLW  00
024F:  BTFSC  4F.1
0250:  MOVLW  01
0251:  XORWF  55,W
0252:  BTFSC  03.2
0253:  GOTO   27D
.................... TeclaEstado[1]=input(IN2); // Gurdamos el Cambio 
0254:  BCF    4F.1
0255:  BTFSC  08.0
0256:  BSF    4F.1
.................... LEDON; 
0257:  BCF    08.7
.................... if (!(((LuzEstado[1]) == 90) || ((LuzEstado[1]) == 102))) { 
0258:  MOVF   44,W
0259:  SUBLW  5A
025A:  BTFSC  03.2
025B:  GOTO   26F
025C:  MOVF   44,W
025D:  SUBLW  66
025E:  BTFSC  03.2
025F:  GOTO   26F
.................... printf("%c%c%c%c", 250, LUZ1, 90, LUZ1 + 90); //PRENDO 
0260:  MOVLW  FA
0261:  MOVWF  55
0262:  CALL   1A9
0263:  MOVLW  22
0264:  MOVWF  55
0265:  CALL   1A9
0266:  MOVLW  5A
0267:  MOVWF  55
0268:  CALL   1A9
0269:  MOVLW  7C
026A:  MOVWF  55
026B:  CALL   1A9
.................... LuzEstado[1]=90; 
026C:  MOVLW  5A
026D:  MOVWF  44
.................... } else { 
026E:  GOTO   27D
.................... printf("%c%c%c%c", 250, LUZ1, 80, LUZ1 + 80); //APAGO 
026F:  MOVLW  FA
0270:  MOVWF  55
0271:  CALL   1A9
0272:  MOVLW  22
0273:  MOVWF  55
0274:  CALL   1A9
0275:  MOVLW  50
0276:  MOVWF  55
0277:  CALL   1A9
0278:  MOVLW  72
0279:  MOVWF  55
027A:  CALL   1A9
.................... LuzEstado[1]=80; 
027B:  MOVLW  50
027C:  MOVWF  44
.................... } 
.................... } 
....................  
.................... if ( (input(IN3)) ^ TeclaEstado[2] ){  // Si cambia la tecla 
027D:  MOVLW  00
027E:  BTFSC  07.3
027F:  MOVLW  01
0280:  MOVWF  55
0281:  MOVLW  00
0282:  BTFSC  4F.2
0283:  MOVLW  01
0284:  XORWF  55,W
0285:  BTFSC  03.2
0286:  GOTO   2B0
.................... TeclaEstado[2]=input(IN3); // Gurdamos el Cambio 
0287:  BCF    4F.2
0288:  BTFSC  07.3
0289:  BSF    4F.2
.................... LEDON; 
028A:  BCF    08.7
.................... if (!(((LuzEstado[2]) == 90) || ((LuzEstado[2]) == 102))) { 
028B:  MOVF   45,W
028C:  SUBLW  5A
028D:  BTFSC  03.2
028E:  GOTO   2A2
028F:  MOVF   45,W
0290:  SUBLW  66
0291:  BTFSC  03.2
0292:  GOTO   2A2
.................... printf("%c%c%c%c", 250, LUZ2, 90, LUZ2 + 90); //PRENDO 
0293:  MOVLW  FA
0294:  MOVWF  55
0295:  CALL   1A9
0296:  MOVLW  23
0297:  MOVWF  55
0298:  CALL   1A9
0299:  MOVLW  5A
029A:  MOVWF  55
029B:  CALL   1A9
029C:  MOVLW  7D
029D:  MOVWF  55
029E:  CALL   1A9
.................... LuzEstado[2]=90; 
029F:  MOVLW  5A
02A0:  MOVWF  45
.................... } else { 
02A1:  GOTO   2B0
.................... printf("%c%c%c%c", 250, LUZ2, 80, LUZ2 + 80); //APAGO 
02A2:  MOVLW  FA
02A3:  MOVWF  55
02A4:  CALL   1A9
02A5:  MOVLW  23
02A6:  MOVWF  55
02A7:  CALL   1A9
02A8:  MOVLW  50
02A9:  MOVWF  55
02AA:  CALL   1A9
02AB:  MOVLW  73
02AC:  MOVWF  55
02AD:  CALL   1A9
.................... LuzEstado[2]=80; 
02AE:  MOVLW  50
02AF:  MOVWF  45
.................... } 
.................... } 
....................  
.................... if ( (input(IN4)) ^ TeclaEstado[3] ){  // Si cambia la tecla 
02B0:  MOVLW  00
02B1:  BTFSC  07.2
02B2:  MOVLW  01
02B3:  MOVWF  55
02B4:  MOVLW  00
02B5:  BTFSC  4F.3
02B6:  MOVLW  01
02B7:  XORWF  55,W
02B8:  BTFSC  03.2
02B9:  GOTO   2E3
.................... TeclaEstado[3]=input(IN4); // Gurdamos el Cambio 
02BA:  BCF    4F.3
02BB:  BTFSC  07.2
02BC:  BSF    4F.3
.................... LEDON; 
02BD:  BCF    08.7
.................... if (!(((LuzEstado[3]) == 90) || ((LuzEstado[3]) == 102))) { 
02BE:  MOVF   46,W
02BF:  SUBLW  5A
02C0:  BTFSC  03.2
02C1:  GOTO   2D5
02C2:  MOVF   46,W
02C3:  SUBLW  66
02C4:  BTFSC  03.2
02C5:  GOTO   2D5
.................... printf("%c%c%c%c", 250, LUZ3, 90, LUZ3 + 90); //PRENDO 
02C6:  MOVLW  FA
02C7:  MOVWF  55
02C8:  CALL   1A9
02C9:  MOVLW  24
02CA:  MOVWF  55
02CB:  CALL   1A9
02CC:  MOVLW  5A
02CD:  MOVWF  55
02CE:  CALL   1A9
02CF:  MOVLW  7E
02D0:  MOVWF  55
02D1:  CALL   1A9
.................... LuzEstado[3]=90; 
02D2:  MOVLW  5A
02D3:  MOVWF  46
.................... } else { 
02D4:  GOTO   2E3
.................... printf("%c%c%c%c", 250, LUZ3, 80, LUZ3 + 80); //APAGO 
02D5:  MOVLW  FA
02D6:  MOVWF  55
02D7:  CALL   1A9
02D8:  MOVLW  24
02D9:  MOVWF  55
02DA:  CALL   1A9
02DB:  MOVLW  50
02DC:  MOVWF  55
02DD:  CALL   1A9
02DE:  MOVLW  74
02DF:  MOVWF  55
02E0:  CALL   1A9
.................... LuzEstado[3]=80; 
02E1:  MOVLW  50
02E2:  MOVWF  46
.................... } 
.................... } 
....................  
.................... if ( (input(IN5)) ^ TeclaEstado[4] ){  // Si cambia la tecla 
02E3:  MOVLW  00
02E4:  BTFSC  07.1
02E5:  MOVLW  01
02E6:  MOVWF  55
02E7:  MOVLW  00
02E8:  BTFSC  4F.4
02E9:  MOVLW  01
02EA:  XORWF  55,W
02EB:  BTFSC  03.2
02EC:  GOTO   316
.................... TeclaEstado[4]=input(IN5); // Gurdamos el Cambio 
02ED:  BCF    4F.4
02EE:  BTFSC  07.1
02EF:  BSF    4F.4
.................... LEDON; 
02F0:  BCF    08.7
.................... if (!(((LuzEstado[4]) == 90) || ((LuzEstado[4]) == 102))) { 
02F1:  MOVF   47,W
02F2:  SUBLW  5A
02F3:  BTFSC  03.2
02F4:  GOTO   308
02F5:  MOVF   47,W
02F6:  SUBLW  66
02F7:  BTFSC  03.2
02F8:  GOTO   308
.................... printf("%c%c%c%c", 250, LUZ4, 90, LUZ4 + 90); //PRENDO 
02F9:  MOVLW  FA
02FA:  MOVWF  55
02FB:  CALL   1A9
02FC:  MOVLW  25
02FD:  MOVWF  55
02FE:  CALL   1A9
02FF:  MOVLW  5A
0300:  MOVWF  55
0301:  CALL   1A9
0302:  MOVLW  7F
0303:  MOVWF  55
0304:  CALL   1A9
.................... LuzEstado[4]=90; 
0305:  MOVLW  5A
0306:  MOVWF  47
.................... } else { 
0307:  GOTO   316
.................... printf("%c%c%c%c", 250, LUZ4, 80, LUZ4 + 80); //APAGO 
0308:  MOVLW  FA
0309:  MOVWF  55
030A:  CALL   1A9
030B:  MOVLW  25
030C:  MOVWF  55
030D:  CALL   1A9
030E:  MOVLW  50
030F:  MOVWF  55
0310:  CALL   1A9
0311:  MOVLW  75
0312:  MOVWF  55
0313:  CALL   1A9
.................... LuzEstado[4]=80; 
0314:  MOVLW  50
0315:  MOVWF  47
.................... } 
.................... } 
....................  
.................... if ( (input(IN6)) ^ TeclaEstado[5] ){  // Si cambia la tecla 
0316:  MOVLW  00
0317:  BTFSC  07.0
0318:  MOVLW  01
0319:  MOVWF  55
031A:  MOVLW  00
031B:  BTFSC  4F.5
031C:  MOVLW  01
031D:  XORWF  55,W
031E:  BTFSC  03.2
031F:  GOTO   349
.................... TeclaEstado[5]=input(IN6); // Gurdamos el Cambio 
0320:  BCF    4F.5
0321:  BTFSC  07.0
0322:  BSF    4F.5
.................... LEDON; 
0323:  BCF    08.7
.................... if (!(((LuzEstado[5]) == 90) || ((LuzEstado[5]) == 102))) { 
0324:  MOVF   48,W
0325:  SUBLW  5A
0326:  BTFSC  03.2
0327:  GOTO   33B
0328:  MOVF   48,W
0329:  SUBLW  66
032A:  BTFSC  03.2
032B:  GOTO   33B
.................... printf("%c%c%c%c", 250, LUZ5, 90, LUZ5 + 90); //PRENDO 
032C:  MOVLW  FA
032D:  MOVWF  55
032E:  CALL   1A9
032F:  MOVLW  26
0330:  MOVWF  55
0331:  CALL   1A9
0332:  MOVLW  5A
0333:  MOVWF  55
0334:  CALL   1A9
0335:  MOVLW  80
0336:  MOVWF  55
0337:  CALL   1A9
.................... LuzEstado[5]=90; 
0338:  MOVLW  5A
0339:  MOVWF  48
.................... } else { 
033A:  GOTO   349
.................... printf("%c%c%c%c", 250, LUZ5, 80, LUZ5 + 80); //APAGO 
033B:  MOVLW  FA
033C:  MOVWF  55
033D:  CALL   1A9
033E:  MOVLW  26
033F:  MOVWF  55
0340:  CALL   1A9
0341:  MOVLW  50
0342:  MOVWF  55
0343:  CALL   1A9
0344:  MOVLW  76
0345:  MOVWF  55
0346:  CALL   1A9
.................... LuzEstado[5]=80; 
0347:  MOVLW  50
0348:  MOVWF  48
.................... } 
.................... } 
....................  
.................... if ( (input(IN7)) ^ TeclaEstado[6] ){  // Si cambia la tecla 
0349:  MOVLW  00
034A:  BTFSC  08.6
034B:  MOVLW  01
034C:  MOVWF  55
034D:  MOVLW  00
034E:  BTFSC  4F.6
034F:  MOVLW  01
0350:  XORWF  55,W
0351:  BTFSC  03.2
0352:  GOTO   37C
.................... TeclaEstado[6]=input(IN7); // Gurdamos el Cambio 
0353:  BCF    4F.6
0354:  BTFSC  08.6
0355:  BSF    4F.6
.................... LEDON; 
0356:  BCF    08.7
.................... if (!(((LuzEstado[6]) == 90) || ((LuzEstado[6]) == 102))) { 
0357:  MOVF   49,W
0358:  SUBLW  5A
0359:  BTFSC  03.2
035A:  GOTO   36E
035B:  MOVF   49,W
035C:  SUBLW  66
035D:  BTFSC  03.2
035E:  GOTO   36E
.................... printf("%c%c%c%c", 250, LUZ6, 90, LUZ6 + 90); //PRENDO 
035F:  MOVLW  FA
0360:  MOVWF  55
0361:  CALL   1A9
0362:  MOVLW  27
0363:  MOVWF  55
0364:  CALL   1A9
0365:  MOVLW  5A
0366:  MOVWF  55
0367:  CALL   1A9
0368:  MOVLW  81
0369:  MOVWF  55
036A:  CALL   1A9
.................... LuzEstado[6]=90; 
036B:  MOVLW  5A
036C:  MOVWF  49
.................... } else { 
036D:  GOTO   37C
.................... printf("%c%c%c%c", 250, LUZ6, 80, LUZ6 + 80); //APAGO 
036E:  MOVLW  FA
036F:  MOVWF  55
0370:  CALL   1A9
0371:  MOVLW  27
0372:  MOVWF  55
0373:  CALL   1A9
0374:  MOVLW  50
0375:  MOVWF  55
0376:  CALL   1A9
0377:  MOVLW  77
0378:  MOVWF  55
0379:  CALL   1A9
.................... LuzEstado[6]=80; 
037A:  MOVLW  50
037B:  MOVWF  49
.................... } 
.................... } 
....................  
.................... if ( (input(IN8)) ^ TeclaEstado[7] ){  // Si cambia la tecla 
037C:  MOVLW  00
037D:  BTFSC  08.5
037E:  MOVLW  01
037F:  MOVWF  55
0380:  MOVLW  00
0381:  BTFSC  4F.7
0382:  MOVLW  01
0383:  XORWF  55,W
0384:  BTFSC  03.2
0385:  GOTO   3AF
.................... TeclaEstado[7]=input(IN8); // Gurdamos el Cambio 
0386:  BCF    4F.7
0387:  BTFSC  08.5
0388:  BSF    4F.7
.................... LEDON; 
0389:  BCF    08.7
.................... if (!(((LuzEstado[7]) == 90) || ((LuzEstado[7]) == 102))) { 
038A:  MOVF   4A,W
038B:  SUBLW  5A
038C:  BTFSC  03.2
038D:  GOTO   3A1
038E:  MOVF   4A,W
038F:  SUBLW  66
0390:  BTFSC  03.2
0391:  GOTO   3A1
.................... printf("%c%c%c%c", 250, LUZ7, 90, LUZ7 + 90); //PRENDO 
0392:  MOVLW  FA
0393:  MOVWF  55
0394:  CALL   1A9
0395:  MOVLW  28
0396:  MOVWF  55
0397:  CALL   1A9
0398:  MOVLW  5A
0399:  MOVWF  55
039A:  CALL   1A9
039B:  MOVLW  82
039C:  MOVWF  55
039D:  CALL   1A9
.................... LuzEstado[7]=90; 
039E:  MOVLW  5A
039F:  MOVWF  4A
.................... } else { 
03A0:  GOTO   3AF
.................... printf("%c%c%c%c", 250, LUZ7, 80, LUZ7 + 80); //APAGO 
03A1:  MOVLW  FA
03A2:  MOVWF  55
03A3:  CALL   1A9
03A4:  MOVLW  28
03A5:  MOVWF  55
03A6:  CALL   1A9
03A7:  MOVLW  50
03A8:  MOVWF  55
03A9:  CALL   1A9
03AA:  MOVLW  78
03AB:  MOVWF  55
03AC:  CALL   1A9
.................... LuzEstado[7]=80; 
03AD:  MOVLW  50
03AE:  MOVWF  4A
.................... } 
.................... } 
....................  
.................... if ( (input(IN9)) ^ TeclaEstado[8] ){  // Si cambia la tecla 
03AF:  MOVLW  00
03B0:  BTFSC  08.4
03B1:  MOVLW  01
03B2:  MOVWF  55
03B3:  MOVLW  00
03B4:  BTFSC  50.0
03B5:  MOVLW  01
03B6:  XORWF  55,W
03B7:  BTFSC  03.2
03B8:  GOTO   3E2
.................... TeclaEstado[8]=input(IN9); // Gurdamos el Cambio 
03B9:  BCF    50.0
03BA:  BTFSC  08.4
03BB:  BSF    50.0
.................... LEDON; 
03BC:  BCF    08.7
.................... if (!(((LuzEstado[8]) == 90) || ((LuzEstado[8]) == 102))) { 
03BD:  MOVF   4B,W
03BE:  SUBLW  5A
03BF:  BTFSC  03.2
03C0:  GOTO   3D4
03C1:  MOVF   4B,W
03C2:  SUBLW  66
03C3:  BTFSC  03.2
03C4:  GOTO   3D4
.................... printf("%c%c%c%c", 250, LUZ8, 90, LUZ8 + 90); //PRENDO 
03C5:  MOVLW  FA
03C6:  MOVWF  55
03C7:  CALL   1A9
03C8:  MOVLW  29
03C9:  MOVWF  55
03CA:  CALL   1A9
03CB:  MOVLW  5A
03CC:  MOVWF  55
03CD:  CALL   1A9
03CE:  MOVLW  83
03CF:  MOVWF  55
03D0:  CALL   1A9
.................... LuzEstado[8]=90; 
03D1:  MOVLW  5A
03D2:  MOVWF  4B
.................... } else { 
03D3:  GOTO   3E2
.................... printf("%c%c%c%c", 250, LUZ8, 80, LUZ8 + 80); //APAGO 
03D4:  MOVLW  FA
03D5:  MOVWF  55
03D6:  CALL   1A9
03D7:  MOVLW  29
03D8:  MOVWF  55
03D9:  CALL   1A9
03DA:  MOVLW  50
03DB:  MOVWF  55
03DC:  CALL   1A9
03DD:  MOVLW  79
03DE:  MOVWF  55
03DF:  CALL   1A9
.................... LuzEstado[8]=80; 
03E0:  MOVLW  50
03E1:  MOVWF  4B
.................... } 
.................... } 
....................  
.................... if ( (input(IN10)) ^ TeclaEstado[9] ){  // Si cambia la tecla 
03E2:  MOVLW  00
03E3:  BTFSC  07.4
03E4:  MOVLW  01
03E5:  MOVWF  55
03E6:  MOVLW  00
03E7:  BTFSC  50.1
03E8:  MOVLW  01
03E9:  XORWF  55,W
03EA:  BTFSC  03.2
03EB:  GOTO   415
.................... TeclaEstado[9]=input(IN10); // Gurdamos el Cambio 
03EC:  BCF    50.1
03ED:  BTFSC  07.4
03EE:  BSF    50.1
.................... LEDON; 
03EF:  BCF    08.7
.................... if (!(((LuzEstado[9]) == 90) || ((LuzEstado[9]) == 102))) { 
03F0:  MOVF   4C,W
03F1:  SUBLW  5A
03F2:  BTFSC  03.2
03F3:  GOTO   407
03F4:  MOVF   4C,W
03F5:  SUBLW  66
03F6:  BTFSC  03.2
03F7:  GOTO   407
.................... printf("%c%c%c%c", 250, LUZ9, 90, LUZ9 + 90); //PRENDO 
03F8:  MOVLW  FA
03F9:  MOVWF  55
03FA:  CALL   1A9
03FB:  MOVLW  2A
03FC:  MOVWF  55
03FD:  CALL   1A9
03FE:  MOVLW  5A
03FF:  MOVWF  55
0400:  CALL   1A9
0401:  MOVLW  84
0402:  MOVWF  55
0403:  CALL   1A9
.................... LuzEstado[9]=90; 
0404:  MOVLW  5A
0405:  MOVWF  4C
.................... } else { 
0406:  GOTO   415
.................... printf("%c%c%c%c", 250, LUZ9, 80, LUZ9 + 80); //APAGO 
0407:  MOVLW  FA
0408:  MOVWF  55
0409:  CALL   1A9
040A:  MOVLW  2A
040B:  MOVWF  55
040C:  CALL   1A9
040D:  MOVLW  50
040E:  MOVWF  55
040F:  CALL   1A9
0410:  MOVLW  7A
0411:  MOVWF  55
0412:  CALL   1A9
.................... LuzEstado[9]=80; 
0413:  MOVLW  50
0414:  MOVWF  4C
.................... } 
.................... } 
....................  
.................... if ( (input(IN11)) ^ TeclaEstado[10] ){  // Si cambia la tecla 
0415:  MOVLW  00
0416:  BTFSC  08.3
0417:  MOVLW  01
0418:  MOVWF  55
0419:  MOVLW  00
041A:  BTFSC  50.2
041B:  MOVLW  01
041C:  XORWF  55,W
041D:  BTFSC  03.2
041E:  GOTO   448
.................... TeclaEstado[10]=input(IN11); // Gurdamos el Cambio 
041F:  BCF    50.2
0420:  BTFSC  08.3
0421:  BSF    50.2
.................... LEDON; 
0422:  BCF    08.7
.................... if (!(((LuzEstado[10]) == 90) || ((LuzEstado[10]) == 102))) { 
0423:  MOVF   4D,W
0424:  SUBLW  5A
0425:  BTFSC  03.2
0426:  GOTO   43A
0427:  MOVF   4D,W
0428:  SUBLW  66
0429:  BTFSC  03.2
042A:  GOTO   43A
.................... printf("%c%c%c%c", 250, LUZ10, 90, LUZ10 + 90); //PRENDO 
042B:  MOVLW  FA
042C:  MOVWF  55
042D:  CALL   1A9
042E:  MOVLW  2B
042F:  MOVWF  55
0430:  CALL   1A9
0431:  MOVLW  5A
0432:  MOVWF  55
0433:  CALL   1A9
0434:  MOVLW  85
0435:  MOVWF  55
0436:  CALL   1A9
.................... LuzEstado[10]=90; 
0437:  MOVLW  5A
0438:  MOVWF  4D
.................... } else { 
0439:  GOTO   448
.................... printf("%c%c%c%c", 250, LUZ10, 80, LUZ10 + 80); //APAGO 
043A:  MOVLW  FA
043B:  MOVWF  55
043C:  CALL   1A9
043D:  MOVLW  2B
043E:  MOVWF  55
043F:  CALL   1A9
0440:  MOVLW  50
0441:  MOVWF  55
0442:  CALL   1A9
0443:  MOVLW  7B
0444:  MOVWF  55
0445:  CALL   1A9
.................... LuzEstado[10]=80; 
0446:  MOVLW  50
0447:  MOVWF  4D
.................... } 
.................... } 
....................  
.................... if ( (input(IN12)) ^ TeclaEstado[11] ){  // Si cambia la tecla 
0448:  MOVLW  00
0449:  BTFSC  08.2
044A:  MOVLW  01
044B:  MOVWF  55
044C:  MOVLW  00
044D:  BTFSC  50.3
044E:  MOVLW  01
044F:  XORWF  55,W
0450:  BTFSC  03.2
0451:  GOTO   47B
.................... TeclaEstado[11]=input(IN12); // Gurdamos el Cambio 
0452:  BCF    50.3
0453:  BTFSC  08.2
0454:  BSF    50.3
.................... LEDON; 
0455:  BCF    08.7
.................... if (!(((LuzEstado[11]) == 90) || ((LuzEstado[11]) == 102))) { 
0456:  MOVF   4E,W
0457:  SUBLW  5A
0458:  BTFSC  03.2
0459:  GOTO   46D
045A:  MOVF   4E,W
045B:  SUBLW  66
045C:  BTFSC  03.2
045D:  GOTO   46D
.................... printf("%c%c%c%c", 250, LUZ11, 90, LUZ11 + 90); //PRENDO 
045E:  MOVLW  FA
045F:  MOVWF  55
0460:  CALL   1A9
0461:  MOVLW  2C
0462:  MOVWF  55
0463:  CALL   1A9
0464:  MOVLW  5A
0465:  MOVWF  55
0466:  CALL   1A9
0467:  MOVLW  86
0468:  MOVWF  55
0469:  CALL   1A9
.................... LuzEstado[11]=90; 
046A:  MOVLW  5A
046B:  MOVWF  4E
.................... } else { 
046C:  GOTO   47B
.................... printf("%c%c%c%c", 250, LUZ11, 80, LUZ11 + 80); //APAGO 
046D:  MOVLW  FA
046E:  MOVWF  55
046F:  CALL   1A9
0470:  MOVLW  2C
0471:  MOVWF  55
0472:  CALL   1A9
0473:  MOVLW  50
0474:  MOVWF  55
0475:  CALL   1A9
0476:  MOVLW  7C
0477:  MOVWF  55
0478:  CALL   1A9
.................... LuzEstado[11]=80; 
0479:  MOVLW  50
047A:  MOVWF  4E
.................... } 
.................... } 
047B:  BCF    0A.3
047C:  BCF    0A.4
047D:  GOTO   5C8 (RETURN)
.................... } 
....................  
.................... void Cambio(){ 
.................... int Cuenta; 
.................... for (Cuenta=0;Cuenta<12;Cuenta++){ // llena todo desde el 0 al 11 
047E:  CLRF   54
047F:  MOVF   54,W
0480:  SUBLW  0B
0481:  BTFSS  03.0
0482:  GOTO   5AB
....................       if (LuzEstado[Cuenta] == 80) { 
0483:  MOVLW  43
0484:  ADDWF  54,W
0485:  MOVWF  04
0486:  BCF    03.7
0487:  MOVF   00,W
0488:  SUBLW  50
0489:  BTFSS  03.2
048A:  GOTO   491
....................          LuzAccion[Cuenta] = 95; // Apagado 
048B:  MOVLW  37
048C:  ADDWF  54,W
048D:  MOVWF  04
048E:  BCF    03.7
048F:  MOVLW  5F
0490:  MOVWF  00
....................       } // If estado 80 
....................       if (LuzEstado[Cuenta] == 90) { 
0491:  MOVLW  43
0492:  ADDWF  54,W
0493:  MOVWF  04
0494:  BCF    03.7
0495:  MOVF   00,W
0496:  SUBLW  5A
0497:  BTFSS  03.2
0498:  GOTO   4BA
....................          if (LuzIntensidad[Cuenta] == 0) { 
0499:  MOVLW  2B
049A:  ADDWF  54,W
049B:  MOVWF  04
049C:  BCF    03.7
049D:  MOVF   00,F
049E:  BTFSS  03.2
049F:  GOTO   4A7
....................          LuzEstado[Cuenta] = 102; // Maximo 
04A0:  MOVLW  43
04A1:  ADDWF  54,W
04A2:  MOVWF  04
04A3:  BCF    03.7
04A4:  MOVLW  66
04A5:  MOVWF  00
....................          } else { 
04A6:  GOTO   4BA
....................          LuzAccion[Cuenta] = LuzIntensidad[Cuenta]; // Segun intensidad 
04A7:  MOVLW  37
04A8:  ADDWF  54,W
04A9:  MOVWF  78
04AA:  CLRF   7A
04AB:  BTFSC  03.0
04AC:  INCF   7A,F
04AD:  MOVLW  2B
04AE:  ADDWF  54,W
04AF:  MOVWF  04
04B0:  BCF    03.7
04B1:  MOVF   00,W
04B2:  MOVWF  57
04B3:  MOVF   78,W
04B4:  MOVWF  04
04B5:  BCF    03.7
04B6:  BTFSC  7A.0
04B7:  BSF    03.7
04B8:  MOVF   57,W
04B9:  MOVWF  00
....................          } 
....................       } // If estado 90 
....................       if (LuzEstado[Cuenta] == 102) { 
04BA:  MOVLW  43
04BB:  ADDWF  54,W
04BC:  MOVWF  04
04BD:  BCF    03.7
04BE:  MOVF   00,W
04BF:  SUBLW  66
04C0:  BTFSS  03.2
04C1:  GOTO   4C7
....................       LuzAccion[Cuenta] = 0; // MAXIMO 
04C2:  MOVLW  37
04C3:  ADDWF  54,W
04C4:  MOVWF  04
04C5:  BCF    03.7
04C6:  CLRF   00
....................       } 
....................       if (LuzEstado[Cuenta] == 95) { 
04C7:  MOVLW  43
04C8:  ADDWF  54,W
04C9:  MOVWF  04
04CA:  BCF    03.7
04CB:  MOVF   00,W
04CC:  SUBLW  5F
04CD:  BTFSS  03.2
04CE:  GOTO   4D5
....................       LuzAccion[Cuenta] = 17; // MEDIO 
04CF:  MOVLW  37
04D0:  ADDWF  54,W
04D1:  MOVWF  04
04D2:  BCF    03.7
04D3:  MOVLW  11
04D4:  MOVWF  00
....................       } 
....................       if (LuzEstado[Cuenta] == 96) { 
04D5:  MOVLW  43
04D6:  ADDWF  54,W
04D7:  MOVWF  04
04D8:  BCF    03.7
04D9:  MOVF   00,W
04DA:  SUBLW  60
04DB:  BTFSS  03.2
04DC:  GOTO   4E3
....................       LuzAccion[Cuenta] = 23; //MINIMO 
04DD:  MOVLW  37
04DE:  ADDWF  54,W
04DF:  MOVWF  04
04E0:  BCF    03.7
04E1:  MOVLW  17
04E2:  MOVWF  00
....................       } 
....................       if ((LuzEstado[Cuenta] == 120) || (LuzEstado[Cuenta] == 70)){ // ONOFF1 mas lento de todos 
04E3:  MOVLW  43
04E4:  ADDWF  54,W
04E5:  MOVWF  04
04E6:  BCF    03.7
04E7:  MOVF   00,W
04E8:  SUBLW  78
04E9:  BTFSC  03.2
04EA:  GOTO   4F3
04EB:  MOVLW  43
04EC:  ADDWF  54,W
04ED:  MOVWF  04
04EE:  BCF    03.7
04EF:  MOVF   00,W
04F0:  SUBLW  46
04F1:  BTFSS  03.2
04F2:  GOTO   50D
....................          if (bit_test(j,7)) { // Encendido 
04F3:  BTFSS  53.7
04F4:  GOTO   501
....................          LuzEstado[Cuenta] = 120; 
04F5:  MOVLW  43
04F6:  ADDWF  54,W
04F7:  MOVWF  04
04F8:  BCF    03.7
04F9:  MOVLW  78
04FA:  MOVWF  00
....................          LuzAccion[Cuenta] = 0; 
04FB:  MOVLW  37
04FC:  ADDWF  54,W
04FD:  MOVWF  04
04FE:  BCF    03.7
04FF:  CLRF   00
....................          } 
0500:  GOTO   50D
....................          else { 
....................          LuzEstado[Cuenta] = 70; 
0501:  MOVLW  43
0502:  ADDWF  54,W
0503:  MOVWF  04
0504:  BCF    03.7
0505:  MOVLW  46
0506:  MOVWF  00
....................          LuzAccion[Cuenta] = 95; 
0507:  MOVLW  37
0508:  ADDWF  54,W
0509:  MOVWF  04
050A:  BCF    03.7
050B:  MOVLW  5F
050C:  MOVWF  00
....................          } 
....................       } // If ONOFF 1 
....................        
....................       if ((LuzEstado[Cuenta] == 121) || (LuzEstado[Cuenta] == 71)){ // ONOFF2 mediano 
050D:  MOVLW  43
050E:  ADDWF  54,W
050F:  MOVWF  04
0510:  BCF    03.7
0511:  MOVF   00,W
0512:  SUBLW  79
0513:  BTFSC  03.2
0514:  GOTO   51D
0515:  MOVLW  43
0516:  ADDWF  54,W
0517:  MOVWF  04
0518:  BCF    03.7
0519:  MOVF   00,W
051A:  SUBLW  47
051B:  BTFSS  03.2
051C:  GOTO   537
....................          if (bit_test(j,6)) { // Encendido 
051D:  BTFSS  53.6
051E:  GOTO   52B
....................          LuzEstado[Cuenta] = 121; 
051F:  MOVLW  43
0520:  ADDWF  54,W
0521:  MOVWF  04
0522:  BCF    03.7
0523:  MOVLW  79
0524:  MOVWF  00
....................          LuzAccion[Cuenta] = 0; 
0525:  MOVLW  37
0526:  ADDWF  54,W
0527:  MOVWF  04
0528:  BCF    03.7
0529:  CLRF   00
....................          } 
052A:  GOTO   537
....................          else { 
....................          LuzEstado[Cuenta] = 71; 
052B:  MOVLW  43
052C:  ADDWF  54,W
052D:  MOVWF  04
052E:  BCF    03.7
052F:  MOVLW  47
0530:  MOVWF  00
....................          LuzAccion[Cuenta] = 95; 
0531:  MOVLW  37
0532:  ADDWF  54,W
0533:  MOVWF  04
0534:  BCF    03.7
0535:  MOVLW  5F
0536:  MOVWF  00
....................          } 
....................          } // If ONOFF 2 
....................        
....................       if ((LuzEstado[Cuenta] == 122) || (LuzEstado[Cuenta] == 72)){ // ONOFF3 rapido 
0537:  MOVLW  43
0538:  ADDWF  54,W
0539:  MOVWF  04
053A:  BCF    03.7
053B:  MOVF   00,W
053C:  SUBLW  7A
053D:  BTFSC  03.2
053E:  GOTO   547
053F:  MOVLW  43
0540:  ADDWF  54,W
0541:  MOVWF  04
0542:  BCF    03.7
0543:  MOVF   00,W
0544:  SUBLW  48
0545:  BTFSS  03.2
0546:  GOTO   561
....................          if (bit_test(j,5)) { // Encendido 
0547:  BTFSS  53.5
0548:  GOTO   555
....................          LuzEstado[Cuenta] = 122; 
0549:  MOVLW  43
054A:  ADDWF  54,W
054B:  MOVWF  04
054C:  BCF    03.7
054D:  MOVLW  7A
054E:  MOVWF  00
....................          LuzAccion[Cuenta] = 0; 
054F:  MOVLW  37
0550:  ADDWF  54,W
0551:  MOVWF  04
0552:  BCF    03.7
0553:  CLRF   00
....................          } 
0554:  GOTO   561
....................          else { 
....................          LuzEstado[Cuenta] = 72; 
0555:  MOVLW  43
0556:  ADDWF  54,W
0557:  MOVWF  04
0558:  BCF    03.7
0559:  MOVLW  48
055A:  MOVWF  00
....................          LuzAccion[Cuenta] = 95; 
055B:  MOVLW  37
055C:  ADDWF  54,W
055D:  MOVWF  04
055E:  BCF    03.7
055F:  MOVLW  5F
0560:  MOVWF  00
....................          } 
....................           
....................       } // If ONOFF 1 
....................       if ((LuzEstado[Cuenta] == 123) || (LuzEstado[Cuenta] == 73)){ // ONOFF4 rapidisimo 
0561:  MOVLW  43
0562:  ADDWF  54,W
0563:  MOVWF  04
0564:  BCF    03.7
0565:  MOVF   00,W
0566:  SUBLW  7B
0567:  BTFSC  03.2
0568:  GOTO   571
0569:  MOVLW  43
056A:  ADDWF  54,W
056B:  MOVWF  04
056C:  BCF    03.7
056D:  MOVF   00,W
056E:  SUBLW  49
056F:  BTFSS  03.2
0570:  GOTO   58B
....................          if (bit_test(j,4)) { // Encendido 
0571:  BTFSS  53.4
0572:  GOTO   57F
....................          LuzEstado[Cuenta] = 123; 
0573:  MOVLW  43
0574:  ADDWF  54,W
0575:  MOVWF  04
0576:  BCF    03.7
0577:  MOVLW  7B
0578:  MOVWF  00
....................          LuzAccion[Cuenta] = 0; 
0579:  MOVLW  37
057A:  ADDWF  54,W
057B:  MOVWF  04
057C:  BCF    03.7
057D:  CLRF   00
....................          } 
057E:  GOTO   58B
....................          else { 
....................          LuzEstado[Cuenta] = 73; 
057F:  MOVLW  43
0580:  ADDWF  54,W
0581:  MOVWF  04
0582:  BCF    03.7
0583:  MOVLW  49
0584:  MOVWF  00
....................          LuzAccion[Cuenta] = 95; 
0585:  MOVLW  37
0586:  ADDWF  54,W
0587:  MOVWF  04
0588:  BCF    03.7
0589:  MOVLW  5F
058A:  MOVWF  00
....................          } 
....................       } // If ONOFF 1 
....................        
.................... /*  OLAS PENDIENTES DE IMPLEMENTAR 
....................  
....................       if (LuzEstado[Cuenta] == 130) ii =// OLA 1 Lentisima 
....................          if (bit_test(j,7)) ii = 0; 
....................          else ii = 10000 
....................  
....................        
....................       if (LuzEstado[Cuenta] == 131){ // OLA 2 normal 
....................          if (bit_test(j,7)) ii = 0; 
....................          else ii = 10000 
....................       } // If ONOFF 1 
....................        
....................       if (LuzEstado[Cuenta] == 132){ // OLA 3 rapida 
....................          if (bit_test(j,7)) ii = 0; 
....................          else ii = 10000 
....................       } // If ONOFF 1 
.................... */ 
....................  
....................       if (LuzEstado[Cuenta] == 140){ // ALARMA ON 
058B:  MOVLW  43
058C:  ADDWF  54,W
058D:  MOVWF  04
058E:  BCF    03.7
058F:  MOVF   00,W
0590:  SUBLW  8C
0591:  BTFSS  03.2
0592:  GOTO   59A
....................          Teclas = false; 
0593:  BCF    51.0
....................          LuzEstado[Cuenta] = 122; 
0594:  MOVLW  43
0595:  ADDWF  54,W
0596:  MOVWF  04
0597:  BCF    03.7
0598:  MOVLW  7A
0599:  MOVWF  00
....................       } // If ONOFF 3 --> Alarma 
....................  
....................       if (LuzEstado[Cuenta] == 141){ // ALARMA OFF 
059A:  MOVLW  43
059B:  ADDWF  54,W
059C:  MOVWF  04
059D:  BCF    03.7
059E:  MOVF   00,W
059F:  SUBLW  8D
05A0:  BTFSS  03.2
05A1:  GOTO   5A9
....................          Teclas = true; 
05A2:  BSF    51.0
....................          LuzEstado[Cuenta] = 90; 
05A3:  MOVLW  43
05A4:  ADDWF  54,W
05A5:  MOVWF  04
05A6:  BCF    03.7
05A7:  MOVLW  5A
05A8:  MOVWF  00
....................       } // If ONOFF 3 --> Alarma 
05A9:  INCF   54,F
05AA:  GOTO   47F
.................... } // FOR 
05AB:  BCF    0A.3
05AC:  BCF    0A.4
05AD:  GOTO   5C9 (RETURN)
.................... } // fn 
....................   
.................... void HolaMundo(){ // Inicio & configuracion de variables 
....................  
.................... /////////  Inicio el WatchDog  /////////////// 
.................... setup_wdt(WDT_2304MS); 
*
01B6:  MOVLW  0F
01B7:  MOVWF  77
01B8:  CLRF   01
01B9:  MOVLW  81
01BA:  MOVWF  04
01BB:  BCF    03.7
01BC:  MOVF   00,W
01BD:  ANDLW  F0
01BE:  IORLW  07
01BF:  MOVWF  00
01C0:  CLRWDT
01C1:  MOVF   00,W
01C2:  ANDLW  F7
01C3:  BTFSC  77.3
01C4:  ANDLW  F0
01C5:  IORWF  77,W
01C6:  MOVWF  00
....................  
.................... /////////  Puertos  /////////////// 
.................... set_tris_a(0b00001011);  // Puerto A como salidas, menos A0, A1 y A3 que son entradas analogicas. 
01C7:  MOVLW  0B
01C8:  BSF    03.5
01C9:  MOVWF  05
.................... set_tris_b(0b00000001);  // Puerto B, todas salidas, menos B0 que es el cruce por cero 
01CA:  MOVLW  01
01CB:  MOVWF  06
.................... set_tris_c(0b10011111);  // Puerto C, de 0 a 4 -> entradas; 5 y 6 para RS232 salidas; C7 es RX -> Entrada 
01CC:  MOVLW  9F
01CD:  MOVWF  07
.................... set_tris_d(0b01111111);  // Puerto D, todas entradas menos el Piloto (D7) 
01CE:  MOVLW  7F
01CF:  MOVWF  08
....................  
.................... /////////  Conversor AD  /////////////// 
.................... setup_adc_ports(RA0_RA1_Ra3_ANALOG);  // Entradas analogicas. 
01D0:  BCF    1F.0
01D1:  BCF    1F.1
01D2:  BSF    1F.2
01D3:  BCF    1F.3
.................... setup_adc(ADC_CLOCK_INTERNAL);  // Barrido ¿Hace falta? 
01D4:  BCF    1F.6
01D5:  BCF    03.5
01D6:  BSF    1F.6
01D7:  BSF    1F.7
01D8:  BSF    03.5
01D9:  BCF    1F.7
01DA:  BCF    03.5
01DB:  BSF    1F.0
....................  
.................... /////////  Temporizadores  /////////////// 
.................... setup_timer_1(T1_INTERNAL | T1_DIV_BY_1); // Contador del tiempo de cruce por cero 
01DC:  MOVLW  85
01DD:  MOVWF  10
.................... setup_timer_2(T2_DIV_BY_1, 200, 1); // Contador de entrada a la funcion Accion(); 185 
01DE:  MOVLW  00
01DF:  MOVWF  78
01E0:  IORLW  04
01E1:  MOVWF  12
01E2:  MOVLW  C8
01E3:  BSF    03.5
01E4:  MOVWF  12
....................  
.................... /////////  Interrupciones  /////////////// 
.................... enable_interrupts(global); 
01E5:  MOVLW  C0
01E6:  BCF    03.5
01E7:  IORWF  0B,F
.................... //disable_interrupts(global); 
.................... enable_interrupts(int_ext); // Interrupcion para el cruce por 0 
01E8:  BSF    0B.4
.................... enable_interrupts(int_rda); // Interrupcion de llegada de datos 
01E9:  BSF    03.5
01EA:  BSF    0C.5
.................... enable_interrupts(int_timer2); // frecuencia de entrada al barrido de focos 
01EB:  BSF    0C.1
....................  
.................... Teclas = true; // Para que se puedan usar las teclas 
01EC:  BCF    03.5
01ED:  BSF    51.0
....................  
.................... /////////  Inicio valores de luces por defecto por si el servidor no contesta  /////////////// 
.................... int Cuenta; 
.................... for (Cuenta=0;Cuenta<12;Cuenta++){ // llena todo desde el 0 al 11 
01EE:  CLRF   54
01EF:  MOVF   54,W
01F0:  SUBLW  0B
01F1:  BTFSS  03.0
01F2:  GOTO   200
.................... Luzintensidad[Cuenta] = 0; 
01F3:  MOVLW  2B
01F4:  ADDWF  54,W
01F5:  MOVWF  04
01F6:  BCF    03.7
01F7:  CLRF   00
.................... LuzEstado[Cuenta] = 95; 
01F8:  MOVLW  43
01F9:  ADDWF  54,W
01FA:  MOVWF  04
01FB:  BCF    03.7
01FC:  MOVLW  5F
01FD:  MOVWF  00
01FE:  INCF   54,F
01FF:  GOTO   1EF
.................... } 
....................  
.................... /////////  Inicio de valores particulares por si el servidor no contesta  /////////////// 
.................... LuzEstado[0] = 120; 
0200:  MOVLW  78
0201:  MOVWF  43
.................... LuzEstado[1] = 121; 
0202:  MOVLW  79
0203:  MOVWF  44
.................... LuzEstado[2] = 122; 
0204:  MOVLW  7A
0205:  MOVWF  45
.................... LuzEstado[3] = 123; 
0206:  MOVLW  7B
0207:  MOVWF  46
.................... //LuzEstado[4] = 90; 
.................... //LuzEstado[5] = 90; 
.................... //LuzEstado[6] = 90; 
.................... //LuzEstado[7] = 90; 
.................... //LuzEstado[8] = 90; 
.................... //LuzEstado[9] = 90; 
.................... //LuzEstado[10] = 90; 
.................... //LuzEstado[11] = 90; 
....................  
.................... printf("%c%c%c%c", 250, 250, 184, 52); //Identificacion de inicio (49 es 1; 50 es 2; 51 es 3; 52 es 4 y 53 es 5) 
0208:  MOVLW  FA
0209:  MOVWF  55
020A:  CALL   1A9
020B:  MOVLW  FA
020C:  MOVWF  55
020D:  CALL   1A9
020E:  MOVLW  B8
020F:  MOVWF  55
0210:  CALL   1A9
0211:  MOVLW  34
0212:  MOVWF  55
0213:  CALL   1A9
0214:  BCF    0A.3
0215:  BCF    0A.4
0216:  GOTO   5C6 (RETURN)
....................  
....................  
.................... } 
....................  
.................... #int_ext 
.................... void Cruce(){ 
.................... set_timer1(0); // Reseteamos el timer porque cruzamos por 0 
*
0041:  CLRF   0E
0042:  CLRF   0F
0043:  CLRF   0E
.................... ++j; // variable de tiempos largos 
0044:  INCF   53,F
.................... } 
....................  
0045:  BCF    0B.1
0046:  BCF    0A.3
0047:  BCF    0A.4
0048:  GOTO   027
.................... #int_rda 
.................... void BusData(){ 
.................... LEDON; 
0049:  BCF    08.7
.................... if (kbhit()){ 
004A:  BTFSS  0C.5
004B:  GOTO   09D
.................... Comando[i]=getc(); 
004C:  MOVLW  27
004D:  ADDWF  52,W
004E:  MOVWF  04
004F:  BCF    03.7
0050:  BTFSS  0C.5
0051:  GOTO   050
0052:  MOVF   1A,W
0053:  MOVWF  00
.................... if (Comando[i] == 250) i=0; 
0054:  MOVLW  27
0055:  ADDWF  52,W
0056:  MOVWF  04
0057:  BCF    03.7
0058:  MOVF   00,W
0059:  SUBLW  FA
005A:  BTFSS  03.2
005B:  GOTO   05E
005C:  CLRF   52
005D:  GOTO   05F
.................... else ++i; 
005E:  INCF   52,F
.................... if (i==3) Comunica(); // Tenemos un comando nuevo 
005F:  MOVF   52,W
0060:  SUBLW  03
0061:  BTFSS  03.2
0062:  GOTO   09D
.................... } 
.................... } 
....................  
*
009D:  BCF    0C.5
009E:  BCF    0A.3
009F:  BCF    0A.4
00A0:  GOTO   027
.................... #int_timer2 
.................... void Accion(){ // Funcion de actuacion de luces de alta velocidad (lo mas depurada posible) 
....................  
.................... if (TMR1H == LuzAccion[0]) output_high(OUT1); 
00A1:  MOVF   37,W
00A2:  SUBWF  0F,W
00A3:  BTFSC  03.2
00A4:  BSF    06.1
.................... if (TMR1H == LuzAccion[1]) output_high(OUT2); 
00A5:  MOVF   38,W
00A6:  SUBWF  0F,W
00A7:  BTFSC  03.2
00A8:  BSF    06.2
.................... if (TMR1H == LuzAccion[2]) output_high(OUT3); 
00A9:  MOVF   39,W
00AA:  SUBWF  0F,W
00AB:  BTFSC  03.2
00AC:  BSF    06.3
.................... if (TMR1H == LuzAccion[3]) output_high(OUT4); 
00AD:  MOVF   3A,W
00AE:  SUBWF  0F,W
00AF:  BTFSC  03.2
00B0:  BSF    06.4
.................... if (TMR1H == LuzAccion[4]) output_high(OUT5); 
00B1:  MOVF   3B,W
00B2:  SUBWF  0F,W
00B3:  BTFSC  03.2
00B4:  BSF    06.5
.................... if (TMR1H == LuzAccion[5]) output_high(OUT6); 
00B5:  MOVF   3C,W
00B6:  SUBWF  0F,W
00B7:  BTFSC  03.2
00B8:  BSF    06.6
.................... if (TMR1H == LuzAccion[6]) output_high(OUT7); 
00B9:  MOVF   3D,W
00BA:  SUBWF  0F,W
00BB:  BTFSC  03.2
00BC:  BSF    06.7
.................... if (TMR1H == LuzAccion[7]) output_high(OUT8); 
00BD:  MOVF   3E,W
00BE:  SUBWF  0F,W
00BF:  BTFSS  03.2
00C0:  GOTO   0C5
00C1:  BSF    03.5
00C2:  BCF    09.1
00C3:  BCF    03.5
00C4:  BSF    09.1
.................... if (TMR1H == LuzAccion[8]) output_high(OUT9); 
00C5:  MOVF   3F,W
00C6:  SUBWF  0F,W
00C7:  BTFSS  03.2
00C8:  GOTO   0CD
00C9:  BSF    03.5
00CA:  BCF    09.2
00CB:  BCF    03.5
00CC:  BSF    09.2
.................... if (TMR1H == LuzAccion[9]) output_high(OUT10); 
00CD:  MOVF   40,W
00CE:  SUBWF  0F,W
00CF:  BTFSC  03.2
00D0:  BSF    05.2
.................... if (TMR1H == LuzAccion[10]) output_high(OUT11); 
00D1:  MOVF   41,W
00D2:  SUBWF  0F,W
00D3:  BTFSS  03.2
00D4:  GOTO   0D9
00D5:  BSF    03.5
00D6:  BCF    09.0
00D7:  BCF    03.5
00D8:  BSF    09.0
.................... if (TMR1H == LuzAccion[11]) output_high(OUT12); 
00D9:  MOVF   42,W
00DA:  SUBWF  0F,W
00DB:  BTFSC  03.2
00DC:  BSF    05.5
....................          
.................... if (TMR1H == LuzAccion[0] + 39) output_high(OUT1); 
00DD:  MOVLW  27
00DE:  ADDWF  37,W
00DF:  SUBWF  0F,W
00E0:  BTFSC  03.2
00E1:  BSF    06.1
.................... if (TMR1H == LuzAccion[1] + 39) output_high(OUT2); 
00E2:  MOVLW  27
00E3:  ADDWF  38,W
00E4:  SUBWF  0F,W
00E5:  BTFSC  03.2
00E6:  BSF    06.2
.................... if (TMR1H == LuzAccion[2] + 39) output_high(OUT3); 
00E7:  MOVLW  27
00E8:  ADDWF  39,W
00E9:  SUBWF  0F,W
00EA:  BTFSC  03.2
00EB:  BSF    06.3
.................... if (TMR1H == LuzAccion[3] + 39) output_high(OUT4); 
00EC:  MOVLW  27
00ED:  ADDWF  3A,W
00EE:  SUBWF  0F,W
00EF:  BTFSC  03.2
00F0:  BSF    06.4
.................... if (TMR1H == LuzAccion[4] + 39) output_high(OUT5); 
00F1:  MOVLW  27
00F2:  ADDWF  3B,W
00F3:  SUBWF  0F,W
00F4:  BTFSC  03.2
00F5:  BSF    06.5
.................... if (TMR1H == LuzAccion[5] + 39) output_high(OUT6); 
00F6:  MOVLW  27
00F7:  ADDWF  3C,W
00F8:  SUBWF  0F,W
00F9:  BTFSC  03.2
00FA:  BSF    06.6
.................... if (TMR1H == LuzAccion[6] + 39) output_high(OUT7); 
00FB:  MOVLW  27
00FC:  ADDWF  3D,W
00FD:  SUBWF  0F,W
00FE:  BTFSC  03.2
00FF:  BSF    06.7
.................... if (TMR1H == LuzAccion[7] + 39) output_high(OUT8); 
0100:  MOVLW  27
0101:  ADDWF  3E,W
0102:  SUBWF  0F,W
0103:  BTFSS  03.2
0104:  GOTO   109
0105:  BSF    03.5
0106:  BCF    09.1
0107:  BCF    03.5
0108:  BSF    09.1
.................... if (TMR1H == LuzAccion[8] + 39) output_high(OUT9); 
0109:  MOVLW  27
010A:  ADDWF  3F,W
010B:  SUBWF  0F,W
010C:  BTFSS  03.2
010D:  GOTO   112
010E:  BSF    03.5
010F:  BCF    09.2
0110:  BCF    03.5
0111:  BSF    09.2
.................... if (TMR1H == LuzAccion[9] + 39) output_high(OUT10); 
0112:  MOVLW  27
0113:  ADDWF  40,W
0114:  SUBWF  0F,W
0115:  BTFSC  03.2
0116:  BSF    05.2
.................... if (TMR1H == LuzAccion[10] + 39) output_high(OUT11); 
0117:  MOVLW  27
0118:  ADDWF  41,W
0119:  SUBWF  0F,W
011A:  BTFSS  03.2
011B:  GOTO   120
011C:  BSF    03.5
011D:  BCF    09.0
011E:  BCF    03.5
011F:  BSF    09.0
.................... if (TMR1H == LuzAccion[11] + 39) output_high(OUT12); 
0120:  MOVLW  27
0121:  ADDWF  42,W
0122:  SUBWF  0F,W
0123:  BTFSC  03.2
0124:  BSF    05.5
....................  
.................... if (TMR1H == 35){     
0125:  MOVF   0F,W
0126:  SUBLW  23
0127:  BTFSS  03.2
0128:  GOTO   165
.................... if (LuzEstado[0]<99) output_low(OUT1);   
0129:  MOVF   43,W
012A:  SUBLW  62
012B:  BTFSC  03.0
012C:  BCF    06.1
.................... if (LuzEstado[1]<99) output_low(OUT2); 
012D:  MOVF   44,W
012E:  SUBLW  62
012F:  BTFSC  03.0
0130:  BCF    06.2
.................... if (LuzEstado[2]<99) output_low(OUT3); 
0131:  MOVF   45,W
0132:  SUBLW  62
0133:  BTFSC  03.0
0134:  BCF    06.3
.................... if (LuzEstado[3]<99) output_low(OUT4); 
0135:  MOVF   46,W
0136:  SUBLW  62
0137:  BTFSC  03.0
0138:  BCF    06.4
.................... if (LuzEstado[4]<99) output_low(OUT5); 
0139:  MOVF   47,W
013A:  SUBLW  62
013B:  BTFSC  03.0
013C:  BCF    06.5
.................... if (LuzEstado[5]<99) output_low(OUT6); 
013D:  MOVF   48,W
013E:  SUBLW  62
013F:  BTFSC  03.0
0140:  BCF    06.6
.................... if (LuzEstado[6]<99) output_low(OUT7); 
0141:  MOVF   49,W
0142:  SUBLW  62
0143:  BTFSC  03.0
0144:  BCF    06.7
.................... if (LuzEstado[7]<99) output_low(OUT8); 
0145:  MOVF   4A,W
0146:  SUBLW  62
0147:  BTFSS  03.0
0148:  GOTO   14D
0149:  BSF    03.5
014A:  BCF    09.1
014B:  BCF    03.5
014C:  BCF    09.1
.................... if (LuzEstado[8]<99) output_low(OUT9); 
014D:  MOVF   4B,W
014E:  SUBLW  62
014F:  BTFSS  03.0
0150:  GOTO   155
0151:  BSF    03.5
0152:  BCF    09.2
0153:  BCF    03.5
0154:  BCF    09.2
.................... if (LuzEstado[9]<99) output_low(OUT10); 
0155:  MOVF   4C,W
0156:  SUBLW  62
0157:  BTFSC  03.0
0158:  BCF    05.2
.................... if (LuzEstado[10]<99) output_low(OUT11); 
0159:  MOVF   4D,W
015A:  SUBLW  62
015B:  BTFSS  03.0
015C:  GOTO   161
015D:  BSF    03.5
015E:  BCF    09.0
015F:  BCF    03.5
0160:  BCF    09.0
.................... if (LuzEstado[11]<99) output_low(OUT12); 
0161:  MOVF   4E,W
0162:  SUBLW  62
0163:  BTFSC  03.0
0164:  BCF    05.5
.................... } 
....................  
.................... if (TMR1H == 74){     
0165:  MOVF   0F,W
0166:  SUBLW  4A
0167:  BTFSS  03.2
0168:  GOTO   1A5
.................... if (LuzEstado[0]<99) output_low(OUT1); 
0169:  MOVF   43,W
016A:  SUBLW  62
016B:  BTFSC  03.0
016C:  BCF    06.1
.................... if (LuzEstado[1]<99) output_low(OUT2); 
016D:  MOVF   44,W
016E:  SUBLW  62
016F:  BTFSC  03.0
0170:  BCF    06.2
.................... if (LuzEstado[2]<99) output_low(OUT3); 
0171:  MOVF   45,W
0172:  SUBLW  62
0173:  BTFSC  03.0
0174:  BCF    06.3
.................... if (LuzEstado[3]<99) output_low(OUT4); 
0175:  MOVF   46,W
0176:  SUBLW  62
0177:  BTFSC  03.0
0178:  BCF    06.4
.................... if (LuzEstado[4]<99) output_low(OUT5); 
0179:  MOVF   47,W
017A:  SUBLW  62
017B:  BTFSC  03.0
017C:  BCF    06.5
.................... if (LuzEstado[5]<99) output_low(OUT6); 
017D:  MOVF   48,W
017E:  SUBLW  62
017F:  BTFSC  03.0
0180:  BCF    06.6
.................... if (LuzEstado[6]<99) output_low(OUT7); 
0181:  MOVF   49,W
0182:  SUBLW  62
0183:  BTFSC  03.0
0184:  BCF    06.7
.................... if (LuzEstado[7]<99) output_low(OUT8); 
0185:  MOVF   4A,W
0186:  SUBLW  62
0187:  BTFSS  03.0
0188:  GOTO   18D
0189:  BSF    03.5
018A:  BCF    09.1
018B:  BCF    03.5
018C:  BCF    09.1
.................... if (LuzEstado[8]<99) output_low(OUT9); 
018D:  MOVF   4B,W
018E:  SUBLW  62
018F:  BTFSS  03.0
0190:  GOTO   195
0191:  BSF    03.5
0192:  BCF    09.2
0193:  BCF    03.5
0194:  BCF    09.2
.................... if (LuzEstado[9]<99) output_low(OUT10); 
0195:  MOVF   4C,W
0196:  SUBLW  62
0197:  BTFSC  03.0
0198:  BCF    05.2
.................... if (LuzEstado[10]<99) output_low(OUT11); 
0199:  MOVF   4D,W
019A:  SUBLW  62
019B:  BTFSS  03.0
019C:  GOTO   1A1
019D:  BSF    03.5
019E:  BCF    09.0
019F:  BCF    03.5
01A0:  BCF    09.0
.................... if (LuzEstado[11]<99) output_low(OUT12); 
01A1:  MOVF   4E,W
01A2:  SUBLW  62
01A3:  BTFSC  03.0
01A4:  BCF    05.5
.................... } 
....................  
01A5:  BCF    0C.1
01A6:  BCF    0A.3
01A7:  BCF    0A.4
01A8:  GOTO   027
.................... } // Fn 
....................  

Configuration Fuses:
   Word  1: 3F35   XT WDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
